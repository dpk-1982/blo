<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="theme-color" content="#3b82f6">
    <title id="pageTitle">Advanced Family Tree Management System</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            box-sizing: border-box;
            font-family: 'Inter', sans-serif;
        }
        
        /* Mobile and Tablet Optimizations */
        @media (max-width: 768px) {
            .container {
                padding: 0.75rem !important;
            }
            
            .glass-effect {
                padding: 1rem !important;
                margin: 0.5rem !important;
                border-radius: 1.5rem !important;
            }
            
            .family-card {
                padding: 1rem !important;
                margin-bottom: 1rem !important;
            }
            
            .grid {
                grid-template-columns: 1fr !important;
                gap: 0.75rem !important;
            }
            
            .lg\:grid-cols-3 {
                grid-template-columns: 1fr !important;
            }
            
            .md\:grid-cols-2 {
                grid-template-columns: 1fr !important;
            }
            
            .xl\:grid-cols-6 {
                grid-template-columns: repeat(2, 1fr) !important;
            }
            
            .lg\:grid-cols-4 {
                grid-template-columns: repeat(2, 1fr) !important;
            }
            
            .lg\:grid-cols-5 {
                grid-template-columns: 1fr !important;
            }
            
            .lg\:grid-cols-6 {
                grid-template-columns: repeat(3, 1fr) !important;
            }
            
            .text-6xl {
                font-size: 2.5rem !important;
                line-height: 1.1 !important;
            }
            
            .text-5xl {
                font-size: 2rem !important;
                line-height: 1.1 !important;
            }
            
            .text-4xl {
                font-size: 1.75rem !important;
                line-height: 1.2 !important;
            }
            
            .text-3xl {
                font-size: 1.5rem !important;
                line-height: 1.2 !important;
            }
            
            .text-2xl {
                font-size: 1.25rem !important;
            }
            
            .px-8 {
                padding-left: 1rem !important;
                padding-right: 1rem !important;
            }
            
            .py-8 {
                padding-top: 1rem !important;
                padding-bottom: 1rem !important;
            }
            
            .px-12 {
                padding-left: 1rem !important;
                padding-right: 1rem !important;
            }
            
            .py-12 {
                padding-top: 1.5rem !important;
                padding-bottom: 1.5rem !important;
            }
            
            .space-x-8 > * + * {
                margin-left: 0.5rem !important;
            }
            
            .space-x-6 > * + * {
                margin-left: 0.5rem !important;
            }
            
            .space-x-4 > * + * {
                margin-left: 0.5rem !important;
            }
            
            .gap-8 {
                gap: 1rem !important;
            }
            
            .gap-6 {
                gap: 0.75rem !important;
            }
            
            .mb-8 {
                margin-bottom: 1.5rem !important;
            }
            
            .mb-6 {
                margin-bottom: 1rem !important;
            }
            
            .flex-wrap {
                flex-wrap: wrap;
            }
            
            .modal-content {
                margin: 0.5rem;
                max-height: 95vh;
                overflow-y: auto;
            }
            
            .button-mobile {
                padding: 0.75rem 1rem !important;
                font-size: 0.875rem !important;
                min-height: 44px;
                border-radius: 0.75rem !important;
            }
            
            .input-mobile {
                padding: 0.875rem !important;
                font-size: 1rem !important;
                min-height: 44px;
                border-radius: 0.75rem !important;
            }
            
            .touch-friendly {
                min-height: 44px;
                min-width: 44px;
            }
            
            /* Header specific mobile styles */
            .lg\:mr-8 {
                margin-right: 0 !important;
                margin-bottom: 1.5rem !important;
            }
            
            .lg\:text-left {
                text-align: center !important;
            }
            
            .lg\:justify-start {
                justify-content: center !important;
            }
            
            /* Feature cards mobile layout */
            .md\:grid-cols-3 {
                grid-template-columns: 1fr !important;
            }
            
            /* Stats preview mobile */
            .gap-8 {
                gap: 1rem !important;
            }
            
            /* Floating particles - hide on mobile for performance */
            .animate-bounce {
                display: none !important;
            }
        }
        
        @media (max-width: 480px) {
            .container {
                padding: 0.5rem !important;
            }
            
            .glass-effect {
                padding: 0.75rem !important;
                margin: 0.25rem !important;
            }
            
            .text-lg {
                font-size: 1rem !important;
            }
            
            .px-6 {
                padding-left: 0.75rem !important;
                padding-right: 0.75rem !important;
            }
            
            .py-6 {
                padding-top: 0.75rem !important;
                padding-bottom: 0.75rem !important;
            }
            
            .gap-6 {
                gap: 0.5rem !important;
            }
            
            .gap-4 {
                gap: 0.5rem !important;
            }
            
            .space-x-3 > * + * {
                margin-left: 0.25rem !important;
            }
            
            .lg\:grid-cols-6 {
                grid-template-columns: repeat(2, 1fr) !important;
            }
            
            .text-6xl {
                font-size: 2rem !important;
            }
            
            .text-5xl {
                font-size: 1.75rem !important;
            }
            
            .w-28 {
                width: 4rem !important;
                height: 4rem !important;
            }
            
            .w-24 {
                width: 3.5rem !important;
                height: 3.5rem !important;
            }
        }
        
        @media (max-width: 480px) {
            .text-lg {
                font-size: 1rem !important;
            }
            
            .px-6 {
                padding-left: 0.75rem !important;
                padding-right: 0.75rem !important;
            }
            
            .py-6 {
                padding-top: 0.75rem !important;
                padding-bottom: 0.75rem !important;
            }
            
            .gap-6 {
                gap: 0.75rem !important;
            }
            
            .gap-4 {
                gap: 0.5rem !important;
            }
            
            .space-x-3 > * + * {
                margin-left: 0.25rem !important;
            }
        }
        
        /* Smooth Touch Interactions */
        .touch-smooth {
            -webkit-tap-highlight-color: transparent;
            touch-action: manipulation;
            transition: all 0.2s ease;
        }
        
        .touch-smooth:active {
            transform: scale(0.98);
        }
        
        /* Improved Scrolling */
        .smooth-scroll {
            -webkit-overflow-scrolling: touch;
            scroll-behavior: smooth;
        }
        
        /* Better Modal Handling on Mobile */
        @media (max-width: 768px) {
            .modal-backdrop {
                padding: 0 !important;
            }
            
            .modal-content-mobile {
                border-radius: 0 !important;
                max-height: 100vh !important;
                height: 100vh !important;
                width: 100vw !important;
                max-width: 100vw !important;
            }
        }
        
        /* Marquee Styles */
        .marquee-container {
            overflow: hidden;
            white-space: nowrap;
            background: linear-gradient(90deg, rgba(59, 130, 246, 0.1) 0%, rgba(147, 51, 234, 0.1) 100%);
            border: 1px solid rgba(59, 130, 246, 0.2);
            border-radius: 0.5rem;
            padding: 0.75rem 0;
        }
        
        .marquee-text {
            display: inline-block;
            animation: marquee 20s linear infinite;
            color: #1f2937;
            font-weight: 500;
        }
        
        @keyframes marquee {
            0% { transform: translateX(100%); }
            100% { transform: translateX(-100%); }
        }
        
        .marquee-container:hover .marquee-text {
            animation-play-state: paused;
        }
        
        /* Custom Page Title Styles */
        .custom-page-title {
            background: linear-gradient(135deg, #3b82f6, #8b5cf6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-weight: 800;
        }
        
        .system-bg {
            background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 25%, #3730a3 50%, #4338ca 75%, #6366f1 100%);
            min-height: 100vh;
            position: relative;
        }
        
        .system-bg.theme-corporate {
            background: linear-gradient(135deg, #374151 0%, #4b5563 25%, #6b7280 50%, #9ca3af 75%, #d1d5db 100%);
        }
        
        .system-bg.theme-modern {
            background: linear-gradient(135deg, #0f172a 0%, #1e293b 25%, #334155 50%, #475569 75%, #64748b 100%);
        }
        
        .system-bg.theme-elegant {
            background: linear-gradient(135deg, #581c87 0%, #7c3aed 25%, #8b5cf6 50%, #a78bfa 75%, #c4b5fd 100%);
        }
        
        .system-bg.theme-light {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 25%, #cbd5e1 50%, #94a3b8 75%, #64748b 100%);
        }
        
        .system-bg.theme-ocean {
            background: linear-gradient(135deg, #0c4a6e 0%, #0369a1 25%, #0284c7 50%, #0ea5e9 75%, #38bdf8 100%);
        }
        
        .system-bg.theme-sunset {
            background: linear-gradient(135deg, #7c2d12 0%, #ea580c 25%, #f97316 50%, #fb923c 75%, #fed7aa 100%);
        }
        
        .system-bg.theme-forest {
            background: linear-gradient(135deg, #14532d 0%, #166534 25%, #15803d 50%, #16a34a 75%, #4ade80 100%);
        }
        
        .system-bg.theme-royal {
            background: linear-gradient(135deg, #1e1b4b 0%, #3730a3 25%, #4f46e5 50%, #6366f1 75%, #a5b4fc 100%);
        }
        
        .system-bg.theme-rose {
            background: linear-gradient(135deg, #881337 0%, #be185d 25%, #e11d48 50%, #f43f5e 75%, #fda4af 100%);
        }
        
        .system-bg.theme-emerald {
            background: linear-gradient(135deg, #064e3b 0%, #047857 25%, #059669 50%, #10b981 75%, #6ee7b7 100%);
        }
        
        .system-bg.theme-amber {
            background: linear-gradient(135deg, #78350f 0%, #92400e 25%, #d97706 50%, #f59e0b 75%, #fcd34d 100%);
        }
        
        .system-bg.theme-midnight {
            background: linear-gradient(135deg, #0c0a09 0%, #1c1917 25%, #292524 50%, #44403c 75%, #78716c 100%);
        }
        
        .system-bg.theme-galaxy {
            background: linear-gradient(135deg, #1e1b4b 0%, #312e81 25%, #4c1d95 50%, #7c3aed 75%, #c4b5fd 100%);
        }
        
        .system-bg.theme-crimson {
            background: linear-gradient(135deg, #450a0a 0%, #7f1d1d 25%, #b91c1c 50%, #dc2626 75%, #fca5a5 100%);
        }
        
        .system-bg.theme-teal {
            background: linear-gradient(135deg, #042f2e 0%, #134e4a 25%, #0f766e 50%, #14b8a6 75%, #5eead4 100%);
        }
        
        .system-bg::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="professional-pattern" width="40" height="40" patternUnits="userSpaceOnUse"><rect x="0" y="0" width="2" height="2" fill="white" opacity="0.05"/><rect x="20" y="20" width="2" height="2" fill="white" opacity="0.08"/><rect x="10" y="30" width="1" height="1" fill="white" opacity="0.06"/></pattern></defs><rect width="100" height="100" fill="url(%23professional-pattern)"/></svg>');
            pointer-events: none;
        }
        
        .glass-effect {
            background: rgba(255, 255, 255, 0.12);
            backdrop-filter: blur(25px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }
        
        .glass-card {
            background: rgba(255, 255, 255, 0.08);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.15);
            transition: all 0.3s ease;
        }
        
        .glass-card:hover {
            background: rgba(255, 255, 255, 0.15);
            transform: translateY(-3px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        }
        
        .family-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border-left: 5px solid #3b82f6;
        }
        
        .family-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }
        
        .member-card {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            transition: all 0.3s ease;
        }
        
        .member-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            border-color: #3b82f6;
        }
        
        .head-card {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            color: white;
            border: 3px solid #1e40af;
        }
        
        .animated-bg {
            background: linear-gradient(-45deg, #1e3a8a, #1e40af, #3730a3, #4338ca);
            background-size: 400% 400%;
            animation: gradientShift 20s ease infinite;
        }
        
        .animated-bg.theme-corporate {
            background: linear-gradient(-45deg, #374151, #4b5563, #6b7280, #9ca3af);
        }
        
        .animated-bg.theme-modern {
            background: linear-gradient(-45deg, #0f172a, #1e293b, #334155, #475569);
        }
        
        .animated-bg.theme-elegant {
            background: linear-gradient(-45deg, #581c87, #7c3aed, #8b5cf6, #a78bfa);
        }
        
        .animated-bg.theme-light {
            background: linear-gradient(-45deg, #f8fafc, #e2e8f0, #cbd5e1, #94a3b8);
        }
        
        .animated-bg.theme-ocean {
            background: linear-gradient(-45deg, #0c4a6e, #0369a1, #0284c7, #0ea5e9);
        }
        
        .animated-bg.theme-sunset {
            background: linear-gradient(-45deg, #7c2d12, #ea580c, #f97316, #fb923c);
        }
        
        .animated-bg.theme-forest {
            background: linear-gradient(-45deg, #14532d, #166534, #15803d, #16a34a);
        }
        
        .animated-bg.theme-royal {
            background: linear-gradient(-45deg, #1e1b4b, #3730a3, #4f46e5, #6366f1);
        }
        
        .animated-bg.theme-rose {
            background: linear-gradient(-45deg, #881337, #be185d, #e11d48, #f43f5e);
        }
        
        .animated-bg.theme-emerald {
            background: linear-gradient(-45deg, #064e3b, #047857, #059669, #10b981);
        }
        
        .animated-bg.theme-amber {
            background: linear-gradient(-45deg, #78350f, #92400e, #d97706, #f59e0b);
        }
        
        .animated-bg.theme-midnight {
            background: linear-gradient(-45deg, #0c0a09, #1c1917, #292524, #44403c);
        }
        
        .animated-bg.theme-galaxy {
            background: linear-gradient(-45deg, #1e1b4b, #312e81, #4c1d95, #7c3aed);
        }
        
        .animated-bg.theme-crimson {
            background: linear-gradient(-45deg, #450a0a, #7f1d1d, #b91c1c, #dc2626);
        }
        
        .animated-bg.theme-teal {
            background: linear-gradient(-45deg, #042f2e, #134e4a, #0f766e, #14b8a6);
        }
        
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        .slide-in {
            animation: slideIn 0.5s ease-out;
        }
        
        @keyframes slideIn {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .pulse-glow {
            animation: pulseGlow 2s ease-in-out infinite alternate;
        }
        
        @keyframes pulseGlow {
            from { box-shadow: 0 0 20px rgba(255, 255, 255, 0.3); }
            to { box-shadow: 0 0 30px rgba(255, 255, 255, 0.6); }
        }
        
        .modal-backdrop {
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(10px);
        }
        
        .custom-scrollbar::-webkit-scrollbar {
            width: 8px;
        }
        
        .custom-scrollbar::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
        }
        
        .custom-scrollbar::-webkit-scrollbar-thumb {
            background: rgba(255, 255, 255, 0.3);
            border-radius: 4px;
        }
        
        /* Font Size Classes */
        .font-size-small { font-size: 0.875rem; }
        .font-size-medium { font-size: 1rem; }
        .font-size-large { font-size: 1.125rem; }
        .font-size-extra-large { font-size: 1.25rem; }
        .font-size-huge { font-size: 1.5rem; }
        
        /* Font Color Classes */
        .font-color-default { color: inherit; }
        .font-color-dark { color: #1f2937; }
        .font-color-light { color: #f9fafb; }
        .font-color-blue { color: #3b82f6; }
        .font-color-green { color: #10b981; }
        .font-color-purple { color: #8b5cf6; }
        .font-color-red { color: #ef4444; }
        .font-color-orange { color: #f59e0b; }
        .font-color-pink { color: #ec4899; }
        .font-color-indigo { color: #6366f1; }
        
        /* Apply font settings to body */
        body.font-size-small { font-size: 0.875rem; }
        body.font-size-medium { font-size: 1rem; }
        body.font-size-large { font-size: 1.125rem; }
        body.font-size-extra-large { font-size: 1.25rem; }
        body.font-size-huge { font-size: 1.5rem; }
        
        body.font-color-default { color: inherit; }
        body.font-color-dark { color: #1f2937; }
        body.font-color-light { color: #f9fafb; }
        body.font-color-blue { color: #3b82f6; }
        body.font-color-green { color: #10b981; }
        body.font-color-purple { color: #8b5cf6; }
        body.font-color-red { color: #ef4444; }
        body.font-color-orange { color: #f59e0b; }
        body.font-color-pink { color: #ec4899; }
        body.font-color-indigo { color: #6366f1; }
        
        .status-verified { color: #10b981; }
        .status-pending { color: #f59e0b; }
        .status-incomplete { color: #ef4444; }
        
        .age-group-child { background: linear-gradient(135deg, #fbbf24, #f59e0b); }
        .age-group-teen { background: linear-gradient(135deg, #8b5cf6, #7c3aed); }
        .age-group-adult { background: linear-gradient(135deg, #10b981, #059669); }
        .age-group-senior { background: linear-gradient(135deg, #ef4444, #dc2626); }
        
        .gender-male { border-left-color: #3b82f6; }
        .gender-female { border-left-color: #ec4899; }
        .gender-other { border-left-color: #8b5cf6; }
        
        .family-tree-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1rem;
        }
        
        .connection-line {
            position: relative;
        }
        
        .connection-line::before {
            content: '';
            position: absolute;
            top: 50%;
            left: -20px;
            width: 40px;
            height: 2px;
            background: #d1d5db;
            transform: translateY(-50%);
        }
    </style>
</head>
<body class="system-bg animated-bg">
    <div class="container mx-auto px-4 py-8 relative z-10">
        <!-- Header -->
        <div class="text-center mb-8 slide-in">
            <!-- Marquee Section -->
            <div id="marqueeSection" class="mb-8 hidden">
                <div class="marquee-container shadow-lg">
                    <div class="marquee-text" id="marqueeText">
                        Welcome to Family Tree Management System - Your trusted platform for managing family records and genealogy data
                    </div>
                </div>
            </div>
            
            <!-- Main Header Card -->
            <div class="relative overflow-hidden">
                <!-- Enhanced Background Pattern -->
                <div class="absolute inset-0 opacity-20">
                    <svg class="w-full h-full" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
                        <defs>
                            <pattern id="tree-pattern" x="0" y="0" width="40" height="40" patternUnits="userSpaceOnUse">
                                <circle cx="20" cy="20" r="2" fill="white" opacity="0.4"/>
                                <path d="M20 10 L20 30 M10 20 L30 20" stroke="white" stroke-width="1" opacity="0.3"/>
                                <circle cx="10" cy="10" r="1" fill="white" opacity="0.2"/>
                                <circle cx="30" cy="30" r="1" fill="white" opacity="0.2"/>
                            </pattern>
                            <radialGradient id="glow" cx="50%" cy="50%" r="50%">
                                <stop offset="0%" style="stop-color:white;stop-opacity:0.3" />
                                <stop offset="100%" style="stop-color:white;stop-opacity:0" />
                            </radialGradient>
                        </defs>
                        <rect width="100%" height="100%" fill="url(#tree-pattern)"/>
                        <ellipse cx="50%" cy="50%" rx="40%" ry="30%" fill="url(#glow)"/>
                    </svg>
                </div>
                
                <!-- Animated Background Elements -->
                <div class="absolute inset-0 overflow-hidden">
                    <div class="absolute top-10 left-10 w-20 h-20 bg-white/10 rounded-full blur-xl animate-pulse"></div>
                    <div class="absolute bottom-10 right-10 w-32 h-32 bg-white/5 rounded-full blur-2xl animate-pulse" style="animation-delay: 1s;"></div>
                    <div class="absolute top-1/2 left-1/4 w-16 h-16 bg-white/8 rounded-full blur-lg animate-pulse" style="animation-delay: 2s;"></div>
                </div>
                
                <div class="relative glass-effect rounded-3xl p-6 md:p-10 lg:p-12 mb-8 pulse-glow border-2 border-white/30 shadow-2xl">
                    <!-- Top Section with Logo and Title -->
                    <div class="flex flex-col lg:flex-row items-center justify-center mb-6 lg:mb-8">
                        <!-- Enhanced Animated Logo -->
                        <div class="relative mb-6 lg:mb-0 lg:mr-8">
                            <div class="w-24 h-24 md:w-28 md:h-28 lg:w-32 lg:h-32 bg-gradient-to-br from-white/40 to-white/20 rounded-full flex items-center justify-center backdrop-blur-sm border-3 border-white/40 shadow-2xl transform hover:scale-110 transition-all duration-500 hover:rotate-12">
                                <!-- Enhanced Tree Icon -->
                                <div class="relative">
                                    <svg class="w-14 h-14 md:w-16 md:h-16 lg:w-18 lg:h-18 text-white drop-shadow-lg" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M12 2L13.09 8.26L22 9L17 14L18.18 22.74L12 19.27L5.82 22.74L7 14L2 9L10.91 8.26L12 2Z"/>
                                    </svg>
                                    <!-- Enhanced Crown overlay -->
                                    <div class="absolute -top-3 -right-3 w-8 h-8 md:w-9 md:h-9 bg-gradient-to-r from-yellow-400 via-yellow-500 to-yellow-600 rounded-full flex items-center justify-center shadow-xl border-2 border-white/50 animate-bounce">
                                        <span class="text-white text-sm md:text-base font-bold">👑</span>
                                    </div>
                                </div>
                            </div>
                            <!-- Enhanced Floating particles -->
                            <div class="absolute -top-2 -left-2 w-4 h-4 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full animate-bounce opacity-80" style="animation-delay: 0s; animation-duration: 2s;"></div>
                            <div class="absolute -bottom-2 -right-2 w-3 h-3 bg-gradient-to-r from-green-400 to-blue-400 rounded-full animate-bounce opacity-70" style="animation-delay: 0.7s; animation-duration: 2.5s;"></div>
                            <div class="absolute top-1/2 -left-3 w-2 h-2 bg-gradient-to-r from-pink-400 to-red-400 rounded-full animate-bounce opacity-60" style="animation-delay: 1.4s; animation-duration: 3s;"></div>
                            <div class="absolute top-1/4 -right-1 w-2 h-2 bg-gradient-to-r from-yellow-400 to-orange-400 rounded-full animate-bounce opacity-75" style="animation-delay: 2.1s; animation-duration: 2.2s;"></div>
                        </div>
                        
                        <!-- Enhanced Title Section -->
                        <div class="text-center lg:text-left">
                            <div class="mb-6">
                                <!-- Main Title with Enhanced Styling -->
                                <h1 class="text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-black text-transparent bg-clip-text bg-gradient-to-r from-white via-blue-100 via-purple-100 to-white mb-4 leading-tight drop-shadow-2xl" id="customPageTitle">
                                    Family Tree Management
                                </h1>
                                
                                <!-- Enhanced Subtitle with Animation -->
                                <div class="flex items-center justify-center lg:justify-start space-x-3 mb-4">
                                    <div class="h-1 w-12 bg-gradient-to-r from-transparent via-white/80 to-transparent rounded-full animate-pulse"></div>
                                    <p class="text-white/95 text-lg md:text-xl lg:text-2xl font-bold tracking-wide bg-white/10 px-4 py-2 rounded-full backdrop-blur-sm border border-white/20">
                                        🏆 Professional Records & Analytics Platform
                                    </p>
                                    <div class="h-1 w-12 bg-gradient-to-l from-transparent via-white/80 to-transparent rounded-full animate-pulse"></div>
                                </div>
                                
                                <!-- Enhanced Description -->
                                <p class="text-white/90 text-base md:text-lg lg:text-xl max-w-3xl mx-auto lg:mx-0 leading-relaxed bg-white/5 p-4 rounded-2xl backdrop-blur-sm border border-white/10">
                                    🌟 Comprehensive family management with advanced analytics, secure data storage, and intuitive genealogy tracking for modern families
                                </p>
                                
                                <!-- New Feature Badges -->
                                <div class="flex flex-wrap justify-center lg:justify-start gap-2 mt-4">
                                    <span class="bg-green-500/20 text-green-100 px-3 py-1 rounded-full text-sm font-medium border border-green-400/30">✅ Secure Storage</span>
                                    <span class="bg-blue-500/20 text-blue-100 px-3 py-1 rounded-full text-sm font-medium border border-blue-400/30">📊 Advanced Analytics</span>
                                    <span class="bg-purple-500/20 text-purple-100 px-3 py-1 rounded-full text-sm font-medium border border-purple-400/30">🔒 Privacy Protected</span>
                                    <span class="bg-orange-500/20 text-orange-100 px-3 py-1 rounded-full text-sm font-medium border border-orange-400/30">📱 Mobile Friendly</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Enhanced Feature Highlights -->
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8 mb-8">
                        <div class="group bg-gradient-to-br from-white/15 to-white/5 backdrop-blur-md rounded-3xl p-6 md:p-8 border-2 border-white/30 hover:border-white/50 transition-all duration-500 transform hover:scale-105 hover:-translate-y-2 shadow-2xl hover:shadow-3xl">
                            <div class="flex flex-col items-center text-center space-y-4">
                                <div class="w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-blue-400 via-blue-500 to-blue-600 rounded-2xl flex items-center justify-center shadow-2xl group-hover:rotate-12 transition-transform duration-500 border-2 border-white/20">
                                    <span class="text-white text-2xl md:text-3xl drop-shadow-lg">👨‍👩‍👧‍👦</span>
                                </div>
                                <div>
                                    <h3 class="text-white font-bold text-lg md:text-xl mb-2 group-hover:text-blue-100 transition-colors">Family Records</h3>
                                    <p class="text-white/80 text-sm md:text-base leading-relaxed">Complete member profiles with photos, documents, and detailed information</p>
                                    <div class="mt-3 flex justify-center space-x-2">
                                        <span class="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></span>
                                        <span class="w-2 h-2 bg-blue-300 rounded-full animate-pulse" style="animation-delay: 0.2s;"></span>
                                        <span class="w-2 h-2 bg-blue-200 rounded-full animate-pulse" style="animation-delay: 0.4s;"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="group bg-gradient-to-br from-white/15 to-white/5 backdrop-blur-md rounded-3xl p-6 md:p-8 border-2 border-white/30 hover:border-white/50 transition-all duration-500 transform hover:scale-105 hover:-translate-y-2 shadow-2xl hover:shadow-3xl">
                            <div class="flex flex-col items-center text-center space-y-4">
                                <div class="w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-green-400 via-green-500 to-green-600 rounded-2xl flex items-center justify-center shadow-2xl group-hover:rotate-12 transition-transform duration-500 border-2 border-white/20">
                                    <span class="text-white text-2xl md:text-3xl drop-shadow-lg">📊</span>
                                </div>
                                <div>
                                    <h3 class="text-white font-bold text-lg md:text-xl mb-2 group-hover:text-green-100 transition-colors">Advanced Analytics</h3>
                                    <p class="text-white/80 text-sm md:text-base leading-relaxed">Detailed insights, reports, and statistical analysis of family data</p>
                                    <div class="mt-3 flex justify-center space-x-2">
                                        <span class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></span>
                                        <span class="w-2 h-2 bg-green-300 rounded-full animate-pulse" style="animation-delay: 0.2s;"></span>
                                        <span class="w-2 h-2 bg-green-200 rounded-full animate-pulse" style="animation-delay: 0.4s;"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="group bg-gradient-to-br from-white/15 to-white/5 backdrop-blur-md rounded-3xl p-6 md:p-8 border-2 border-white/30 hover:border-white/50 transition-all duration-500 transform hover:scale-105 hover:-translate-y-2 shadow-2xl hover:shadow-3xl">
                            <div class="flex flex-col items-center text-center space-y-4">
                                <div class="w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-purple-400 via-purple-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-2xl group-hover:rotate-12 transition-transform duration-500 border-2 border-white/20">
                                    <span class="text-white text-2xl md:text-3xl drop-shadow-lg">🔒</span>
                                </div>
                                <div>
                                    <h3 class="text-white font-bold text-lg md:text-xl mb-2 group-hover:text-purple-100 transition-colors">Secure Access</h3>
                                    <p class="text-white/80 text-sm md:text-base leading-relaxed">Protected data management with role-based access control</p>
                                    <div class="mt-3 flex justify-center space-x-2">
                                        <span class="w-2 h-2 bg-purple-400 rounded-full animate-pulse"></span>
                                        <span class="w-2 h-2 bg-purple-300 rounded-full animate-pulse" style="animation-delay: 0.2s;"></span>
                                        <span class="w-2 h-2 bg-purple-200 rounded-full animate-pulse" style="animation-delay: 0.4s;"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Enhanced Stats Preview -->
                    <div class="mt-8 pt-6 border-t-2 border-white/30">
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <div class="group bg-gradient-to-br from-white/20 to-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/30 hover:border-white/50 transition-all duration-300 hover:scale-105">
                                <div class="flex items-center space-x-4">
                                    <div class="w-12 h-12 bg-gradient-to-br from-blue-400 to-blue-600 rounded-xl flex items-center justify-center shadow-lg group-hover:rotate-12 transition-transform duration-300">
                                        <span class="text-white text-xl">👨‍👩‍👧‍👦</span>
                                    </div>
                                    <div>
                                        <div class="text-3xl md:text-4xl font-bold text-white group-hover:text-blue-100 transition-colors" id="headerTotalFamilies">0</div>
                                        <div class="text-white/80 text-sm font-medium">Total Families</div>
                                    </div>
                                </div>
                                <div class="mt-3 h-1 bg-white/20 rounded-full overflow-hidden">
                                    <div class="h-full bg-gradient-to-r from-blue-400 to-blue-600 rounded-full animate-pulse" style="width: 75%;"></div>
                                </div>
                            </div>
                            
                            <div class="group bg-gradient-to-br from-white/20 to-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/30 hover:border-white/50 transition-all duration-300 hover:scale-105">
                                <div class="flex items-center space-x-4">
                                    <div class="w-12 h-12 bg-gradient-to-br from-green-400 to-green-600 rounded-xl flex items-center justify-center shadow-lg group-hover:rotate-12 transition-transform duration-300">
                                        <span class="text-white text-xl">👥</span>
                                    </div>
                                    <div>
                                        <div class="text-3xl md:text-4xl font-bold text-white group-hover:text-green-100 transition-colors" id="headerTotalMembers">0</div>
                                        <div class="text-white/80 text-sm font-medium">Total Members</div>
                                    </div>
                                </div>
                                <div class="mt-3 h-1 bg-white/20 rounded-full overflow-hidden">
                                    <div class="h-full bg-gradient-to-r from-green-400 to-green-600 rounded-full animate-pulse" style="width: 85%;"></div>
                                </div>
                            </div>
                            
                            <div class="group bg-gradient-to-br from-white/20 to-white/10 backdrop-blur-sm rounded-2xl p-6 border border-white/30 hover:border-white/50 transition-all duration-300 hover:scale-105">
                                <div class="flex items-center space-x-4">
                                    <div class="w-12 h-12 bg-gradient-to-br from-purple-400 to-purple-600 rounded-xl flex items-center justify-center shadow-lg group-hover:rotate-12 transition-transform duration-300">
                                        <span class="text-white text-xl">📊</span>
                                    </div>
                                    <div>
                                        <div class="text-3xl md:text-4xl font-bold text-white group-hover:text-purple-100 transition-colors" id="headerActiveRecords">0</div>
                                        <div class="text-white/80 text-sm font-medium">Active Records</div>
                                    </div>
                                </div>
                                <div class="mt-3 h-1 bg-white/20 rounded-full overflow-hidden">
                                    <div class="h-full bg-gradient-to-r from-purple-400 to-purple-600 rounded-full animate-pulse" style="width: 90%;"></div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Additional System Status -->
                        <div class="mt-6 text-center">
                            <div class="inline-flex items-center space-x-2 bg-white/10 px-4 py-2 rounded-full backdrop-blur-sm border border-white/20">
                                <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                                <span class="text-white/90 text-sm font-medium">System Online & Secure</span>
                                <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse" style="animation-delay: 0.5s;"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Admin Login Section -->
        <div id="loginSection" class="max-w-lg mx-auto glass-effect rounded-3xl p-4 md:p-10 mb-6 md:mb-8 slide-in">
            <div class="text-center mb-6 md:mb-8">
                <div class="w-16 h-16 md:w-20 md:h-20 bg-white/20 rounded-2xl flex items-center justify-center mx-auto mb-4 md:mb-6">
                    <svg class="w-8 h-8 md:w-12 md:h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
                    </svg>
                </div>
                <h2 class="text-xl md:text-3xl font-bold text-white mb-2 md:mb-3">Administrative Access</h2>
                <p class="text-white/80 text-sm md:text-lg">Secure authentication required</p>
            </div>
            <div class="space-y-4 md:space-y-6">
                <div class="relative">
                    <input type="text" id="adminUsername" placeholder="Admin Username" 
                           class="w-full px-4 md:px-6 py-3 md:py-4 rounded-xl border-2 border-white/20 bg-white/10 text-white placeholder-white/60 focus:ring-2 focus:ring-blue-400 focus:border-transparent backdrop-blur-sm transition-all input-mobile touch-smooth">
                    <div class="absolute inset-y-0 right-0 pr-4 md:pr-6 flex items-center">
                        <svg class="w-4 h-4 md:w-5 md:h-5 text-white/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </div>
                </div>
                <div class="relative">
                    <input type="password" id="adminPassword" placeholder="Admin Password" 
                           class="w-full px-4 md:px-6 py-3 md:py-4 rounded-xl border-2 border-white/20 bg-white/10 text-white placeholder-white/60 focus:ring-2 focus:ring-blue-400 focus:border-transparent backdrop-blur-sm transition-all input-mobile touch-smooth">
                    <div class="absolute inset-y-0 right-0 pr-4 md:pr-6 flex items-center">
                        <svg class="w-4 h-4 md:w-5 md:h-5 text-white/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                    </div>
                </div>
                <button onclick="adminLogin()" class="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-bold py-3 md:py-4 px-4 md:px-6 rounded-xl transition-all transform hover:scale-105 shadow-lg button-mobile touch-smooth">
                    🚀 Access Family System
                </button>
                <div class="mt-3 md:mt-4 text-center">
                    <p class="text-white/70 text-xs md:text-sm">
                        💡 <strong>Hint:</strong> Use 'masteradmin' for full system control
                    </p>
                </div>
            </div>
            <div id="loginError" class="text-red-300 text-xs md:text-sm mt-3 md:mt-4 p-2 md:p-3 rounded-lg bg-red-500/20 hidden"></div>
        </div>

        <!-- Main Dashboard -->
        <div id="mainDashboard" class="hidden">
            <!-- Dashboard Header -->
            <div class="glass-effect rounded-2xl p-3 md:p-6 mb-6 md:mb-8 slide-in">
                <div class="flex flex-col lg:flex-row items-start lg:items-center justify-between gap-4">
                    <div class="flex-1">
                        <h2 class="text-xl md:text-3xl font-bold text-white">🌳 Family Tree Dashboard</h2>
                        <p class="text-white/80 text-sm md:text-base">Comprehensive family management with detailed analytics</p>
                    </div>
                    <div class="flex flex-wrap gap-2 md:gap-3 w-full lg:w-auto">
                        <button onclick="showAddFamily()" class="flex-1 lg:flex-none bg-emerald-600 hover:bg-emerald-700 text-white px-3 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all transform hover:scale-105 shadow-lg button-mobile touch-smooth">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                            </svg>
                            <span class="text-xs md:text-sm">Add Family</span>
                        </button>
                        <button onclick="showColumnManager()" class="flex-1 lg:flex-none bg-indigo-600 hover:bg-indigo-700 text-white px-3 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all shadow-lg button-mobile touch-smooth">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                            </svg>
                            <span class="text-xs md:text-sm">Settings</span>
                        </button>
                        <button onclick="showPageTitleManager()" id="pageTitleBtn" class="flex-1 lg:flex-none bg-purple-600 hover:bg-purple-700 text-white px-3 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all shadow-lg button-mobile touch-smooth hidden">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                            </svg>
                            <span class="text-xs md:text-sm">Title & Marquee</span>
                        </button>
                        <button onclick="showThemeManager()" id="themeManagerBtn" class="flex-1 lg:flex-none bg-violet-600 hover:bg-violet-700 text-white px-3 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all shadow-lg button-mobile touch-smooth hidden">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z"/>
                            </svg>
                            <span class="text-xs md:text-sm">Themes</span>
                        </button>
                        <button onclick="showFirebaseManager()" id="firebaseManagerBtn" class="flex-1 lg:flex-none bg-orange-600 hover:bg-orange-700 text-white px-3 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all shadow-lg button-mobile touch-smooth hidden">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"/>
                            </svg>
                            <span class="text-xs md:text-sm">Database</span>
                        </button>
                        <button onclick="showAdvancedTools()" id="advancedToolsBtn" class="flex-1 lg:flex-none bg-teal-600 hover:bg-teal-700 text-white px-3 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all shadow-lg button-mobile touch-smooth hidden">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"/>
                            </svg>
                            <span class="text-xs md:text-sm">Advanced</span>
                        </button>
                        <button onclick="logout()" class="flex-1 lg:flex-none bg-slate-600 hover:bg-slate-700 text-white px-3 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all shadow-lg button-mobile touch-smooth">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                            </svg>
                            <span class="text-xs md:text-sm">Logout</span>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Enhanced Statistics Cards -->
            <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-3 md:gap-4 lg:gap-6 mb-8">
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center hover:scale-105 transition-all duration-300 border border-white/20">
                    <div class="w-12 h-12 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-blue-400 to-blue-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👨‍👩‍👧‍👦</span>
                    </div>
                    <div class="text-white/90 font-medium text-xs md:text-sm mb-1">Total Families</div>
                    <div class="text-xl md:text-2xl font-bold text-blue-300" id="totalFamilies">0</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center hover:scale-105 transition-all duration-300 border border-white/20">
                    <div class="w-12 h-12 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-green-400 to-green-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👥</span>
                    </div>
                    <div class="text-white/90 font-medium text-xs md:text-sm mb-1">Total Members</div>
                    <div class="text-xl md:text-2xl font-bold text-green-300" id="totalMembers">0</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center hover:scale-105 transition-all duration-300 border border-white/20">
                    <div class="w-12 h-12 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-blue-500 to-blue-700 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👨</span>
                    </div>
                    <div class="text-white/90 font-medium text-xs md:text-sm mb-1">Male Members</div>
                    <div class="text-xl md:text-2xl font-bold text-blue-300" id="maleMembers">0</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center hover:scale-105 transition-all duration-300 border border-white/20">
                    <div class="w-12 h-12 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-pink-400 to-pink-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👩</span>
                    </div>
                    <div class="text-white/90 font-medium text-xs md:text-sm mb-1">Female Members</div>
                    <div class="text-xl md:text-2xl font-bold text-pink-300" id="femaleMembers">0</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center hover:scale-105 transition-all duration-300 border border-white/20">
                    <div class="w-12 h-12 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-yellow-400 to-yellow-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👶</span>
                    </div>
                    <div class="text-white/90 font-medium text-xs md:text-sm mb-1">Children (0-17)</div>
                    <div class="text-xl md:text-2xl font-bold text-yellow-300" id="childrenCount">0</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center hover:scale-105 transition-all duration-300 border border-white/20">
                    <div class="w-12 h-12 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-orange-400 to-orange-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👴</span>
                    </div>
                    <div class="text-white/90 font-medium text-xs md:text-sm mb-1">Seniors (60+)</div>
                    <div class="text-xl md:text-2xl font-bold text-orange-300" id="seniorsCount">0</div>
                </div>
            </div>

            <!-- Age Group Statistics -->
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-6 mb-8">
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center age-group-child hover:scale-105 transition-all duration-300 border border-white/20 shadow-xl">
                    <div class="w-14 h-14 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👶</span>
                    </div>
                    <div class="text-white font-semibold text-sm md:text-base mb-1">Children (0-17)</div>
                    <div class="text-xl md:text-2xl font-bold text-white" id="ageGroup0to17">0</div>
                    <div class="text-white/70 text-xs mt-1">Early Development</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center age-group-teen hover:scale-105 transition-all duration-300 border border-white/20 shadow-xl">
                    <div class="w-14 h-14 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-purple-400 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">🧑</span>
                    </div>
                    <div class="text-white font-semibold text-sm md:text-base mb-1">Youth (18-35)</div>
                    <div class="text-xl md:text-2xl font-bold text-white" id="ageGroup18to35">0</div>
                    <div class="text-white/70 text-xs mt-1">Active Phase</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center age-group-adult hover:scale-105 transition-all duration-300 border border-white/20 shadow-xl">
                    <div class="w-14 h-14 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-green-400 to-green-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👨‍💼</span>
                    </div>
                    <div class="text-white font-semibold text-sm md:text-base mb-1">Adults (36-59)</div>
                    <div class="text-xl md:text-2xl font-bold text-white" id="ageGroup36to59">0</div>
                    <div class="text-white/70 text-xs mt-1">Prime Years</div>
                </div>
                <div class="glass-card rounded-2xl p-4 md:p-6 text-center age-group-senior hover:scale-105 transition-all duration-300 border border-white/20 shadow-xl">
                    <div class="w-14 h-14 md:w-16 md:h-16 mx-auto mb-3 bg-gradient-to-br from-red-400 to-red-600 rounded-2xl flex items-center justify-center shadow-lg">
                        <span class="text-2xl md:text-3xl">👴</span>
                    </div>
                    <div class="text-white font-semibold text-sm md:text-base mb-1">Seniors (60+)</div>
                    <div class="text-xl md:text-2xl font-bold text-white" id="ageGroup60plus">0</div>
                    <div class="text-white/70 text-xs mt-1">Golden Years</div>
                </div>
            </div>

            <!-- Search and Filter Section -->
            <div class="glass-effect rounded-3xl p-6 md:p-8 mb-8 border-2 border-white/20 shadow-2xl">
                <div class="flex flex-col gap-6">
                    <!-- Section Header -->
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex items-center space-x-3">
                            <div class="w-10 h-10 bg-gradient-to-br from-indigo-400 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg">
                                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                </svg>
                            </div>
                            <div>
                                <h3 class="text-lg md:text-xl font-bold text-white">Search & Filter</h3>
                                <p class="text-white/70 text-sm">Find and filter family records</p>
                            </div>
                        </div>
                        <button onclick="exportData()" class="bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white px-4 md:px-6 py-2 md:py-3 rounded-xl font-medium transition-all transform hover:scale-105 shadow-lg button-mobile touch-smooth">
                            <svg class="w-4 h-4 md:w-5 md:h-5 inline mr-1 md:mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            <span class="text-xs md:text-sm">Export Data</span>
                        </button>
                    </div>
                    
                    <!-- Search Bar -->
                    <div class="relative">
                        <input type="text" id="searchInput" placeholder="Search by name, contact, Aadhar, or house number..." 
                               class="w-full px-6 py-4 pl-14 pr-4 rounded-2xl border-2 border-white/20 bg-white/10 text-white placeholder-white/60 focus:border-white/40 focus:ring-2 focus:ring-white/20 backdrop-blur-sm transition-all input-mobile touch-smooth"
                               oninput="searchFamilies()">
                        <div class="absolute inset-y-0 left-0 pl-5 flex items-center">
                            <svg class="w-5 h-5 text-white/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </div>
                    </div>
                    
                    <!-- Filter Controls -->
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
                        <div class="space-y-2">
                            <label class="text-sm font-medium text-white/80 flex items-center">
                                <span class="mr-2">👥</span> Gender Filter
                            </label>
                            <select id="genderFilter" onchange="filterFamilies()" class="w-full px-4 py-3 rounded-xl border-2 border-white/20 bg-white/10 text-white focus:border-white/40 backdrop-blur-sm transition-all input-mobile touch-smooth">
                                <option value="" class="text-gray-800">All Genders</option>
                                <option value="male" class="text-gray-800">Male</option>
                                <option value="female" class="text-gray-800">Female</option>
                                <option value="other" class="text-gray-800">Other</option>
                            </select>
                        </div>
                        
                        <div class="space-y-2">
                            <label class="text-sm font-medium text-white/80 flex items-center">
                                <span class="mr-2">🎂</span> Age Group
                            </label>
                            <select id="ageGroupFilter" onchange="filterFamilies()" class="w-full px-4 py-3 rounded-xl border-2 border-white/20 bg-white/10 text-white focus:border-white/40 backdrop-blur-sm transition-all input-mobile touch-smooth">
                                <option value="" class="text-gray-800">All Ages</option>
                                <option value="0-17" class="text-gray-800">Children (0-17)</option>
                                <option value="18-35" class="text-gray-800">Youth (18-35)</option>
                                <option value="36-59" class="text-gray-800">Adults (36-59)</option>
                                <option value="60+" class="text-gray-800">Seniors (60+)</option>
                            </select>
                        </div>
                        
                        <div class="space-y-2">
                            <label class="text-sm font-medium text-white/80 flex items-center">
                                <span class="mr-2">📅</span> Age as of
                            </label>
                            <div class="flex space-x-2">
                                <input type="date" id="ageCalculationDate" onchange="filterFamilies()" 
                                       class="flex-1 px-4 py-3 rounded-xl border-2 border-white/20 bg-white/10 text-white focus:border-white/40 backdrop-blur-sm transition-all input-mobile touch-smooth">
                                <button onclick="resetAgeDate()" class="bg-white/20 hover:bg-white/30 text-white px-3 py-3 rounded-xl transition-all touch-smooth" title="Reset to today">
                                    🔄
                                </button>
                            </div>
                        </div>
                        
                        <div class="space-y-2">
                            <label class="text-sm font-medium text-white/80 flex items-center">
                                <span class="mr-2">📊</span> Status Filter
                            </label>
                            <select id="statusFilter" onchange="filterFamilies()" class="w-full px-4 py-3 rounded-xl border-2 border-white/20 bg-white/10 text-white focus:border-white/40 backdrop-blur-sm transition-all input-mobile touch-smooth">
                                <option value="" class="text-gray-800">All Status</option>
                                <option value="active" class="text-gray-800">Active Members</option>
                                <option value="removed" class="text-gray-800">Removed Members</option>
                            </select>
                        </div>
                        
                        <div class="space-y-2">
                            <label class="text-sm font-medium text-white/80 flex items-center">
                                <span class="mr-2">🔄</span> Quick Actions
                            </label>
                            <button onclick="searchFamilies(); showNotification('🔍 Search refreshed!', 'info')" class="w-full bg-white/20 hover:bg-white/30 text-white px-4 py-3 rounded-xl font-medium transition-all transform hover:scale-105 button-mobile touch-smooth">
                                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                                </svg>
                                Refresh
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Family Tree View -->
            <div id="familyTreeView" class="space-y-8">
                <!-- Family trees will be populated here -->
            </div>
        </div>

        <!-- Add/Edit Family Modal -->
        <div id="familyModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-7xl w-full max-h-[95vh] overflow-hidden shadow-2xl">
                    <div class="bg-gradient-to-r from-blue-600 to-purple-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-3xl font-bold text-white" id="modalTitle">🌳 Add New Family</h2>
                                <p class="text-white/90">Complete family information with head and members</p>
                            </div>
                            <button onclick="closeFamilyModal()" class="text-white hover:text-gray-200 text-3xl font-bold transition-colors">&times;</button>
                        </div>
                    </div>

                    <div class="p-8 overflow-y-auto custom-scrollbar" style="max-height: calc(95vh - 120px);">
                        <form id="familyForm" onsubmit="saveFamilyData(event)">
                            <!-- Head of Family Section -->
                            <div class="mb-8 p-6 bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl border-2 border-blue-200">
                                <h3 class="text-2xl font-bold text-gray-800 flex items-center mb-6">
                                    👑 <span class="ml-2">Head of Family Information</span>
                                </h3>
                                
                                <!-- Candidate Photo Section -->
                                <div class="mb-6 p-4 bg-green-50 rounded-xl border-2 border-green-200">
                                    <h5 class="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                                        📸 <span class="ml-2">Candidate Photo</span>
                                    </h5>
                                    
                                    <div class="flex flex-col md:flex-row gap-6 items-start">
                                        <div class="flex-1">
                                            <label class="block text-sm font-medium mb-2 text-gray-700">Profile Photo</label>
                                            <div class="space-y-3">
                                                <div class="flex space-x-2">
                                                    <button type="button" onclick="capturePhoto('headCandidatePhoto')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        📸 Take Photo
                                                    </button>
                                                    <button type="button" onclick="selectFromGallery('headCandidatePhoto')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        🖼️ Choose Photo
                                                    </button>
                                                </div>
                                                <input type="file" id="headCandidatePhotoFile" accept="image/*" capture="user" class="hidden" onchange="handleFileSelect(this, 'headCandidatePhotoPreview')">
                                                <div id="headCandidatePhotoPreview" class="w-full h-48 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                                    <div class="text-center">
                                                        <div class="text-4xl mb-2">👤</div>
                                                        <span class="text-gray-500 text-sm">No candidate photo</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="text-sm text-gray-600 bg-blue-50 p-3 rounded-lg border border-blue-200 max-w-xs">
                                            <h6 class="font-semibold mb-2">📋 Photo Guidelines:</h6>
                                            <ul class="space-y-1 text-xs">
                                                <li>• Clear, front-facing photo</li>
                                                <li>• Good lighting preferred</li>
                                                <li>• Face should be clearly visible</li>
                                                <li>• Recommended size: 300x400 pixels</li>
                                                <li>• Formats: JPG, PNG (Max 5MB)</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>

                                <!-- Basic Information Category -->
                                <div class="mb-6">
                                    <h4 class="text-lg font-semibold text-gray-800 mb-4 flex items-center border-b-2 border-blue-200 pb-2">
                                        👤 <span class="ml-2">Basic Information</span>
                                    </h4>
                                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Full Name *</label>
                                            <input type="text" id="headFullName" required 
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                                                   placeholder="Enter full name">
                                        </div>

                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Date of Birth</label>
                                            <input type="date" id="headDateOfBirth" 
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                                                   onchange="calculateAge('headDateOfBirth', 'headAge')">
                                        </div>

                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Age</label>
                                            <input type="number" id="headAge" readonly 
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl bg-gray-50"
                                                   placeholder="Auto-calculated">
                                        </div>

                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Gender</label>
                                            <select id="headGender" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all">
                                                <option value="">Select Gender</option>
                                                <option value="male">Male</option>
                                                <option value="female">Female</option>
                                                <option value="other">Other</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>

                                <!-- Contact Information Category -->
                                <div class="mb-6">
                                    <h4 class="text-lg font-semibold text-gray-800 mb-4 flex items-center border-b-2 border-green-200 pb-2">
                                        📞 <span class="ml-2">Contact Information</span>
                                    </h4>
                                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Contact Number *</label>
                                            <input type="tel" id="headContactNumber" required maxlength="10"
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                                                   placeholder="10-digit mobile number" pattern="[0-9]{10}" oninput="validateMobileNumber(this)">
                                        </div>

                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">House Number *</label>
                                            <input type="text" id="headHouseNumber" required 
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                                                   placeholder="House/Flat number">
                                        </div>
                                    </div>
                                </div>

                                <!-- Identity Information Category -->
                                <div class="mb-6">
                                    <h4 class="text-lg font-semibold text-gray-800 mb-4 flex items-center border-b-2 border-yellow-200 pb-2">
                                        🆔 <span class="ml-2">Identity Information</span>
                                    </h4>
                                    <div class="grid grid-cols-1 lg:grid-cols-1 gap-6">
                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Aadhar Number *</label>
                                            <input type="text" id="headAadharNumber" required maxlength="12"
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                                                   placeholder="12-digit Aadhar number" oninput="validateAadharNumber(this)">
                                        </div>
                                    </div>
                                </div>

                                <!-- Professional Information Category -->
                                <div class="mb-6">
                                    <h4 class="text-lg font-semibold text-gray-800 mb-4 flex items-center border-b-2 border-purple-200 pb-2">
                                        💼 <span class="ml-2">Professional & Educational Information</span>
                                    </h4>
                                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Occupation</label>
                                            <input type="text" id="headOccupation" 
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                                                   placeholder="Current occupation">
                                        </div>

                                        <div>
                                            <label class="block text-sm font-semibold mb-2 text-gray-700">Education</label>
                                            <input type="text" id="headEducation" 
                                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all"
                                                   placeholder="Educational qualification">
                                        </div>
                                    </div>
                                </div>

                                <!-- Dynamic Custom Fields for Head -->
                                <!-- Aadhar Photo Section for Head -->
                                <div class="mt-6 p-4 bg-blue-50 rounded-xl border-2 border-blue-200">
                                    <h5 class="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                                        📷 <span class="ml-2">Aadhar Card Photos</span>
                                    </h5>
                                    
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        <!-- Aadhar Front Photo -->
                                        <div>
                                            <label class="block text-sm font-medium mb-2 text-gray-700">Aadhar Front Photo</label>
                                            <div class="space-y-3">
                                                <div class="flex space-x-2">
                                                    <button type="button" onclick="capturePhoto('headAadharFront')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        📸 Camera
                                                    </button>
                                                    <button type="button" onclick="selectFromGallery('headAadharFront')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        🖼️ Gallery
                                                    </button>
                                                </div>
                                                <input type="file" id="headAadharFrontFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'headAadharFrontPreview')">
                                                <div id="headAadharFrontPreview" class="w-full h-32 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                                    <span class="text-gray-500 text-sm">No photo</span>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Aadhar Back Photo -->
                                        <div>
                                            <label class="block text-sm font-medium mb-2 text-gray-700">Aadhar Back Photo</label>
                                            <div class="space-y-3">
                                                <div class="flex space-x-2">
                                                    <button type="button" onclick="capturePhoto('headAadharBack')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        📸 Camera
                                                    </button>
                                                    <button type="button" onclick="selectFromGallery('headAadharBack')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        🖼️ Gallery
                                                    </button>
                                                </div>
                                                <input type="file" id="headAadharBackFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'headAadharBackPreview')">
                                                <div id="headAadharBackPreview" class="w-full h-32 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                                    <span class="text-gray-500 text-sm">No photo</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Other Identity Document Photo Section for Head -->
                                <div class="mt-6 p-4 bg-purple-50 rounded-xl border-2 border-purple-200">
                                    <h5 class="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                                        🆔 <span class="ml-2">Other Identity Document Photos</span>
                                    </h5>
                                    
                                    <!-- Document Type Selection -->
                                    <div class="mb-4">
                                        <label class="block text-sm font-medium mb-2 text-gray-700">Document Type</label>
                                        <select id="headOtherIdType" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all">
                                            <option value="">Select Document Type</option>
                                            <option value="pan">PAN Card</option>
                                            <option value="passport">Passport</option>
                                            <option value="driving_license">Driving License</option>
                                            <option value="voter_id">Voter ID</option>
                                            <option value="ration_card">Ration Card</option>
                                            <option value="bank_passbook">Bank Passbook</option>
                                            <option value="birth_certificate">Birth Certificate</option>
                                            <option value="school_id">School ID</option>
                                            <option value="employee_id">Employee ID</option>
                                            <option value="other">Other</option>
                                        </select>
                                    </div>
                                    
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        <!-- Other ID Front Photo -->
                                        <div>
                                            <label class="block text-sm font-medium mb-2 text-gray-700">Document Front Photo</label>
                                            <div class="space-y-3">
                                                <div class="flex space-x-2">
                                                    <button type="button" onclick="capturePhoto('headOtherIdFront')" class="flex-1 bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        📸 Camera
                                                    </button>
                                                    <button type="button" onclick="selectFromGallery('headOtherIdFront')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        🖼️ Gallery
                                                    </button>
                                                </div>
                                                <input type="file" id="headOtherIdFrontFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'headOtherIdFrontPreview')">
                                                <div id="headOtherIdFrontPreview" class="w-full h-32 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                                    <span class="text-gray-500 text-sm">No photo</span>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Other ID Back Photo -->
                                        <div>
                                            <label class="block text-sm font-medium mb-2 text-gray-700">Document Back Photo</label>
                                            <div class="space-y-3">
                                                <div class="flex space-x-2">
                                                    <button type="button" onclick="capturePhoto('headOtherIdBack')" class="flex-1 bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        📸 Camera
                                                    </button>
                                                    <button type="button" onclick="selectFromGallery('headOtherIdBack')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                                        🖼️ Gallery
                                                    </button>
                                                </div>
                                                <input type="file" id="headOtherIdBackFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'headOtherIdBackPreview')">
                                                <div id="headOtherIdBackPreview" class="w-full h-32 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                                    <span class="text-gray-500 text-sm">No photo</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div id="headCustomFields" class="mt-6">
                                    <!-- Custom fields will be added here -->
                                </div>
                            </div>

                            <!-- Family Members Section -->
                            <div class="mb-8">
                                <div class="flex justify-between items-center mb-6">
                                    <h3 class="text-2xl font-bold text-gray-800 flex items-center">
                                        👥 <span class="ml-2">Family Members</span>
                                    </h3>
                                    <button type="button" onclick="addFamilyMember()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-xl font-medium transition-all">
                                        ➕ Add Member
                                    </button>
                                </div>
                                
                                <div id="familyMembersContainer" class="space-y-6">
                                    <!-- Family members will be added here -->
                                </div>
                            </div>

                            <!-- Form Actions -->
                            <div class="flex justify-between items-center pt-6 border-t-2 border-gray-100">
                                <div class="text-sm text-gray-600">
                                    <span class="font-medium">Total Members: </span>
                                    <span id="totalMemberCount" class="font-bold text-blue-600">1</span> (including head)
                                </div>
                                <div class="flex space-x-4">
                                    <button type="button" onclick="closeFamilyModal()" class="bg-gray-400 hover:bg-gray-500 text-white px-8 py-3 rounded-xl font-medium transition-all">
                                        Cancel
                                    </button>
                                    <button type="submit" class="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-8 py-3 rounded-xl font-medium transition-all transform hover:scale-105">
                                        💾 Save Family Record
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Column Manager Modal -->
        <div id="columnManagerModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-2xl w-full shadow-2xl">
                    <div class="bg-gradient-to-r from-purple-600 to-pink-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-2xl font-bold text-white">⚙️ Manage Custom Columns</h2>
                                <p class="text-white/90">Add custom fields for family records</p>
                            </div>
                            <button onclick="closeColumnManager()" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div class="p-6">
                        <div class="mb-6">
                            <h3 class="text-lg font-semibold mb-4">Add New Custom Field</h3>
                            <div class="space-y-4">
                                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                    <input type="text" id="newFieldName" placeholder="Field Name (e.g., Blood Group)" 
                                           class="px-4 py-2 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all">
                                    <select id="newFieldType" class="px-4 py-2 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all">
                                        <option value="text">Text</option>
                                        <option value="number">Number</option>
                                        <option value="date">Date</option>
                                        <option value="select">Dropdown</option>
                                        <option value="photo">Photo</option>
                                        <option value="email">Email</option>
                                        <option value="phone">Phone</option>
                                        <option value="textarea">Long Text</option>
                                        <option value="checkbox">Yes/No</option>
                                    </select>
                                    <select id="newFieldTarget" class="px-4 py-2 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all">
                                        <option value="both">Head & Members</option>
                                        <option value="head">Head Only</option>
                                        <option value="members">Members Only</option>
                                    </select>
                                </div>
                                
                                <div class="flex items-center space-x-4">
                                    <label class="flex items-center space-x-2">
                                        <input type="checkbox" id="newFieldRequired" class="rounded border-gray-300 text-purple-600 focus:ring-purple-500">
                                        <span class="text-sm text-gray-700">Required Field</span>
                                    </label>
                                    <button onclick="addCustomField()" class="bg-purple-600 hover:bg-purple-700 text-white px-6 py-2 rounded-xl font-medium transition-all">
                                        ➕ Add Field
                                    </button>
                                </div>
                                
                                <div id="selectOptions" class="hidden">
                                    <input type="text" id="selectOptionValues" placeholder="Options (comma-separated, e.g., A+, B+, O+, AB+)" 
                                           class="w-full px-4 py-2 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all">
                                </div>
                                
                                <div id="photoOptions" class="hidden">
                                    <div class="p-4 bg-blue-50 rounded-xl border-2 border-blue-200">
                                        <h5 class="text-sm font-semibold text-gray-800 mb-2">📷 Photo Field Options</h5>
                                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                            <label class="flex items-center space-x-2">
                                                <input type="checkbox" id="photoAllowCamera" checked class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                                <span class="text-sm text-gray-700">Allow Camera Capture</span>
                                            </label>
                                            <label class="flex items-center space-x-2">
                                                <input type="checkbox" id="photoAllowGallery" checked class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                                                <span class="text-sm text-gray-700">Allow Gallery Selection</span>
                                            </label>
                                        </div>
                                        <div class="mt-2">
                                            <input type="text" id="photoDescription" placeholder="Photo description (e.g., Profile Photo, Document Photo)" 
                                                   class="w-full px-3 py-2 border-2 border-gray-200 rounded-lg focus:border-blue-500 transition-all text-sm">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div>
                            <h3 class="text-lg font-semibold mb-4">Existing Custom Fields</h3>
                            <div id="existingFields" class="space-y-2">
                                <!-- Existing fields will be listed here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Camera Capture Modal -->
        <div id="cameraModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-2xl w-full shadow-2xl">
                    <div class="bg-gradient-to-r from-blue-600 to-purple-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-2xl font-bold text-white">📸 Camera Capture</h2>
                                <p class="text-white/90">Capture Aadhar card photo</p>
                            </div>
                            <button onclick="closeCameraModal()" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4">
                            <div class="relative bg-black rounded-xl overflow-hidden">
                                <video id="cameraVideo" class="w-full h-64 object-cover" autoplay playsinline></video>
                                <canvas id="cameraCanvas" class="hidden"></canvas>
                            </div>
                            <div class="flex justify-center space-x-4">
                                <button onclick="captureImage()" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    📸 Capture Photo
                                </button>
                                <button onclick="closeCameraModal()" class="bg-gray-500 hover:bg-gray-600 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    Cancel
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Family Details View Modal -->
        <div id="familyDetailsModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-6xl w-full max-h-[95vh] overflow-hidden shadow-2xl">
                    <div class="bg-gradient-to-r from-green-600 to-teal-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-3xl font-bold text-white">🌳 Family Tree Details</h2>
                                <p class="text-white/90">Complete family information and member details</p>
                            </div>
                            <button onclick="closeFamilyDetails()" class="text-white hover:text-gray-200 text-3xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div id="familyDetailsContent" class="p-8 overflow-y-auto custom-scrollbar" style="max-height: calc(95vh - 120px);">
                        <!-- Family details will be populated here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Member Removal Modal -->
        <div id="memberRemovalModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-lg w-full shadow-2xl">
                    <div class="bg-gradient-to-r from-red-600 to-pink-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-2xl font-bold text-white">🚫 Remove Family Member</h2>
                                <p class="text-white/90">Record reason for removal</p>
                            </div>
                            <button onclick="closeMemberRemovalModal()" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div class="p-6">
                        <div class="mb-4">
                            <p class="text-gray-700 mb-2">Member: <span id="removalMemberName" class="font-semibold"></span></p>
                            <p class="text-sm text-gray-600">This member will be moved to the removed members section but kept in family records.</p>
                        </div>
                        
                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-semibold mb-2 text-gray-700">Reason for Removal *</label>
                                <select id="removalReason" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-red-500 transition-all">
                                    <option value="">Select reason</option>
                                    <option value="deceased">Deceased</option>
                                    <option value="moved_away">Moved Away</option>
                                    <option value="married_out">Married and Moved Out</option>
                                    <option value="separated">Separated from Family</option>
                                    <option value="adopted_out">Adopted by Another Family</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-semibold mb-2 text-gray-700">Date of Removal</label>
                                <input type="date" id="removalDate" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-red-500 transition-all">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-semibold mb-2 text-gray-700">Additional Notes</label>
                                <textarea id="removalNotes" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-red-500 transition-all h-24 resize-none" placeholder="Optional additional information..."></textarea>
                            </div>
                        </div>
                        
                        <div class="flex justify-end space-x-4 mt-6">
                            <button onclick="closeMemberRemovalModal()" class="bg-gray-400 hover:bg-gray-500 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                Cancel
                            </button>
                            <button onclick="confirmMemberRemoval()" class="bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                🚫 Remove Member
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Theme Manager Modal -->
        <div id="themeManagerModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-3xl w-full shadow-2xl">
                    <div class="bg-gradient-to-r from-violet-600 to-purple-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-2xl font-bold text-white">🎨 Theme Management</h2>
                                <p class="text-white/90">Customize the system appearance - Click Apply to change theme</p>
                            </div>
                            <button onclick="closeThemeManager()" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div class="p-6">
                        <!-- Theme Categories -->
                        <div class="mb-6">
                            <div class="flex flex-wrap gap-2 mb-4">
                                <button onclick="filterThemes('all')" class="theme-filter-btn active bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                    🎨 All Themes
                                </button>
                                <button onclick="filterThemes('basic')" class="theme-filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg text-sm font-medium transition-all hover:bg-gray-300">
                                    📋 Basic
                                </button>
                                <button onclick="filterThemes('nature')" class="theme-filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg text-sm font-medium transition-all hover:bg-gray-300">
                                    🌿 Nature
                                </button>
                                <button onclick="filterThemes('vibrant')" class="theme-filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg text-sm font-medium transition-all hover:bg-gray-300">
                                    ✨ Vibrant
                                </button>
                                <button onclick="filterThemes('dark')" class="theme-filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded-lg text-sm font-medium transition-all hover:bg-gray-300">
                                    🌙 Dark
                                </button>
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 max-h-96 overflow-y-auto custom-scrollbar">
                            <!-- Basic Themes -->
                            <div id="theme-light" class="theme-option basic p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-gray-100 to-gray-300 rounded-lg mb-2 border"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Light Theme</h3>
                                <p class="text-xs text-gray-600 mb-2">Clean light gradient</p>
                                <button type="button" onclick="applyTheme('light')" class="w-full bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🎨 Apply
                                </button>
                            </div>
                            
                            <div id="theme-professional" class="theme-option basic p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Professional</h3>
                                <p class="text-xs text-gray-600 mb-2">Corporate blue</p>
                                <button type="button" onclick="applyTheme('professional')" class="w-full bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🏢 Apply
                                </button>
                            </div>
                            
                            <div id="theme-corporate" class="theme-option basic p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-gray-600 to-gray-400 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Corporate</h3>
                                <p class="text-xs text-gray-600 mb-2">Business gray</p>
                                <button type="button" onclick="applyTheme('corporate')" class="w-full bg-gray-600 hover:bg-gray-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🏢 Apply
                                </button>
                            </div>
                            
                            <!-- Dark Themes -->
                            <div id="theme-modern" class="theme-option dark p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-slate-800 to-slate-600 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Modern</h3>
                                <p class="text-xs text-gray-600 mb-2">Dark slate</p>
                                <button type="button" onclick="applyTheme('modern')" class="w-full bg-slate-600 hover:bg-slate-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🌙 Apply
                                </button>
                            </div>
                            
                            <div id="theme-midnight" class="theme-option dark p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-gray-900 to-gray-700 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Midnight</h3>
                                <p class="text-xs text-gray-600 mb-2">Deep dark</p>
                                <button type="button" onclick="applyTheme('midnight')" class="w-full bg-gray-800 hover:bg-gray-900 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🌚 Apply
                                </button>
                            </div>
                            
                            <div id="theme-galaxy" class="theme-option dark p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-indigo-900 to-purple-600 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Galaxy</h3>
                                <p class="text-xs text-gray-600 mb-2">Space purple</p>
                                <button type="button" onclick="applyTheme('galaxy')" class="w-full bg-purple-700 hover:bg-purple-800 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🌌 Apply
                                </button>
                            </div>
                            
                            <!-- Vibrant Themes -->
                            <div id="theme-elegant" class="theme-option vibrant p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-purple-600 to-violet-500 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Elegant</h3>
                                <p class="text-xs text-gray-600 mb-2">Royal purple</p>
                                <button type="button" onclick="applyTheme('elegant')" class="w-full bg-purple-600 hover:bg-purple-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    💜 Apply
                                </button>
                            </div>
                            
                            <div id="theme-royal" class="theme-option vibrant p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-indigo-800 to-blue-500 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Royal</h3>
                                <p class="text-xs text-gray-600 mb-2">Majestic blue</p>
                                <button type="button" onclick="applyTheme('royal')" class="w-full bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    👑 Apply
                                </button>
                            </div>
                            
                            <div id="theme-rose" class="theme-option vibrant p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-rose-700 to-pink-500 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Rose</h3>
                                <p class="text-xs text-gray-600 mb-2">Romantic pink</p>
                                <button type="button" onclick="applyTheme('rose')" class="w-full bg-rose-600 hover:bg-rose-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🌹 Apply
                                </button>
                            </div>
                            
                            <div id="theme-crimson" class="theme-option vibrant p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-red-800 to-red-500 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Crimson</h3>
                                <p class="text-xs text-gray-600 mb-2">Bold red</p>
                                <button type="button" onclick="applyTheme('crimson')" class="w-full bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🔥 Apply
                                </button>
                            </div>
                            
                            <!-- Nature Themes -->
                            <div id="theme-ocean" class="theme-option nature p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-blue-800 to-cyan-400 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Ocean</h3>
                                <p class="text-xs text-gray-600 mb-2">Deep sea blue</p>
                                <button type="button" onclick="applyTheme('ocean')" class="w-full bg-blue-700 hover:bg-blue-800 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🌊 Apply
                                </button>
                            </div>
                            
                            <div id="theme-forest" class="theme-option nature p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-green-800 to-green-400 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Forest</h3>
                                <p class="text-xs text-gray-600 mb-2">Nature green</p>
                                <button type="button" onclick="applyTheme('forest')" class="w-full bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🌲 Apply
                                </button>
                            </div>
                            
                            <div id="theme-emerald" class="theme-option nature p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-emerald-800 to-emerald-400 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Emerald</h3>
                                <p class="text-xs text-gray-600 mb-2">Gem green</p>
                                <button type="button" onclick="applyTheme('emerald')" class="w-full bg-emerald-600 hover:bg-emerald-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    💎 Apply
                                </button>
                            </div>
                            
                            <div id="theme-teal" class="theme-option nature p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-teal-800 to-teal-400 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Teal</h3>
                                <p class="text-xs text-gray-600 mb-2">Aqua teal</p>
                                <button type="button" onclick="applyTheme('teal')" class="w-full bg-teal-600 hover:bg-teal-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🐚 Apply
                                </button>
                            </div>
                            
                            <div id="theme-sunset" class="theme-option nature p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-orange-800 to-orange-400 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Sunset</h3>
                                <p class="text-xs text-gray-600 mb-2">Warm orange</p>
                                <button type="button" onclick="applyTheme('sunset')" class="w-full bg-orange-600 hover:bg-orange-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🌅 Apply
                                </button>
                            </div>
                            
                            <div id="theme-amber" class="theme-option nature p-3 border-2 border-gray-200 rounded-xl transition-all hover:shadow-lg">
                                <div class="w-full h-16 bg-gradient-to-r from-amber-800 to-amber-400 rounded-lg mb-2"></div>
                                <h3 class="font-bold text-gray-800 text-sm">Amber</h3>
                                <p class="text-xs text-gray-600 mb-2">Golden amber</p>
                                <button type="button" onclick="applyTheme('amber')" class="w-full bg-amber-600 hover:bg-amber-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                    🟡 Apply
                                </button>
                            </div>
                        </div>
                        
                        <!-- Font Controls Section (Master Admin Only) -->
                        <div id="fontControlsSection" class="mt-6 p-4 bg-purple-50 rounded-xl border-2 border-purple-200 hidden">
                            <h4 class="font-semibold text-gray-800 mb-4 flex items-center">
                                🔤 <span class="ml-2">Master Admin Font Controls</span>
                            </h4>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <!-- Font Size Control -->
                                <div>
                                    <label class="block text-sm font-semibold mb-3 text-gray-700">📏 Font Size</label>
                                    <div class="space-y-2">
                                        <button onclick="applyFontSize('small')" id="fontSize-small" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-purple-500 transition-all">
                                            <span class="font-size-small">Small Text (14px) - Compact view</span>
                                        </button>
                                        <button onclick="applyFontSize('medium')" id="fontSize-medium" class="w-full text-left px-4 py-3 border-2 border-purple-500 bg-purple-50 rounded-lg hover:border-purple-600 transition-all">
                                            <span class="font-size-medium">Medium Text (16px) - Default size</span>
                                        </button>
                                        <button onclick="applyFontSize('large')" id="fontSize-large" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-purple-500 transition-all">
                                            <span class="font-size-large">Large Text (18px) - Easy reading</span>
                                        </button>
                                        <button onclick="applyFontSize('extra-large')" id="fontSize-extra-large" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-purple-500 transition-all">
                                            <span class="font-size-extra-large">Extra Large (20px) - High visibility</span>
                                        </button>
                                        <button onclick="applyFontSize('huge')" id="fontSize-huge" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-purple-500 transition-all">
                                            <span class="font-size-huge">Huge Text (24px) - Maximum visibility</span>
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Font Color Control -->
                                <div>
                                    <label class="block text-sm font-semibold mb-3 text-gray-700">🎨 Font Color</label>
                                    <div class="space-y-2">
                                        <button onclick="applyFontColor('default')" id="fontColor-default" class="w-full text-left px-4 py-3 border-2 border-gray-500 bg-gray-50 rounded-lg hover:border-gray-600 transition-all">
                                            <span class="font-color-default">Default Color - Theme based</span>
                                        </button>
                                        <button onclick="applyFontColor('dark')" id="fontColor-dark" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-gray-500 transition-all">
                                            <span class="font-color-dark">Dark Gray - Professional</span>
                                        </button>
                                        <button onclick="applyFontColor('blue')" id="fontColor-blue" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-blue-500 transition-all">
                                            <span class="font-color-blue">Blue - Corporate style</span>
                                        </button>
                                        <button onclick="applyFontColor('green')" id="fontColor-green" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-green-500 transition-all">
                                            <span class="font-color-green">Green - Nature theme</span>
                                        </button>
                                        <button onclick="applyFontColor('purple')" id="fontColor-purple" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-purple-500 transition-all">
                                            <span class="font-color-purple">Purple - Creative style</span>
                                        </button>
                                        <button onclick="applyFontColor('orange')" id="fontColor-orange" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-orange-500 transition-all">
                                            <span class="font-color-orange">Orange - Energetic style</span>
                                        </button>
                                        <button onclick="applyFontColor('red')" id="fontColor-red" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-red-500 transition-all">
                                            <span class="font-color-red">Red - Alert style</span>
                                        </button>
                                        <button onclick="applyFontColor('indigo')" id="fontColor-indigo" class="w-full text-left px-4 py-3 border-2 border-gray-200 rounded-lg hover:border-indigo-500 transition-all">
                                            <span class="font-color-indigo">Indigo - Modern style</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
                                <p class="text-sm text-yellow-800">
                                    <strong>⚠️ Master Admin Control:</strong> Font changes apply system-wide and affect all users. 
                                    Choose settings that provide the best readability for your environment.
                                </p>
                            </div>
                        </div>
                        
                        <div class="mt-6 p-4 bg-blue-50 rounded-xl">
                            <h4 class="font-semibold text-gray-800 mb-2">🎯 Current Active Settings</h4>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <div>
                                    <p class="text-sm text-gray-600">Theme</p>
                                    <p class="text-lg font-bold text-blue-600" id="currentThemeDisplay">Royal Theme</p>
                                </div>
                                <div id="currentFontSizeDisplay">
                                    <p class="text-sm text-gray-600">Font Size</p>
                                    <p class="text-lg font-bold text-purple-600">Medium</p>
                                </div>
                                <div id="currentFontColorDisplay">
                                    <p class="text-sm text-gray-600">Font Color</p>
                                    <p class="text-lg font-bold text-gray-600">Default</p>
                                </div>
                            </div>
                            <p class="text-sm text-gray-600 mt-2">All changes apply immediately to the entire system</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Firebase Manager Modal -->
        <div id="firebaseManagerModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden shadow-2xl">
                    <div class="bg-gradient-to-r from-orange-600 to-red-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-2xl font-bold text-white">🔥 Firebase Database Configuration</h2>
                                <p class="text-white/90">Configure Firebase connection and API keys</p>
                            </div>
                            <button onclick="closeFirebaseManager()" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div class="p-6 overflow-y-auto" style="max-height: calc(90vh - 120px);">
                        <!-- Firebase Configuration -->
                        <div class="mb-8">
                            <h3 class="text-xl font-bold text-gray-800 mb-4 flex items-center">
                                <svg class="w-6 h-6 mr-2 text-orange-600" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M3.89 15.673L6.255.461A.542.542 0 017.27.288l2.543 4.771 1.33-2.515a.542.542 0 01.918-.066l5.188 9.823-2.543 4.771a.542.542 0 01-.918.066L3.89 15.673z"/>
                                </svg>
                                Firebase Configuration
                            </h3>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">API Key *</label>
                                    <input type="password" id="firebaseApiKey" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 transition-all" placeholder="Your Firebase API Key">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">Auth Domain *</label>
                                    <input type="text" id="firebaseAuthDomain" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 transition-all" placeholder="your-project.firebaseapp.com">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">Project ID *</label>
                                    <input type="text" id="firebaseProjectId" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 transition-all" placeholder="your-project-id">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">Storage Bucket</label>
                                    <input type="text" id="firebaseStorageBucket" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 transition-all" placeholder="your-project.appspot.com">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">Messaging Sender ID</label>
                                    <input type="text" id="firebaseMessagingSenderId" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 transition-all" placeholder="123456789">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">App ID</label>
                                    <input type="text" id="firebaseAppId" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-orange-500 transition-all" placeholder="1:123456789:web:abcdef">
                                </div>
                            </div>
                            
                            <div class="mt-6 flex space-x-4">
                                <button onclick="testFirebaseConnection()" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    🔍 Test Connection
                                </button>
                                <button onclick="saveFirebaseConfig()" class="bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    💾 Save Configuration
                                </button>
                                <button onclick="clearFirebaseConfig()" class="bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    🗑️ Clear Config
                                </button>
                            </div>
                        </div>
                        
                        <!-- Connection Status -->
                        <div class="mb-8 p-4 bg-gray-50 rounded-xl">
                            <h4 class="font-semibold text-gray-800 mb-3">🔗 Connection Status</h4>
                            <div id="firebaseStatus" class="text-sm text-gray-600">
                                <div class="flex items-center space-x-2">
                                    <div class="w-3 h-3 bg-gray-400 rounded-full"></div>
                                    <span>Not configured</span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Data Sync Options -->
                        <div class="mb-8">
                            <h4 class="font-semibold text-gray-800 mb-4">📊 Data Synchronization</h4>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <button onclick="syncToFirebase()" class="bg-orange-600 hover:bg-orange-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    ⬆️ Upload Local Data
                                </button>
                                <button onclick="syncFromFirebase()" class="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    ⬇️ Download from Firebase
                                </button>
                                <button onclick="enableAutoSync()" class="bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    🔄 Enable Auto-Sync
                                </button>
                                <button onclick="backupToFirebase()" class="bg-teal-600 hover:bg-teal-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                                    💾 Create Backup
                                </button>
                            </div>
                        </div>
                        
                        <!-- Firebase Instructions -->
                        <div class="bg-blue-50 p-6 rounded-xl">
                            <h4 class="font-semibold text-gray-800 mb-3">📋 Setup Instructions</h4>
                            <ol class="text-sm text-gray-700 space-y-2">
                                <li>1. Go to <a href="https://console.firebase.google.com" target="_blank" class="text-blue-600 hover:underline">Firebase Console</a></li>
                                <li>2. Create a new project or select existing one</li>
                                <li>3. Go to Project Settings → General → Your apps</li>
                                <li>4. Add a web app and copy the configuration</li>
                                <li>5. Enable Firestore Database in your Firebase project</li>
                                <li>6. Configure security rules for your database</li>
                                <li>7. Paste the configuration values above and test connection</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Advanced Tools Modal -->
        <div id="advancedToolsModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-6xl w-full max-h-[90vh] overflow-hidden shadow-2xl">
                    <div class="bg-gradient-to-r from-teal-600 to-cyan-600 p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-2xl font-bold text-white">🛠️ Advanced Master Admin Tools</h2>
                                <p class="text-white/90">Powerful data management and system administration tools</p>
                            </div>
                            <button onclick="closeAdvancedTools()" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div class="p-6 overflow-y-auto" style="max-height: calc(90vh - 120px);">
                        <!-- Data Management Tools -->
                        <div class="mb-8">
                            <h3 class="text-xl font-bold text-gray-800 mb-4 flex items-center">
                                📊 <span class="ml-2">Data Management & Analytics</span>
                            </h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                <button onclick="bulkDataOperations()" class="bg-blue-600 hover:bg-blue-700 text-white p-4 rounded-xl font-medium transition-all text-left">
                                    <div class="text-2xl mb-2">📋</div>
                                    <div class="font-bold">Bulk Operations</div>
                                    <div class="text-sm opacity-90">Mass edit, delete, or update records</div>
                                </button>
                                <button onclick="dataValidation()" class="bg-green-600 hover:bg-green-700 text-white p-4 rounded-xl font-medium transition-all text-left">
                                    <div class="text-2xl mb-2">✅</div>
                                    <div class="font-bold">Data Validation</div>
                                    <div class="text-sm opacity-90">Check data integrity and completeness</div>
                                </button>
                                <button onclick="duplicateDetection()" class="bg-yellow-600 hover:bg-yellow-700 text-white p-4 rounded-xl font-medium transition-all text-left">
                                    <div class="text-2xl mb-2">🔍</div>
                                    <div class="font-bold">Duplicate Detection</div>
                                    <div class="text-sm opacity-90">Find and merge duplicate records</div>
                                </button>
                                <button onclick="advancedReports()" class="bg-purple-600 hover:bg-purple-700 text-white p-4 rounded-xl font-medium transition-all text-left">
                                    <div class="text-2xl mb-2">📈</div>
                                    <div class="font-bold">Advanced Reports</div>
                                    <div class="text-sm opacity-90">Generate detailed analytics reports</div>
                                </button>
                                <button onclick="dataImportExport()" class="bg-indigo-600 hover:bg-indigo-700 text-white p-4 rounded-xl font-medium transition-all text-left">
                                    <div class="text-2xl mb-2">💾</div>
                                    <div class="font-bold">Import/Export</div>
                                    <div class="text-sm opacity-90">Advanced data import and export tools</div>
                                </button>
                                <button onclick="systemMaintenance()" class="bg-red-600 hover:bg-red-700 text-white p-4 rounded-xl font-medium transition-all text-left">
                                    <div class="text-2xl mb-2">🔧</div>
                                    <div class="font-bold">System Maintenance</div>
                                    <div class="text-sm opacity-90">Database cleanup and optimization</div>
                                </button>
                            </div>
                        </div>

                        <!-- Quick Actions -->
                        <div class="mb-8">
                            <h3 class="text-xl font-bold text-gray-800 mb-4 flex items-center">
                                ⚡ <span class="ml-2">Quick Actions</span>
                            </h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div class="bg-gray-50 p-4 rounded-xl">
                                    <h4 class="font-semibold mb-3">🔄 Data Operations</h4>
                                    <div class="space-y-2">
                                        <button onclick="resetAllData()" class="w-full bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded-lg text-sm transition-all">
                                            🗑️ Reset All Data
                                        </button>
                                        <button onclick="createBackup()" class="w-full bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded-lg text-sm transition-all">
                                            💾 Create Backup
                                        </button>
                                        <button onclick="restoreBackup()" class="w-full bg-green-500 hover:bg-green-600 text-white px-3 py-2 rounded-lg text-sm transition-all">
                                            📥 Restore Backup
                                        </button>
                                    </div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-xl">
                                    <h4 class="font-semibold mb-3">📊 System Stats</h4>
                                    <div class="space-y-2 text-sm">
                                        <div class="flex justify-between">
                                            <span>Total Families:</span>
                                            <span class="font-bold" id="statsTotal">0</span>
                                        </div>
                                        <div class="flex justify-between">
                                            <span>Total Members:</span>
                                            <span class="font-bold" id="statsMembers">0</span>
                                        </div>
                                        <div class="flex justify-between">
                                            <span>Custom Fields:</span>
                                            <span class="font-bold" id="statsFields">0</span>
                                        </div>
                                        <div class="flex justify-between">
                                            <span>Data Size:</span>
                                            <span class="font-bold" id="statsSize">0 KB</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- System Configuration -->
                        <div class="mb-8">
                            <h3 class="text-xl font-bold text-gray-800 mb-4 flex items-center">
                                ⚙️ <span class="ml-2">System Configuration</span>
                            </h3>
                            <div class="bg-blue-50 p-6 rounded-xl">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <label class="block text-sm font-semibold mb-2">Auto-Save Interval (seconds)</label>
                                        <input type="number" id="autoSaveInterval" value="30" min="10" max="300" class="w-full px-3 py-2 border rounded-lg">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-semibold mb-2">Max Records Per Page</label>
                                        <input type="number" id="maxRecordsPerPage" value="50" min="10" max="200" class="w-full px-3 py-2 border rounded-lg">
                                    </div>
                                    <div>
                                        <label class="flex items-center space-x-2">
                                            <input type="checkbox" id="enableDataValidation" checked class="rounded">
                                            <span class="text-sm">Enable Real-time Data Validation</span>
                                        </label>
                                    </div>
                                    <div>
                                        <label class="flex items-center space-x-2">
                                            <input type="checkbox" id="enableAutoBackup" class="rounded">
                                            <span class="text-sm">Enable Auto-Backup (Daily)</span>
                                        </label>
                                    </div>
                                </div>
                                <button onclick="saveSystemConfig()" class="mt-4 bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-all">
                                    💾 Save Configuration
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Page Title and Marquee Manager Modal -->
        <div id="pageTitleManagerModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-2xl w-full shadow-2xl modal-content-mobile">
                    <div class="bg-gradient-to-r from-purple-600 to-pink-600 p-4 md:p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-xl md:text-2xl font-bold text-white">📝 Page Title & Marquee Manager</h2>
                                <p class="text-white/90 text-sm md:text-base">Customize page title and marquee text</p>
                            </div>
                            <button onclick="closePageTitleManager()" class="text-white hover:text-gray-200 text-2xl font-bold touch-friendly">&times;</button>
                        </div>
                    </div>
                    <div class="p-4 md:p-6 smooth-scroll" style="max-height: calc(100vh - 120px); overflow-y: auto;">
                        <!-- Page Title Section -->
                        <div class="mb-8">
                            <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center">
                                🏷️ <span class="ml-2">Page Title Configuration</span>
                            </h3>
                            
                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">Browser Tab Title</label>
                                    <input type="text" id="browserTitle" placeholder="Advanced Family Tree Management System" 
                                           class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all input-mobile">
                                    <p class="text-xs text-gray-500 mt-1">This appears in the browser tab</p>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">Main Page Title</label>
                                    <input type="text" id="mainPageTitle" placeholder="Family Tree Management" 
                                           class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all input-mobile">
                                    <p class="text-xs text-gray-500 mt-1">This appears as the main heading on the page</p>
                                </div>
                                
                                <div class="flex space-x-3">
                                    <button onclick="updatePageTitle()" class="flex-1 bg-purple-600 hover:bg-purple-700 text-white px-4 py-3 rounded-xl font-medium transition-all button-mobile touch-smooth">
                                        💾 Update Title
                                    </button>
                                    <button onclick="resetPageTitle()" class="flex-1 bg-gray-500 hover:bg-gray-600 text-white px-4 py-3 rounded-xl font-medium transition-all button-mobile touch-smooth">
                                        🔄 Reset Default
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Marquee Section -->
                        <div class="mb-8">
                            <h3 class="text-lg font-bold text-gray-800 mb-4 flex items-center">
                                📢 <span class="ml-2">Marquee Text Configuration</span>
                            </h3>
                            
                            <div class="space-y-4">
                                <div class="flex items-center space-x-3">
                                    <label class="flex items-center space-x-2">
                                        <input type="checkbox" id="enableMarquee" class="rounded border-gray-300 text-purple-600 focus:ring-purple-500 touch-friendly">
                                        <span class="text-sm font-medium text-gray-700">Enable Marquee</span>
                                    </label>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-semibold mb-2 text-gray-700">Marquee Text</label>
                                    <textarea id="marqueeTextInput" placeholder="Welcome to Family Tree Management System - Your trusted platform for managing family records and genealogy data" 
                                              class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all h-24 resize-none input-mobile"></textarea>
                                    <p class="text-xs text-gray-500 mt-1">This text will scroll across the top of the page</p>
                                </div>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-semibold mb-2 text-gray-700">Animation Speed (seconds)</label>
                                        <input type="number" id="marqueeSpeed" min="5" max="60" value="20" 
                                               class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all input-mobile">
                                    </div>
                                    
                                    <div>
                                        <label class="block text-sm font-semibold mb-2 text-gray-700">Text Color</label>
                                        <select id="marqueeColor" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-purple-500 transition-all input-mobile">
                                            <option value="#1f2937">Dark Gray (Default)</option>
                                            <option value="#3b82f6">Blue</option>
                                            <option value="#10b981">Green</option>
                                            <option value="#8b5cf6">Purple</option>
                                            <option value="#ef4444">Red</option>
                                            <option value="#f59e0b">Orange</option>
                                            <option value="#ec4899">Pink</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div class="flex space-x-3">
                                    <button onclick="updateMarquee()" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-xl font-medium transition-all button-mobile touch-smooth">
                                        💾 Update Marquee
                                    </button>
                                    <button onclick="previewMarquee()" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-3 rounded-xl font-medium transition-all button-mobile touch-smooth">
                                        👁️ Preview
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Preview Section -->
                        <div class="bg-gray-50 p-4 rounded-xl">
                            <h4 class="font-semibold text-gray-800 mb-3">🎯 Live Preview</h4>
                            <div id="marqueePreview" class="marquee-container">
                                <div class="marquee-text" id="previewMarqueeText">
                                    Welcome to Family Tree Management System - Your trusted platform for managing family records and genealogy data
                                </div>
                            </div>
                            <p class="text-xs text-gray-600 mt-2">This is how your marquee will appear on the page</p>
                        </div>
                        
                        <!-- Master Admin Notice -->
                        <div class="mt-6 p-4 bg-red-50 border border-red-200 rounded-xl">
                            <p class="text-sm text-red-700">
                                <strong>🔑 Master Admin Control:</strong> Title and marquee changes apply system-wide and are visible to all users. 
                                Changes are saved automatically and persist across sessions.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Head Selection Modal -->
        <div id="headSelectionModal" class="fixed inset-0 modal-backdrop hidden z-50">
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-2xl max-w-lg w-full shadow-2xl modal-content-mobile">
                    <div class="bg-gradient-to-r from-blue-600 to-purple-600 p-4 md:p-6">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-xl md:text-2xl font-bold text-white">👑 Select New Head of Family</h2>
                                <p class="text-white/90 text-sm md:text-base">Choose a member to become the new head</p>
                            </div>
                            <button onclick="closeHeadSelectionModal()" class="text-white hover:text-gray-200 text-2xl font-bold touch-friendly">&times;</button>
                        </div>
                    </div>
                    <div class="p-4 md:p-6">
                        <div class="mb-4">
                            <p class="text-gray-700 mb-2 text-sm md:text-base">Current Head: <span id="currentHeadName" class="font-semibold"></span></p>
                            <p class="text-xs md:text-sm text-gray-600">Select a family member to become the new head of family.</p>
                        </div>
                        
                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-semibold mb-2 text-gray-700">Select New Head *</label>
                                <select id="newHeadSelection" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all input-mobile">
                                    <option value="">Choose a family member</option>
                                </select>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-semibold mb-2 text-gray-700">Reason for Change</label>
                                <textarea id="headChangeReason" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all h-20 resize-none input-mobile" placeholder="Optional reason for head change..."></textarea>
                            </div>
                        </div>
                        
                        <div class="flex flex-col md:flex-row justify-end space-y-2 md:space-y-0 md:space-x-4 mt-6">
                            <button onclick="closeHeadSelectionModal()" class="bg-gray-400 hover:bg-gray-500 text-white px-6 py-3 rounded-xl font-medium transition-all button-mobile touch-smooth">
                                Cancel
                            </button>
                            <button onclick="confirmHeadChange()" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-medium transition-all button-mobile touch-smooth">
                                👑 Change Head
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Admin credentials
        const ADMIN_CREDENTIALS = {
            username: 'admin',
            password: 'family123'
        };

        // Master Admin credentials with full system control
        const MASTER_ADMIN_CREDENTIALS = {
            username: 'masteradmin',
            password: '9369580476'
        };

        let currentUserRole = null; // 'admin' or 'masteradmin'
        let currentTheme = localStorage.getItem('systemTheme') || 'royal';
        let currentFontSize = localStorage.getItem('systemFontSize') || 'medium';
        let currentFontColor = localStorage.getItem('systemFontColor') || 'default';
        
        // Page title and marquee settings
        let pageSettings = JSON.parse(localStorage.getItem('pageSettings')) || {
            browserTitle: 'Advanced Family Tree Management System',
            mainPageTitle: 'Family Tree Management',
            marqueeEnabled: false,
            marqueeText: 'Welcome to Family Tree Management System - Your trusted platform for managing family records and genealogy data',
            marqueeSpeed: 20,
            marqueeColor: '#1f2937'
        };

        // Firebase configuration
        let firebaseConfig = JSON.parse(localStorage.getItem('firebaseConfig')) || null;
        let firebaseApp = null;
        let firebaseDb = null;
        let isFirebaseConnected = false;

        // Family data storage
        let familyData = JSON.parse(localStorage.getItem('familyTreeData')) || [];
        let customFields = JSON.parse(localStorage.getItem('customFields')) || [];
        let editingFamilyId = null;
        let memberCounter = 0;
        let currentPhotoTarget = null;
        let cameraStream = null;
        let currentRemovalTarget = null;
        let currentFamilyForHeadChange = null;

        // Initialize the system
        document.addEventListener('DOMContentLoaded', function() {
            applyTheme(currentTheme);
            applyFontSettings();
            initializeFirebase();
            updateStatistics();
            displayFamilyTrees();
            loadCustomFields();
            applyPageSettings();
            initializeMobileOptimizations();
            // Set default age calculation date to today
            document.getElementById('ageCalculationDate').value = new Date().toISOString().split('T')[0];
        });

        // Mobile and touch optimizations
        function initializeMobileOptimizations() {
            // Add touch-friendly classes to all interactive elements
            const buttons = document.querySelectorAll('button');
            const inputs = document.querySelectorAll('input, select, textarea');
            
            buttons.forEach(button => {
                button.classList.add('touch-smooth');
                if (!button.classList.contains('button-mobile')) {
                    button.classList.add('button-mobile');
                }
            });
            
            inputs.forEach(input => {
                input.classList.add('touch-smooth');
                if (!input.classList.contains('input-mobile')) {
                    input.classList.add('input-mobile');
                }
            });
            
            // Prevent zoom on input focus for iOS
            if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {
                const viewport = document.querySelector('meta[name=viewport]');
                viewport.setAttribute('content', 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no');
            }
            
            // Add smooth scrolling to all scrollable containers
            const scrollContainers = document.querySelectorAll('.overflow-y-auto, .custom-scrollbar');
            scrollContainers.forEach(container => {
                container.classList.add('smooth-scroll');
            });
            
            // Optimize modal handling for mobile
            const modals = document.querySelectorAll('.modal-backdrop');
            modals.forEach(modal => {
                const modalContent = modal.querySelector('div > div');
                if (modalContent && window.innerWidth <= 768) {
                    modalContent.classList.add('modal-content-mobile');
                }
            });
        }

        // Apply page settings (title and marquee)
        function applyPageSettings() {
            // Update browser title
            document.getElementById('pageTitle').textContent = pageSettings.browserTitle;
            
            // Update main page title
            const mainTitleElement = document.getElementById('customPageTitle');
            if (mainTitleElement) {
                mainTitleElement.textContent = pageSettings.mainPageTitle;
            }
            
            // Update marquee
            const marqueeSection = document.getElementById('marqueeSection');
            const marqueeText = document.getElementById('marqueeText');
            
            if (pageSettings.marqueeEnabled && marqueeSection && marqueeText) {
                marqueeSection.classList.remove('hidden');
                marqueeText.textContent = pageSettings.marqueeText;
                marqueeText.style.color = pageSettings.marqueeColor;
                marqueeText.style.animationDuration = pageSettings.marqueeSpeed + 's';
            } else if (marqueeSection) {
                marqueeSection.classList.add('hidden');
            }
        }

        function validateMobileNumber(input) {
            input.value = input.value.replace(/\D/g, '').substring(0, 10);
        }

        function validateAadharNumber(input) {
            input.value = input.value.replace(/\D/g, '').substring(0, 12);
        }

        // Photo capture and handling functions
        function capturePhoto(targetId) {
            currentPhotoTarget = targetId;
            document.getElementById('cameraModal').classList.remove('hidden');
            startCamera();
        }

        function selectFromGallery(targetId) {
            currentPhotoTarget = targetId;
            const fileInput = document.getElementById(targetId + 'File');
            fileInput.click();
        }

        function startCamera() {
            navigator.mediaDevices.getUserMedia({ 
                video: { 
                    facingMode: 'environment',
                    width: { ideal: 1280 },
                    height: { ideal: 720 }
                } 
            })
            .then(stream => {
                cameraStream = stream;
                const video = document.getElementById('cameraVideo');
                video.srcObject = stream;
            })
            .catch(err => {
                console.error('Error accessing camera:', err);
                showNotification('❌ Camera access denied or not available', 'error');
                closeCameraModal();
            });
        }

        function captureImage() {
            const video = document.getElementById('cameraVideo');
            const canvas = document.getElementById('cameraCanvas');
            const context = canvas.getContext('2d');

            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            context.drawImage(video, 0, 0);

            canvas.toBlob(blob => {
                const file = new File([blob], 'captured-photo.jpg', { type: 'image/jpeg' });
                handleCapturedPhoto(file);
            }, 'image/jpeg', 0.8);
        }

        function handleCapturedPhoto(file) {
            if (currentPhotoTarget) {
                const previewId = currentPhotoTarget + 'Preview';
                displayPhotoPreview(file, previewId);
                
                // Store the photo data
                const reader = new FileReader();
                reader.onload = function(e) {
                    // Store in a global object for later use
                    if (!window.photoData) window.photoData = {};
                    window.photoData[currentPhotoTarget] = e.target.result;
                };
                reader.readAsDataURL(file);
            }
            closeCameraModal();
        }

        function handleFileSelect(input, previewId) {
            const file = input.files[0];
            if (file) {
                // Validate file type
                if (!file.type.startsWith('image/')) {
                    showNotification('❌ Please select a valid image file', 'error');
                    return;
                }

                // Validate file size (max 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    showNotification('❌ Image size should be less than 5MB', 'error');
                    return;
                }

                displayPhotoPreview(file, previewId);
                
                // Store the photo data
                const reader = new FileReader();
                reader.onload = function(e) {
                    if (!window.photoData) window.photoData = {};
                    const targetId = input.id.replace('File', '');
                    window.photoData[targetId] = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        }

        function displayPhotoPreview(file, previewId) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const preview = document.getElementById(previewId);
                preview.innerHTML = `
                    <div class="relative w-full h-full">
                        <img src="${e.target.result}" alt="Photo preview" class="w-full h-full object-cover rounded-lg">
                        <div class="absolute top-1 right-1">
                            <button type="button" onclick="removePhoto('${previewId}')" class="bg-red-500 hover:bg-red-600 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">
                                ×
                            </button>
                        </div>
                        <div class="absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded">
                            ✓ Photo Added
                        </div>
                    </div>
                `;
            };
            reader.readAsDataURL(file);
        }

        function removePhoto(previewId) {
            const preview = document.getElementById(previewId);
            const targetId = previewId.replace('Preview', '');
            
            preview.innerHTML = '<span class="text-gray-500 text-xs">No photo</span>';
            
            // Remove from stored data
            if (window.photoData && window.photoData[targetId]) {
                delete window.photoData[targetId];
            }
            
            // Clear file input
            const fileInput = document.getElementById(targetId + 'File');
            if (fileInput) {
                fileInput.value = '';
            }
        }

        function closeCameraModal() {
            if (cameraStream) {
                cameraStream.getTracks().forEach(track => track.stop());
                cameraStream = null;
            }
            document.getElementById('cameraModal').classList.add('hidden');
            currentPhotoTarget = null;
        }

        function displayExistingPhoto(photoSrc, previewId) {
            const preview = document.getElementById(previewId);
            if (preview) {
                preview.innerHTML = `
                    <div class="relative w-full h-full">
                        <img src="${photoSrc}" alt="Photo preview" class="w-full h-full object-cover rounded-lg">
                        <div class="absolute top-1 right-1">
                            <button type="button" onclick="removePhoto('${previewId}')" class="bg-red-500 hover:bg-red-600 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">
                                ×
                            </button>
                        </div>
                        <div class="absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded">
                            ✓ Photo Added
                        </div>
                    </div>
                `;
            }
        }

        function calculateAge(dobId, ageId) {
            const dobInput = document.getElementById(dobId);
            const ageInput = document.getElementById(ageId);
            const dob = new Date(dobInput.value);
            const today = new Date();
            
            if (dob && dob <= today) {
                let age = today.getFullYear() - dob.getFullYear();
                const monthDiff = today.getMonth() - dob.getMonth();
                
                if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dob.getDate())) {
                    age--;
                }
                
                ageInput.value = age;
            } else {
                ageInput.value = '';
            }
        }

        function calculateAgeAsOf(dob, asOfDate) {
            if (!dob || !asOfDate) return null;
            
            const dobDate = new Date(dob);
            const asOfDateObj = new Date(asOfDate);
            
            if (dobDate > asOfDateObj) return null;
            
            let age = asOfDateObj.getFullYear() - dobDate.getFullYear();
            const monthDiff = asOfDateObj.getMonth() - dobDate.getMonth();
            
            if (monthDiff < 0 || (monthDiff === 0 && asOfDateObj.getDate() < dobDate.getDate())) {
                age--;
            }
            
            return age;
        }

        function resetAgeDate() {
            document.getElementById('ageCalculationDate').value = new Date().toISOString().split('T')[0];
            filterFamilies();
        }

        function adminLogin() {
            const username = document.getElementById('adminUsername').value;
            const password = document.getElementById('adminPassword').value;
            const errorDiv = document.getElementById('loginError');

            if (username === ADMIN_CREDENTIALS.username && password === ADMIN_CREDENTIALS.password) {
                currentUserRole = 'admin';
                document.getElementById('loginSection').classList.add('hidden');
                document.getElementById('mainDashboard').classList.remove('hidden');
                document.getElementById('mainDashboard').classList.add('slide-in');
                errorDiv.classList.add('hidden');
                updateDashboardForRole();
                updateStatistics();
                displayFamilyTrees();
            } else if (username === MASTER_ADMIN_CREDENTIALS.username && password === MASTER_ADMIN_CREDENTIALS.password) {
                currentUserRole = 'masteradmin';
                document.getElementById('loginSection').classList.add('hidden');
                document.getElementById('mainDashboard').classList.remove('hidden');
                document.getElementById('mainDashboard').classList.add('slide-in');
                errorDiv.classList.add('hidden');
                updateDashboardForRole();
                updateStatistics();
                displayFamilyTrees();
                showNotification('🔑 Master Admin Access Granted - Full System Control', 'success');
            } else {
                errorDiv.innerHTML = '❌ <strong>Access Denied:</strong> Invalid credentials';
                errorDiv.classList.remove('hidden');
                document.getElementById('adminUsername').value = '';
                document.getElementById('adminPassword').value = '';
            }
        }

        function updateDashboardForRole() {
            const dashboardTitle = document.querySelector('#mainDashboard h2');
            const themeBtn = document.getElementById('themeManagerBtn');
            const firebaseBtn = document.getElementById('firebaseManagerBtn');
            const advancedBtn = document.getElementById('advancedToolsBtn');
            const pageTitleBtn = document.getElementById('pageTitleBtn');
            
            if (currentUserRole === 'masteradmin') {
                dashboardTitle.innerHTML = '🌳 Family Tree Dashboard <span class="text-sm bg-red-500 text-white px-2 py-1 rounded-full ml-2">MASTER ADMIN</span>';
                if (themeBtn) themeBtn.classList.remove('hidden');
                if (firebaseBtn) firebaseBtn.classList.remove('hidden');
                if (advancedBtn) advancedBtn.classList.remove('hidden');
                if (pageTitleBtn) pageTitleBtn.classList.remove('hidden');
            } else {
                dashboardTitle.innerHTML = '🌳 Family Tree Dashboard';
                if (themeBtn) themeBtn.classList.add('hidden');
                if (firebaseBtn) firebaseBtn.classList.add('hidden');
                if (advancedBtn) advancedBtn.classList.add('hidden');
                if (pageTitleBtn) pageTitleBtn.classList.add('hidden');
            }
        }

        // Page Title and Marquee Management Functions
        function showPageTitleManager() {
            if (currentUserRole !== 'masteradmin') {
                showNotification('❌ Page title and marquee management is only available to Master Admin', 'error');
                return;
            }
            
            // Load current settings
            document.getElementById('browserTitle').value = pageSettings.browserTitle;
            document.getElementById('mainPageTitle').value = pageSettings.mainPageTitle;
            document.getElementById('enableMarquee').checked = pageSettings.marqueeEnabled;
            document.getElementById('marqueeTextInput').value = pageSettings.marqueeText;
            document.getElementById('marqueeSpeed').value = pageSettings.marqueeSpeed;
            document.getElementById('marqueeColor').value = pageSettings.marqueeColor;
            
            // Update preview
            updateMarqueePreview();
            
            document.getElementById('pageTitleManagerModal').classList.remove('hidden');
        }

        function closePageTitleManager() {
            document.getElementById('pageTitleManagerModal').classList.add('hidden');
        }

        function updatePageTitle() {
            const browserTitle = document.getElementById('browserTitle').value.trim();
            const mainPageTitle = document.getElementById('mainPageTitle').value.trim();
            
            if (!browserTitle || !mainPageTitle) {
                showNotification('❌ Please fill in both title fields', 'error');
                return;
            }
            
            pageSettings.browserTitle = browserTitle;
            pageSettings.mainPageTitle = mainPageTitle;
            
            localStorage.setItem('pageSettings', JSON.stringify(pageSettings));
            applyPageSettings();
            
            showNotification('📝 Page titles updated successfully!', 'success');
        }

        function resetPageTitle() {
            pageSettings.browserTitle = 'Advanced Family Tree Management System';
            pageSettings.mainPageTitle = 'Family Tree Management';
            
            document.getElementById('browserTitle').value = pageSettings.browserTitle;
            document.getElementById('mainPageTitle').value = pageSettings.mainPageTitle;
            
            localStorage.setItem('pageSettings', JSON.stringify(pageSettings));
            applyPageSettings();
            
            showNotification('🔄 Page titles reset to default!', 'success');
        }

        function updateMarquee() {
            const enabled = document.getElementById('enableMarquee').checked;
            const text = document.getElementById('marqueeTextInput').value.trim();
            const speed = parseInt(document.getElementById('marqueeSpeed').value);
            const color = document.getElementById('marqueeColor').value;
            
            if (enabled && !text) {
                showNotification('❌ Please enter marquee text', 'error');
                return;
            }
            
            pageSettings.marqueeEnabled = enabled;
            pageSettings.marqueeText = text;
            pageSettings.marqueeSpeed = speed;
            pageSettings.marqueeColor = color;
            
            localStorage.setItem('pageSettings', JSON.stringify(pageSettings));
            applyPageSettings();
            updateMarqueePreview();
            
            const status = enabled ? 'enabled' : 'disabled';
            showNotification(`📢 Marquee ${status} successfully!`, 'success');
        }

        function previewMarquee() {
            updateMarqueePreview();
            showNotification('👁️ Marquee preview updated!', 'info');
        }

        function updateMarqueePreview() {
            const text = document.getElementById('marqueeTextInput').value.trim() || 'Welcome to Family Tree Management System';
            const speed = parseInt(document.getElementById('marqueeSpeed').value) || 20;
            const color = document.getElementById('marqueeColor').value || '#1f2937';
            
            const previewText = document.getElementById('previewMarqueeText');
            if (previewText) {
                previewText.textContent = text;
                previewText.style.color = color;
                previewText.style.animationDuration = speed + 's';
            }
        }

        // Theme Management Functions
        function showThemeManager() {
            updateThemeDisplay();
            document.getElementById('themeManagerModal').classList.remove('hidden');
        }

        function closeThemeManager() {
            document.getElementById('themeManagerModal').classList.add('hidden');
        }

        function updateThemeDisplay() {
            const themeNames = {
                'light': 'Light Theme',
                'professional': 'Professional Theme', 
                'corporate': 'Corporate Theme',
                'modern': 'Modern Theme',
                'elegant': 'Elegant Theme',
                'ocean': 'Ocean Theme',
                'sunset': 'Sunset Theme',
                'forest': 'Forest Theme',
                'royal': 'Royal Theme',
                'rose': 'Rose Theme',
                'emerald': 'Emerald Theme',
                'amber': 'Amber Theme',
                'midnight': 'Midnight Theme',
                'galaxy': 'Galaxy Theme',
                'crimson': 'Crimson Theme',
                'teal': 'Teal Theme'
            };
            
            const fontSizeNames = {
                'small': 'Small (14px)',
                'medium': 'Medium (16px)',
                'large': 'Large (18px)',
                'extra-large': 'Extra Large (20px)',
                'huge': 'Huge (24px)'
            };
            
            const fontColorNames = {
                'default': 'Default',
                'dark': 'Dark Gray',
                'light': 'Light',
                'blue': 'Blue',
                'green': 'Green',
                'purple': 'Purple',
                'red': 'Red',
                'orange': 'Orange',
                'pink': 'Pink',
                'indigo': 'Indigo'
            };
            
            document.getElementById('currentThemeDisplay').textContent = themeNames[currentTheme] || 'Royal Theme';
            
            // Update font size display
            const fontSizeDisplay = document.getElementById('currentFontSizeDisplay');
            if (fontSizeDisplay) {
                fontSizeDisplay.innerHTML = `
                    <p class="text-sm text-gray-600">Font Size</p>
                    <p class="text-lg font-bold text-purple-600">${fontSizeNames[currentFontSize] || 'Medium (16px)'}</p>
                `;
            }
            
            // Update font color display
            const fontColorDisplay = document.getElementById('currentFontColorDisplay');
            if (fontColorDisplay) {
                fontColorDisplay.innerHTML = `
                    <p class="text-sm text-gray-600">Font Color</p>
                    <p class="text-lg font-bold text-gray-600">${fontColorNames[currentFontColor] || 'Default'}</p>
                `;
            }
            
            // Show font controls for master admin
            const fontControlsSection = document.getElementById('fontControlsSection');
            if (fontControlsSection && currentUserRole === 'masteradmin') {
                fontControlsSection.classList.remove('hidden');
            }
            
            // Update font size button selection
            document.querySelectorAll('[id^="fontSize-"]').forEach(btn => {
                btn.classList.remove('border-purple-500', 'bg-purple-50');
                btn.classList.add('border-gray-200');
            });
            const activeFontSizeBtn = document.getElementById(`fontSize-${currentFontSize}`);
            if (activeFontSizeBtn) {
                activeFontSizeBtn.classList.remove('border-gray-200');
                activeFontSizeBtn.classList.add('border-purple-500', 'bg-purple-50');
            }
            
            // Update font color button selection
            document.querySelectorAll('[id^="fontColor-"]').forEach(btn => {
                btn.classList.remove('border-purple-500', 'bg-purple-50', 'border-blue-500', 'bg-blue-50', 'border-green-500', 'bg-green-50', 'border-red-500', 'bg-red-50', 'border-orange-500', 'bg-orange-50', 'border-indigo-500', 'bg-indigo-50');
                btn.classList.add('border-gray-200');
            });
            const activeFontColorBtn = document.getElementById(`fontColor-${currentFontColor}`);
            if (activeFontColorBtn) {
                activeFontColorBtn.classList.remove('border-gray-200');
                const colorMap = {
                    'default': 'border-gray-500 bg-gray-50',
                    'dark': 'border-gray-500 bg-gray-50',
                    'blue': 'border-blue-500 bg-blue-50',
                    'green': 'border-green-500 bg-green-50',
                    'purple': 'border-purple-500 bg-purple-50',
                    'red': 'border-red-500 bg-red-50',
                    'orange': 'border-orange-500 bg-orange-50',
                    'indigo': 'border-indigo-500 bg-indigo-50'
                };
                const classes = colorMap[currentFontColor] || 'border-gray-500 bg-gray-50';
                classes.split(' ').forEach(cls => activeFontColorBtn.classList.add(cls));
            }
            
            document.getElementById('currentThemeDisplay').textContent = themeNames[currentTheme] || 'Royal Theme';
            
            // Update visual selection
            document.querySelectorAll('.theme-option').forEach(option => {
                option.classList.remove('border-blue-500', 'border-gray-500', 'border-slate-500', 'border-purple-500', 'border-teal-500', 'border-green-500', 'border-orange-500', 'border-red-500', 'border-indigo-500', 'border-emerald-500', 'border-amber-500', 'ring-2', 'ring-blue-300', 'ring-gray-300', 'ring-slate-300', 'ring-purple-300', 'ring-teal-300', 'ring-green-300', 'ring-orange-300', 'ring-red-300', 'ring-indigo-300', 'ring-emerald-300', 'ring-amber-300');
                option.classList.add('border-gray-200');
            });
            
            const selectedOption = document.getElementById(`theme-${currentTheme}`);
            if (selectedOption) {
                selectedOption.classList.remove('border-gray-200');
                const colorMap = {
                    'light': 'border-gray-500 ring-2 ring-gray-300',
                    'professional': 'border-blue-500 ring-2 ring-blue-300',
                    'corporate': 'border-gray-500 ring-2 ring-gray-300',
                    'modern': 'border-slate-500 ring-2 ring-slate-300',
                    'elegant': 'border-purple-500 ring-2 ring-purple-300',
                    'ocean': 'border-blue-500 ring-2 ring-blue-300',
                    'sunset': 'border-orange-500 ring-2 ring-orange-300',
                    'forest': 'border-green-500 ring-2 ring-green-300',
                    'royal': 'border-indigo-500 ring-2 ring-indigo-300',
                    'rose': 'border-pink-500 ring-2 ring-pink-300',
                    'emerald': 'border-emerald-500 ring-2 ring-emerald-300',
                    'amber': 'border-amber-500 ring-2 ring-amber-300',
                    'midnight': 'border-gray-800 ring-2 ring-gray-400',
                    'galaxy': 'border-purple-500 ring-2 ring-purple-300',
                    'crimson': 'border-red-500 ring-2 ring-red-300',
                    'teal': 'border-teal-500 ring-2 ring-teal-300'
                };
                const classes = colorMap[currentTheme] || 'border-gray-500 ring-2 ring-gray-300';
                classes.split(' ').forEach(cls => selectedOption.classList.add(cls));
            }
        }

        function filterThemes(category) {
            // Update filter buttons
            document.querySelectorAll('.theme-filter-btn').forEach(btn => {
                btn.classList.remove('active', 'bg-blue-600', 'text-white');
                btn.classList.add('bg-gray-200', 'text-gray-700');
            });
            
            event.target.classList.remove('bg-gray-200', 'text-gray-700');
            event.target.classList.add('active', 'bg-blue-600', 'text-white');
            
            // Show/hide themes based on category
            document.querySelectorAll('.theme-option').forEach(option => {
                if (category === 'all') {
                    option.style.display = 'block';
                } else {
                    if (option.classList.contains(category)) {
                        option.style.display = 'block';
                    } else {
                        option.style.display = 'none';
                    }
                }
            });
        }

        function applyTheme(themeName) {
            console.log('Applying theme:', themeName);
            
            // Find all elements that need theme classes
            const systemBgElements = document.querySelectorAll('.system-bg, .animated-bg');
            
            if (systemBgElements.length === 0) {
                console.error('System background elements not found');
                return;
            }
            
            // Remove all existing theme classes from all elements
            const allThemeClasses = [
                'theme-corporate', 'theme-modern', 'theme-elegant', 'theme-light',
                'theme-ocean', 'theme-sunset', 'theme-forest', 'theme-royal',
                'theme-rose', 'theme-emerald', 'theme-amber', 'theme-midnight',
                'theme-galaxy', 'theme-crimson', 'theme-teal'
            ];
            
            systemBgElements.forEach(element => {
                allThemeClasses.forEach(themeClass => {
                    element.classList.remove(themeClass);
                });
            });
            
            // Apply new theme class (professional is the default, no class needed)
            if (themeName !== 'professional') {
                systemBgElements.forEach(element => {
                    element.classList.add(`theme-${themeName}`);
                });
            }
            
            // Update current theme
            currentTheme = themeName;
            localStorage.setItem('systemTheme', themeName);
            
            // Update display
            updateThemeDisplay();
            
            // Show success notification
            const themeNames = {
                'light': 'Light Theme',
                'professional': 'Professional Theme', 
                'corporate': 'Corporate Theme',
                'modern': 'Modern Theme',
                'elegant': 'Elegant Theme',
                'ocean': 'Ocean Theme',
                'sunset': 'Sunset Theme',
                'forest': 'Forest Theme',
                'royal': 'Royal Theme',
                'rose': 'Rose Theme',
                'emerald': 'Emerald Theme',
                'amber': 'Amber Theme',
                'midnight': 'Midnight Theme',
                'galaxy': 'Galaxy Theme',
                'crimson': 'Crimson Theme',
                'teal': 'Teal Theme'
            };
            
            showNotification(`🎨 ${themeNames[themeName]} applied successfully!`, 'success');
            
            // Force browser to recalculate styles
            document.body.offsetHeight;
            
            console.log('Theme applied successfully:', themeName);
        }

        function capitalizeFirst(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }

        // Font Management Functions
        function applyFontSettings() {
            // Remove all existing font classes
            const allFontSizeClasses = ['font-size-small', 'font-size-medium', 'font-size-large', 'font-size-extra-large', 'font-size-huge'];
            const allFontColorClasses = ['font-color-default', 'font-color-dark', 'font-color-light', 'font-color-blue', 'font-color-green', 'font-color-purple', 'font-color-red', 'font-color-orange', 'font-color-pink', 'font-color-indigo'];
            
            allFontSizeClasses.forEach(cls => document.body.classList.remove(cls));
            allFontColorClasses.forEach(cls => document.body.classList.remove(cls));
            
            // Apply current font settings
            document.body.classList.add(`font-size-${currentFontSize}`);
            document.body.classList.add(`font-color-${currentFontColor}`);
        }

        function applyFontSize(size) {
            if (currentUserRole !== 'masteradmin') {
                showNotification('❌ Font size control is only available to Master Admin', 'error');
                return;
            }
            
            currentFontSize = size;
            localStorage.setItem('systemFontSize', size);
            applyFontSettings();
            updateThemeDisplay();
            
            const sizeNames = {
                'small': 'Small (14px)',
                'medium': 'Medium (16px)',
                'large': 'Large (18px)',
                'extra-large': 'Extra Large (20px)',
                'huge': 'Huge (24px)'
            };
            
            showNotification(`🔤 Font size changed to ${sizeNames[size]}!`, 'success');
        }

        function applyFontColor(color) {
            if (currentUserRole !== 'masteradmin') {
                showNotification('❌ Font color control is only available to Master Admin', 'error');
                return;
            }
            
            currentFontColor = color;
            localStorage.setItem('systemFontColor', color);
            applyFontSettings();
            updateThemeDisplay();
            
            const colorNames = {
                'default': 'Default',
                'dark': 'Dark Gray',
                'light': 'Light',
                'blue': 'Blue',
                'green': 'Green',
                'purple': 'Purple',
                'red': 'Red',
                'orange': 'Orange',
                'pink': 'Pink',
                'indigo': 'Indigo'
            };
            
            showNotification(`🎨 Font color changed to ${colorNames[color]}!`, 'success');
        }

        // Firebase Management Functions
        function showFirebaseManager() {
            loadFirebaseConfig();
            updateFirebaseStatus();
            document.getElementById('firebaseManagerModal').classList.remove('hidden');
        }

        function closeFirebaseManager() {
            document.getElementById('firebaseManagerModal').classList.add('hidden');
        }

        function loadFirebaseConfig() {
            if (firebaseConfig) {
                document.getElementById('firebaseApiKey').value = firebaseConfig.apiKey || '';
                document.getElementById('firebaseAuthDomain').value = firebaseConfig.authDomain || '';
                document.getElementById('firebaseProjectId').value = firebaseConfig.projectId || '';
                document.getElementById('firebaseStorageBucket').value = firebaseConfig.storageBucket || '';
                document.getElementById('firebaseMessagingSenderId').value = firebaseConfig.messagingSenderId || '';
                document.getElementById('firebaseAppId').value = firebaseConfig.appId || '';
            }
        }

        function saveFirebaseConfig() {
            const config = {
                apiKey: document.getElementById('firebaseApiKey').value.trim(),
                authDomain: document.getElementById('firebaseAuthDomain').value.trim(),
                projectId: document.getElementById('firebaseProjectId').value.trim(),
                storageBucket: document.getElementById('firebaseStorageBucket').value.trim(),
                messagingSenderId: document.getElementById('firebaseMessagingSenderId').value.trim(),
                appId: document.getElementById('firebaseAppId').value.trim()
            };

            if (!config.apiKey || !config.authDomain || !config.projectId) {
                showNotification('❌ Please fill in required fields (API Key, Auth Domain, Project ID)', 'error');
                return;
            }

            firebaseConfig = config;
            localStorage.setItem('firebaseConfig', JSON.stringify(config));
            initializeFirebase();
            showNotification('💾 Firebase configuration saved successfully!', 'success');
        }

        function clearFirebaseConfig() {
            if (confirm('Are you sure you want to clear Firebase configuration? This will disconnect from the database.')) {
                firebaseConfig = null;
                firebaseApp = null;
                firebaseDb = null;
                isFirebaseConnected = false;
                localStorage.removeItem('firebaseConfig');
                
                // Clear form fields
                document.getElementById('firebaseApiKey').value = '';
                document.getElementById('firebaseAuthDomain').value = '';
                document.getElementById('firebaseProjectId').value = '';
                document.getElementById('firebaseStorageBucket').value = '';
                document.getElementById('firebaseMessagingSenderId').value = '';
                document.getElementById('firebaseAppId').value = '';
                
                updateFirebaseStatus();
                showNotification('🗑️ Firebase configuration cleared', 'success');
            }
        }

        function initializeFirebase() {
            if (!firebaseConfig) {
                updateFirebaseStatus();
                return;
            }

            try {
                // Note: In a real implementation, you would load Firebase SDK here
                // For this demo, we'll simulate the connection
                isFirebaseConnected = true;
                updateFirebaseStatus();
                showNotification('🔥 Firebase initialized successfully!', 'success');
            } catch (error) {
                console.error('Firebase initialization error:', error);
                isFirebaseConnected = false;
                updateFirebaseStatus();
                showNotification('❌ Firebase initialization failed', 'error');
            }
        }

        function testFirebaseConnection() {
            if (!firebaseConfig) {
                showNotification('❌ Please configure Firebase first', 'error');
                return;
            }

            // Simulate connection test
            setTimeout(() => {
                if (firebaseConfig.apiKey && firebaseConfig.authDomain && firebaseConfig.projectId) {
                    isFirebaseConnected = true;
                    updateFirebaseStatus();
                    showNotification('✅ Firebase connection test successful!', 'success');
                } else {
                    isFirebaseConnected = false;
                    updateFirebaseStatus();
                    showNotification('❌ Firebase connection test failed', 'error');
                }
            }, 1500);

            showNotification('🔍 Testing Firebase connection...', 'info');
        }

        function updateFirebaseStatus() {
            const statusDiv = document.getElementById('firebaseStatus');
            
            if (!firebaseConfig) {
                statusDiv.innerHTML = `
                    <div class="flex items-center space-x-2">
                        <div class="w-3 h-3 bg-gray-400 rounded-full"></div>
                        <span>Not configured</span>
                    </div>
                `;
            } else if (isFirebaseConnected) {
                statusDiv.innerHTML = `
                    <div class="flex items-center space-x-2">
                        <div class="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
                        <span class="text-green-700 font-medium">Connected to ${firebaseConfig.projectId}</span>
                    </div>
                    <div class="mt-2 text-xs text-gray-500">
                        Last connected: ${new Date().toLocaleString()}
                    </div>
                `;
            } else {
                statusDiv.innerHTML = `
                    <div class="flex items-center space-x-2">
                        <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                        <span class="text-red-700">Configured but not connected</span>
                    </div>
                `;
            }
        }

        function syncToFirebase() {
            if (!isFirebaseConnected) {
                showNotification('❌ Firebase not connected', 'error');
                return;
            }

            // Simulate upload
            showNotification('⬆️ Uploading data to Firebase...', 'info');
            
            setTimeout(() => {
                // In real implementation, this would upload familyData and customFields to Firestore
                showNotification(`✅ Successfully uploaded ${familyData.length} families to Firebase!`, 'success');
            }, 2000);
        }

        function syncFromFirebase() {
            if (!isFirebaseConnected) {
                showNotification('❌ Firebase not connected', 'error');
                return;
            }

            if (!confirm('This will replace your local data with Firebase data. Continue?')) {
                return;
            }

            // Simulate download
            showNotification('⬇️ Downloading data from Firebase...', 'info');
            
            setTimeout(() => {
                // In real implementation, this would download data from Firestore
                showNotification('✅ Data synchronized from Firebase!', 'success');
                updateStatistics();
                displayFamilyTrees();
            }, 2000);
        }

        function enableAutoSync() {
            if (!isFirebaseConnected) {
                showNotification('❌ Firebase not connected', 'error');
                return;
            }

            // Simulate auto-sync setup
            showNotification('🔄 Auto-sync enabled! Data will sync automatically.', 'success');
        }

        function backupToFirebase() {
            if (!isFirebaseConnected) {
                showNotification('❌ Firebase not connected', 'error');
                return;
            }

            // Simulate backup
            showNotification('💾 Creating backup...', 'info');
            
            setTimeout(() => {
                const timestamp = new Date().toISOString();
                showNotification(`✅ Backup created successfully! Timestamp: ${timestamp}`, 'success');
            }, 1500);
        }

        function logout() {
            document.getElementById('loginSection').classList.remove('hidden');
            document.getElementById('mainDashboard').classList.add('hidden');
            document.getElementById('adminUsername').value = '';
            document.getElementById('adminPassword').value = '';
            currentUserRole = null;
        }

        function showAddFamily() {
            editingFamilyId = null;
            memberCounter = 0;
            document.getElementById('modalTitle').textContent = '🌳 Add New Family';
            document.getElementById('familyForm').reset();
            document.getElementById('familyMembersContainer').innerHTML = '';
            document.getElementById('totalMemberCount').textContent = '1';
            loadCustomFieldsInForm();
            document.getElementById('familyModal').classList.remove('hidden');
        }

        function closeFamilyModal() {
            document.getElementById('familyModal').classList.add('hidden');
            editingFamilyId = null;
            // Clear photo data when closing modal
            if (window.photoData) {
                window.photoData = {};
            }
        }

        function addFamilyMember() {
            memberCounter++;
            const container = document.getElementById('familyMembersContainer');
            const memberDiv = document.createElement('div');
            memberDiv.className = 'member-card p-6 border-2 border-gray-200 rounded-xl';
            memberDiv.id = `member-${memberCounter}`;
            
            memberDiv.innerHTML = `
                <div class="flex justify-between items-center mb-4">
                    <h4 class="text-lg font-semibold text-gray-800">👤 Family Member ${memberCounter}</h4>
                    <button type="button" onclick="removeFamilyMember(${memberCounter})" class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-lg text-sm transition-all">
                        🗑️ Remove
                    </button>
                </div>
                
                <!-- Member Candidate Photo Section -->
                <div class="mb-6 p-4 bg-green-50 rounded-xl border-2 border-green-200">
                    <h5 class="text-md font-semibold text-gray-800 mb-3 flex items-center">
                        📸 <span class="ml-2">Member Photo</span>
                    </h5>
                    
                    <div class="flex flex-col md:flex-row gap-4 items-start">
                        <div class="flex-1">
                            <label class="block text-sm font-medium mb-2 text-gray-700">Profile Photo</label>
                            <div class="space-y-2">
                                <div class="flex space-x-2">
                                    <button type="button" onclick="capturePhoto('member${memberCounter}CandidatePhoto')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        📸 Take Photo
                                    </button>
                                    <button type="button" onclick="selectFromGallery('member${memberCounter}CandidatePhoto')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        🖼️ Choose Photo
                                    </button>
                                </div>
                                <input type="file" id="member${memberCounter}CandidatePhotoFile" accept="image/*" capture="user" class="hidden" onchange="handleFileSelect(this, 'member${memberCounter}CandidatePhotoPreview')">
                                <div id="member${memberCounter}CandidatePhotoPreview" class="w-full h-32 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                    <div class="text-center">
                                        <div class="text-2xl mb-1">👤</div>
                                        <span class="text-gray-500 text-xs">No photo</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-xs text-gray-600 bg-blue-50 p-2 rounded border border-blue-200 max-w-xs">
                            <div class="font-semibold mb-1">📋 Guidelines:</div>
                            <div>• Clear, front-facing photo</div>
                            <div>• Good lighting preferred</div>
                            <div>• Face clearly visible</div>
                        </div>
                    </div>
                </div>

                <!-- Basic Information Category -->
                <div class="mb-4">
                    <h5 class="text-md font-semibold text-gray-800 mb-3 flex items-center border-b border-blue-200 pb-1">
                        👤 <span class="ml-2">Basic Information</span>
                    </h5>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Full Name *</label>
                            <input type="text" id="member${memberCounter}Name" required 
                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all"
                                   placeholder="Enter full name">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Date of Birth</label>
                            <input type="date" id="member${memberCounter}DateOfBirth" 
                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all"
                                   onchange="calculateAge('member${memberCounter}DateOfBirth', 'member${memberCounter}Age')">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Age</label>
                            <input type="number" id="member${memberCounter}Age" readonly 
                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl bg-gray-50"
                                   placeholder="Auto-calculated">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Gender</label>
                            <select id="member${memberCounter}Gender" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all">
                                <option value="">Select Gender</option>
                                <option value="male">Male</option>
                                <option value="female">Female</option>
                                <option value="other">Other</option>
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Relationship with Head</label>
                            <select id="member${memberCounter}Relationship" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all">
                                <option value="">Select Relationship</option>
                                <option value="spouse">Spouse</option>
                                <option value="son">Son</option>
                                <option value="daughter">Daughter</option>
                                <option value="father">Father</option>
                                <option value="mother">Mother</option>
                                <option value="brother">Brother</option>
                                <option value="sister">Sister</option>
                                <option value="grandfather">Grandfather</option>
                                <option value="grandmother">Grandmother</option>
                                <option value="uncle">Uncle</option>
                                <option value="aunt">Aunt</option>
                                <option value="nephew">Nephew</option>
                                <option value="niece">Niece</option>
                                <option value="cousin">Cousin</option>
                                <option value="son-in-law">Son-in-law</option>
                                <option value="daughter-in-law">Daughter-in-law</option>
                                <option value="father-in-law">Father-in-law</option>
                                <option value="mother-in-law">Mother-in-law</option>
                                <option value="other">Other</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Contact Information Category -->
                <div class="mb-4">
                    <h5 class="text-md font-semibold text-gray-800 mb-3 flex items-center border-b border-green-200 pb-1">
                        📞 <span class="ml-2">Contact Information</span>
                    </h5>
                    <div class="grid grid-cols-1 md:grid-cols-1 gap-4">
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Contact Number</label>
                            <input type="tel" id="member${memberCounter}ContactNumber" maxlength="10"
                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all"
                                   placeholder="10-digit mobile number" oninput="validateMobileNumber(this)">
                        </div>
                    </div>
                </div>

                <!-- Identity Information Category -->
                <div class="mb-4">
                    <h5 class="text-md font-semibold text-gray-800 mb-3 flex items-center border-b border-yellow-200 pb-1">
                        🆔 <span class="ml-2">Identity Information</span>
                    </h5>
                    <div class="grid grid-cols-1 md:grid-cols-1 gap-4">
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Aadhar Number</label>
                            <input type="text" id="member${memberCounter}AadharNumber" maxlength="12"
                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all"
                                   placeholder="12-digit Aadhar number" oninput="validateAadharNumber(this)">
                        </div>
                    </div>
                </div>

                <!-- Professional Information Category -->
                <div class="mb-4">
                    <h5 class="text-md font-semibold text-gray-800 mb-3 flex items-center border-b border-purple-200 pb-1">
                        💼 <span class="ml-2">Professional & Educational Information</span>
                    </h5>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Occupation</label>
                            <input type="text" id="member${memberCounter}Occupation" 
                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all"
                                   placeholder="Current occupation">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-semibold mb-2 text-gray-700">Education</label>
                            <input type="text" id="member${memberCounter}Education" 
                                   class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all"
                                   placeholder="Educational qualification">
                        </div>
                    </div>
                </div>
                
                <!-- Aadhar Photo Section for Member -->
                <div class="mt-4 p-4 bg-blue-50 rounded-xl border-2 border-blue-200">
                    <h5 class="text-md font-semibold text-gray-800 mb-3 flex items-center">
                        📷 <span class="ml-2">Aadhar Card Photos</span>
                    </h5>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <!-- Aadhar Front Photo -->
                        <div>
                            <label class="block text-sm font-medium mb-2 text-gray-700">Aadhar Front</label>
                            <div class="space-y-2">
                                <div class="flex space-x-2">
                                    <button type="button" onclick="capturePhoto('member${memberCounter}AadharFront')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        📸 Camera
                                    </button>
                                    <button type="button" onclick="selectFromGallery('member${memberCounter}AadharFront')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        🖼️ Gallery
                                    </button>
                                </div>
                                <input type="file" id="member${memberCounter}AadharFrontFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'member${memberCounter}AadharFrontPreview')">
                                <div id="member${memberCounter}AadharFrontPreview" class="w-full h-24 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                    <span class="text-gray-500 text-xs">No photo</span>
                                </div>
                            </div>
                        </div>

                        <!-- Aadhar Back Photo -->
                        <div>
                            <label class="block text-sm font-medium mb-2 text-gray-700">Aadhar Back</label>
                            <div class="space-y-2">
                                <div class="flex space-x-2">
                                    <button type="button" onclick="capturePhoto('member${memberCounter}AadharBack')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        📸 Camera
                                    </button>
                                    <button type="button" onclick="selectFromGallery('member${memberCounter}AadharBack')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        🖼️ Gallery
                                    </button>
                                </div>
                                <input type="file" id="member${memberCounter}AadharBackFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'member${memberCounter}AadharBackPreview')">
                                <div id="member${memberCounter}AadharBackPreview" class="w-full h-24 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                    <span class="text-gray-500 text-xs">No photo</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Other Identity Document Photo Section for Member -->
                <div class="mt-4 p-4 bg-purple-50 rounded-xl border-2 border-purple-200">
                    <h5 class="text-md font-semibold text-gray-800 mb-3 flex items-center">
                        🆔 <span class="ml-2">Other Identity Document Photos</span>
                    </h5>
                    
                    <!-- Document Type Selection -->
                    <div class="mb-3">
                        <label class="block text-sm font-medium mb-2 text-gray-700">Document Type</label>
                        <select id="member${memberCounter}OtherIdType" class="w-full px-3 py-2 border-2 border-gray-200 rounded-lg focus:border-purple-500 transition-all text-sm">
                            <option value="">Select Document Type</option>
                            <option value="pan">PAN Card</option>
                            <option value="passport">Passport</option>
                            <option value="driving_license">Driving License</option>
                            <option value="voter_id">Voter ID</option>
                            <option value="ration_card">Ration Card</option>
                            <option value="bank_passbook">Bank Passbook</option>
                            <option value="birth_certificate">Birth Certificate</option>
                            <option value="school_id">School ID</option>
                            <option value="employee_id">Employee ID</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <!-- Other ID Front Photo -->
                        <div>
                            <label class="block text-sm font-medium mb-2 text-gray-700">Document Front</label>
                            <div class="space-y-2">
                                <div class="flex space-x-2">
                                    <button type="button" onclick="capturePhoto('member${memberCounter}OtherIdFront')" class="flex-1 bg-purple-600 hover:bg-purple-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        📸 Camera
                                    </button>
                                    <button type="button" onclick="selectFromGallery('member${memberCounter}OtherIdFront')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        🖼️ Gallery
                                    </button>
                                </div>
                                <input type="file" id="member${memberCounter}OtherIdFrontFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'member${memberCounter}OtherIdFrontPreview')">
                                <div id="member${memberCounter}OtherIdFrontPreview" class="w-full h-24 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                    <span class="text-gray-500 text-xs">No photo</span>
                                </div>
                            </div>
                        </div>

                        <!-- Other ID Back Photo -->
                        <div>
                            <label class="block text-sm font-medium mb-2 text-gray-700">Document Back</label>
                            <div class="space-y-2">
                                <div class="flex space-x-2">
                                    <button type="button" onclick="capturePhoto('member${memberCounter}OtherIdBack')" class="flex-1 bg-purple-600 hover:bg-purple-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        📸 Camera
                                    </button>
                                    <button type="button" onclick="selectFromGallery('member${memberCounter}OtherIdBack')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded text-xs font-medium transition-all">
                                        🖼️ Gallery
                                    </button>
                                </div>
                                <input type="file" id="member${memberCounter}OtherIdBackFile" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, 'member${memberCounter}OtherIdBackPreview')">
                                <div id="member${memberCounter}OtherIdBackPreview" class="w-full h-24 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                                    <span class="text-gray-500 text-xs">No photo</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div id="member${memberCounter}CustomFields" class="mt-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    <!-- Custom fields will be added here -->
                </div>
            `;
            
            container.appendChild(memberDiv);
            updateMemberCount();
            loadCustomFieldsForMember(memberCounter);
        }

        function removeFamilyMember(memberId) {
            const memberDiv = document.getElementById(`member-${memberId}`);
            if (memberDiv) {
                memberDiv.remove();
                updateMemberCount();
            }
        }

        function updateMemberCount() {
            const memberCount = document.getElementById('familyMembersContainer').children.length + 1; // +1 for head
            document.getElementById('totalMemberCount').textContent = memberCount;
        }

        function loadCustomFields() {
            const container = document.getElementById('existingFields');
            container.innerHTML = '';
            
            customFields.forEach((field, index) => {
                const fieldDiv = document.createElement('div');
                fieldDiv.className = 'flex justify-between items-center p-4 bg-gray-50 rounded-lg border-l-4 border-purple-400';
                
                const targetText = field.target === 'head' ? 'Head Only' : field.target === 'members' ? 'Members Only' : 'Head & Members';
                const requiredText = field.required ? ' • Required' : '';
                const typeIcon = field.type === 'photo' ? '📷' : field.type === 'select' ? '📋' : field.type === 'date' ? '📅' : field.type === 'number' ? '🔢' : field.type === 'email' ? '📧' : field.type === 'phone' ? '📞' : field.type === 'textarea' ? '📝' : field.type === 'checkbox' ? '☑️' : '📄';
                
                fieldDiv.innerHTML = `
                    <div class="flex-1">
                        <div class="flex items-center space-x-2 mb-1">
                            <span class="text-lg">${typeIcon}</span>
                            <span class="font-semibold text-gray-800">${field.name}</span>
                            <span class="text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded-full">${field.type}</span>
                            ${field.required ? '<span class="text-xs bg-red-100 text-red-700 px-2 py-1 rounded-full">Required</span>' : ''}
                        </div>
                        <div class="text-sm text-gray-600">
                            <span class="font-medium">Target:</span> ${targetText}${requiredText}
                            ${field.options ? `<br><span class="font-medium">Options:</span> ${field.options.join(', ')}` : ''}
                            ${field.description ? `<br><span class="font-medium">Description:</span> ${field.description}` : ''}
                        </div>
                    </div>
                    <button onclick="removeCustomField(${index})" class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                        🗑️ Remove
                    </button>
                `;
                container.appendChild(fieldDiv);
            });
        }

        // Store system fields configuration
        let systemFields = JSON.parse(localStorage.getItem('systemFields')) || [
            { name: 'Full Name', type: 'text', target: 'both', required: true, system: true, description: 'Primary identification field', enabled: true },
            { name: 'Date of Birth', type: 'date', target: 'both', required: false, system: true, description: 'Used for age calculation', enabled: true },
            { name: 'Age', type: 'number', target: 'both', required: false, system: true, description: 'Auto-calculated from DOB', enabled: true },
            { name: 'Gender', type: 'select', target: 'both', required: false, system: true, options: ['male', 'female', 'other'], description: 'Gender classification', enabled: true },
            { name: 'Contact Number', type: 'phone', target: 'both', required: true, system: true, description: 'Primary contact method', enabled: true },
            { name: 'Aadhar Number', type: 'text', target: 'both', required: true, system: true, description: 'Government ID number', enabled: true },
            { name: 'House Number', type: 'text', target: 'head', required: true, system: true, description: 'Residential address identifier', enabled: true },
            { name: 'Occupation', type: 'text', target: 'both', required: false, system: true, description: 'Current job/profession', enabled: true },
            { name: 'Education', type: 'text', target: 'both', required: false, system: true, description: 'Educational qualification', enabled: true },
            { name: 'Relationship', type: 'select', target: 'members', required: false, system: true, options: ['spouse', 'son', 'daughter', 'father', 'mother', 'brother', 'sister', 'other'], description: 'Relationship with head', enabled: true },
            { name: 'Aadhar Front Photo', type: 'photo', target: 'both', required: false, system: true, description: 'Aadhar card front image', enabled: true },
            { name: 'Aadhar Back Photo', type: 'photo', target: 'both', required: false, system: true, description: 'Aadhar card back image', enabled: true },
            { name: 'Other ID Front Photo', type: 'photo', target: 'both', required: false, system: true, description: 'Additional ID front image', enabled: true },
            { name: 'Other ID Back Photo', type: 'photo', target: 'both', required: false, system: true, description: 'Additional ID back image', enabled: true },
            { name: 'Other ID Type', type: 'select', target: 'both', required: false, system: true, options: ['pan', 'passport', 'driving_license', 'voter_id', 'ration_card', 'bank_passbook', 'birth_certificate', 'school_id', 'employee_id', 'other'], description: 'Type of additional ID', enabled: true }
        ];

        function loadAllSystemFields() {
            if (currentUserRole !== 'masteradmin') return;
            
            const container = document.getElementById('existingFields');
            container.innerHTML = '';
            
            // Add system fields section
            const systemSection = document.createElement('div');
            systemSection.innerHTML = `
                <div class="mb-6">
                    <div class="flex items-center justify-between mb-4">
                        <h4 class="text-lg font-bold text-red-600 flex items-center">
                            🔧 <span class="ml-2">Core System Fields (Master Admin Only)</span>
                        </h4>
                        <div class="flex space-x-2">
                            <button onclick="bulkToggleSystemFields(true)" class="bg-green-500 hover:bg-green-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                                ✅ Enable All
                            </button>
                            <button onclick="bulkToggleSystemFields(false)" class="bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                                ❌ Disable All
                            </button>
                            <button onclick="resetSystemFields()" class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                                🔄 Reset Defaults
                            </button>
                        </div>
                    </div>
                    <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-4">
                        <p class="text-sm text-red-700">
                            <strong>⚠️ Master Admin Control:</strong> You can modify, enable/disable, and configure all system fields. 
                            Changes affect the entire system and all family forms. Disabled fields won't appear in forms.
                        </p>
                    </div>
                </div>
            `;
            container.appendChild(systemSection);
            
            // Display system fields
            systemFields.forEach((field, index) => {
                const fieldDiv = document.createElement('div');
                const enabledClass = field.enabled ? 'bg-red-50 border-red-500' : 'bg-gray-100 border-gray-400 opacity-60';
                fieldDiv.className = `flex justify-between items-center p-4 rounded-lg border-l-4 ${enabledClass} mb-3`;
                
                const targetText = field.target === 'head' ? 'Head Only' : field.target === 'members' ? 'Members Only' : 'Head & Members';
                const requiredText = field.required ? ' • Required' : '';
                const typeIcon = field.type === 'photo' ? '📷' : field.type === 'select' ? '📋' : field.type === 'date' ? '📅' : field.type === 'number' ? '🔢' : field.type === 'email' ? '📧' : field.type === 'phone' ? '📞' : field.type === 'textarea' ? '📝' : field.type === 'checkbox' ? '☑️' : '📄';
                const statusIcon = field.enabled ? '✅' : '❌';
                
                fieldDiv.innerHTML = `
                    <div class="flex-1">
                        <div class="flex items-center space-x-2 mb-1">
                            <span class="text-lg">${statusIcon}</span>
                            <span class="text-lg">${typeIcon}</span>
                            <span class="font-semibold text-gray-800">${field.name}</span>
                            <span class="text-xs bg-red-100 text-red-700 px-2 py-1 rounded-full">${field.type}</span>
                            <span class="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full">SYSTEM</span>
                            ${field.required ? '<span class="text-xs bg-red-100 text-red-700 px-2 py-1 rounded-full">Required</span>' : ''}
                            ${field.enabled ? '<span class="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">ENABLED</span>' : '<span class="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full">DISABLED</span>'}
                        </div>
                        <div class="text-sm text-gray-600">
                            <span class="font-medium">Target:</span> ${targetText}${requiredText}
                            ${field.options ? `<br><span class="font-medium">Options:</span> ${field.options.join(', ')}` : ''}
                            <br><span class="font-medium">Description:</span> ${field.description}
                        </div>
                    </div>
                    <div class="flex flex-col space-y-2">
                        <div class="flex space-x-2">
                            <button onclick="editSystemField(${index})" class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                                ✏️ Edit
                            </button>
                            <button onclick="toggleSystemField(${index})" class="${field.enabled ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                                ${field.enabled ? '❌ Disable' : '✅ Enable'}
                            </button>
                        </div>
                        ${!field.required ? `<button onclick="duplicateSystemField(${index})" class="bg-purple-500 hover:bg-purple-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                            📋 Duplicate
                        </button>` : ''}
                    </div>
                `;
                container.appendChild(fieldDiv);
            });
            
            // Add separator
            const separator = document.createElement('div');
            separator.innerHTML = `
                <div class="my-6 border-t-2 border-gray-200 pt-6">
                    <div class="flex items-center justify-between mb-4">
                        <h4 class="text-lg font-bold text-purple-600 flex items-center">
                            ➕ <span class="ml-2">Custom Fields</span>
                        </h4>
                        <button onclick="bulkDeleteCustomFields()" class="bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                            🗑️ Delete All Custom
                        </button>
                    </div>
                </div>
            `;
            container.appendChild(separator);
            
            // Load custom fields
            customFields.forEach((field, index) => {
                const fieldDiv = document.createElement('div');
                fieldDiv.className = 'flex justify-between items-center p-4 bg-gray-50 rounded-lg border-l-4 border-purple-400 mb-3';
                
                const targetText = field.target === 'head' ? 'Head Only' : field.target === 'members' ? 'Members Only' : 'Head & Members';
                const requiredText = field.required ? ' • Required' : '';
                const typeIcon = field.type === 'photo' ? '📷' : field.type === 'select' ? '📋' : field.type === 'date' ? '📅' : field.type === 'number' ? '🔢' : field.type === 'email' ? '📧' : field.type === 'phone' ? '📞' : field.type === 'textarea' ? '📝' : field.type === 'checkbox' ? '☑️' : '📄';
                
                fieldDiv.innerHTML = `
                    <div class="flex-1">
                        <div class="flex items-center space-x-2 mb-1">
                            <span class="text-lg">${typeIcon}</span>
                            <span class="font-semibold text-gray-800">${field.name}</span>
                            <span class="text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded-full">${field.type}</span>
                            <span class="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">CUSTOM</span>
                            ${field.required ? '<span class="text-xs bg-red-100 text-red-700 px-2 py-1 rounded-full">Required</span>' : ''}
                        </div>
                        <div class="text-sm text-gray-600">
                            <span class="font-medium">Target:</span> ${targetText}${requiredText}
                            ${field.options ? `<br><span class="font-medium">Options:</span> ${field.options.join(', ')}` : ''}
                            ${field.description ? `<br><span class="font-medium">Description:</span> ${field.description}` : ''}
                        </div>
                    </div>
                    <div class="flex flex-col space-y-2">
                        <div class="flex space-x-2">
                            <button onclick="editCustomField(${index})" class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                                ✏️ Edit
                            </button>
                            <button onclick="removeCustomField(${index})" class="bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                                🗑️ Remove
                            </button>
                        </div>
                        <button onclick="duplicateCustomField(${index})" class="bg-purple-500 hover:bg-purple-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">
                            📋 Duplicate
                        </button>
                    </div>
                `;
                container.appendChild(fieldDiv);
            });
        }

        function editSystemField(index) {
            const field = systemFields[index];
            const newName = prompt(`Edit field name:`, field.name);
            if (newName && newName.trim() && newName !== field.name) {
                systemFields[index].name = newName.trim();
                localStorage.setItem('systemFields', JSON.stringify(systemFields));
                loadAllSystemFields();
                showNotification('✏️ System field updated successfully!', 'success');
            }
        }

        function toggleSystemField(index) {
            systemFields[index].enabled = !systemFields[index].enabled;
            localStorage.setItem('systemFields', JSON.stringify(systemFields));
            loadAllSystemFields();
            const status = systemFields[index].enabled ? 'enabled' : 'disabled';
            showNotification(`👁️ System field ${status} successfully!`, 'success');
        }

        function bulkToggleSystemFields(enable) {
            systemFields.forEach(field => {
                if (!field.required) { // Don't disable required fields
                    field.enabled = enable;
                }
            });
            localStorage.setItem('systemFields', JSON.stringify(systemFields));
            loadAllSystemFields();
            const action = enable ? 'enabled' : 'disabled';
            showNotification(`✅ All non-required system fields ${action}!`, 'success');
        }

        function resetSystemFields() {
            if (confirm('Are you sure you want to reset all system fields to default settings? This will re-enable all fields.')) {
                systemFields.forEach(field => {
                    field.enabled = true;
                });
                localStorage.setItem('systemFields', JSON.stringify(systemFields));
                loadAllSystemFields();
                showNotification('🔄 System fields reset to defaults!', 'success');
            }
        }

        function duplicateSystemField(index) {
            const field = systemFields[index];
            const newField = { 
                ...field, 
                name: field.name + ' (Copy)',
                system: false // Make it a custom field
            };
            customFields.push(newField);
            localStorage.setItem('customFields', JSON.stringify(customFields));
            loadAllSystemFields();
            showNotification('📋 System field duplicated as custom field!', 'success');
        }

        function editCustomField(index) {
            const field = customFields[index];
            const newName = prompt(`Edit custom field name:`, field.name);
            if (newName && newName.trim() && newName !== field.name) {
                customFields[index].name = newName.trim();
                localStorage.setItem('customFields', JSON.stringify(customFields));
                if (currentUserRole === 'masteradmin') {
                    loadAllSystemFields();
                } else {
                    loadCustomFields();
                }
                showNotification('✏️ Custom field updated successfully!', 'success');
            }
        }

        function duplicateCustomField(index) {
            const field = customFields[index];
            const newField = { 
                ...field, 
                name: field.name + ' (Copy)'
            };
            customFields.push(newField);
            localStorage.setItem('customFields', JSON.stringify(customFields));
            if (currentUserRole === 'masteradmin') {
                loadAllSystemFields();
            } else {
                loadCustomFields();
            }
            showNotification('📋 Custom field duplicated successfully!', 'success');
        }

        function bulkDeleteCustomFields() {
            if (confirm('Are you sure you want to delete ALL custom fields? This action cannot be undone.')) {
                customFields.length = 0;
                localStorage.setItem('customFields', JSON.stringify(customFields));
                loadAllSystemFields();
                showNotification('🗑️ All custom fields deleted!', 'success');
            }
        }

        function loadCustomFieldsInForm() {
            loadCustomFieldsForHead();
        }

        function loadCustomFieldsForHead() {
            const container = document.getElementById('headCustomFields');
            container.innerHTML = '';
            
            const headFields = customFields.filter(field => field.target === 'head' || field.target === 'both');
            
            if (headFields.length > 0) {
                const fieldsDiv = document.createElement('div');
                fieldsDiv.className = 'grid grid-cols-1 lg:grid-cols-3 gap-6';
                
                headFields.forEach(field => {
                    const fieldDiv = document.createElement('div');
                    const requiredMark = field.required ? ' *' : '';
                    fieldDiv.innerHTML = `
                        <label class="block text-sm font-semibold mb-2 text-gray-700">${field.name}${requiredMark}</label>
                        ${createCustomFieldInput(`head${field.name.replace(/\s+/g, '')}`, field)}
                    `;
                    fieldsDiv.appendChild(fieldDiv);
                });
                
                container.appendChild(fieldsDiv);
            }
        }

        function loadCustomFieldsForMember(memberId) {
            const container = document.getElementById(`member${memberId}CustomFields`);
            container.innerHTML = '';
            
            const memberFields = customFields.filter(field => field.target === 'members' || field.target === 'both');
            
            memberFields.forEach(field => {
                const fieldDiv = document.createElement('div');
                const requiredMark = field.required ? ' *' : '';
                fieldDiv.innerHTML = `
                    <label class="block text-sm font-semibold mb-2 text-gray-700">${field.name}${requiredMark}</label>
                    ${createCustomFieldInput(`member${memberId}${field.name.replace(/\s+/g, '')}`, field)}
                `;
                container.appendChild(fieldDiv);
            });
        }

        function createCustomFieldInput(id, field) {
            const baseClass = "w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-blue-500 transition-all";
            const requiredAttr = field.required ? 'required' : '';
            
            switch (field.type) {
                case 'text':
                    return `<input type="text" id="${id}" ${requiredAttr} class="${baseClass}" placeholder="Enter ${field.name.toLowerCase()}">`;
                case 'number':
                    return `<input type="number" id="${id}" ${requiredAttr} class="${baseClass}" placeholder="Enter ${field.name.toLowerCase()}">`;
                case 'date':
                    return `<input type="date" id="${id}" ${requiredAttr} class="${baseClass}">`;
                case 'email':
                    return `<input type="email" id="${id}" ${requiredAttr} class="${baseClass}" placeholder="Enter email address">`;
                case 'phone':
                    return `<input type="tel" id="${id}" ${requiredAttr} class="${baseClass}" placeholder="Enter phone number" maxlength="10" oninput="validateMobileNumber(this)">`;
                case 'textarea':
                    return `<textarea id="${id}" ${requiredAttr} class="${baseClass} h-24 resize-none" placeholder="Enter ${field.name.toLowerCase()}"></textarea>`;
                case 'checkbox':
                    return `<div class="flex items-center space-x-2"><input type="checkbox" id="${id}" class="rounded border-gray-300 text-blue-600 focus:ring-blue-500"><span class="text-sm text-gray-700">Yes</span></div>`;
                case 'select':
                    const options = field.options ? field.options.map(option => `<option value="${option}">${option}</option>`).join('') : '';
                    return `<select id="${id}" ${requiredAttr} class="${baseClass}"><option value="">Select ${field.name}</option>${options}</select>`;
                case 'photo':
                    return createPhotoFieldInput(id, field);
                default:
                    return `<input type="text" id="${id}" ${requiredAttr} class="${baseClass}" placeholder="Enter ${field.name.toLowerCase()}">`;
            }
        }

        function createPhotoFieldInput(id, field) {
            const description = field.description || 'Photo';
            const cameraButton = field.allowCamera ? `<button type="button" onclick="capturePhoto('${id}')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">📸 Camera</button>` : '';
            const galleryButton = field.allowGallery ? `<button type="button" onclick="selectFromGallery('${id}')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-lg text-sm font-medium transition-all">🖼️ Gallery</button>` : '';
            
            return `
                <div class="space-y-3">
                    <div class="flex space-x-2">
                        ${cameraButton}
                        ${galleryButton}
                    </div>
                    <input type="file" id="${id}File" accept="image/*" capture="environment" class="hidden" onchange="handleFileSelect(this, '${id}Preview')">
                    <div id="${id}Preview" class="w-full h-32 border-2 border-dashed border-gray-300 rounded-lg flex items-center justify-center bg-gray-50">
                        <span class="text-gray-500 text-sm">No ${description.toLowerCase()}</span>
                    </div>
                </div>
            `;
        }

        function showColumnManager() {
            loadCustomFields();
            updateColumnManagerForRole();
            document.getElementById('columnManagerModal').classList.remove('hidden');
        }

        function updateColumnManagerForRole() {
            const modalTitle = document.querySelector('#columnManagerModal h2');
            const modalDescription = document.querySelector('#columnManagerModal p');
            
            if (currentUserRole === 'masteradmin') {
                modalTitle.innerHTML = '⚙️ Master Admin - Manage All System Columns';
                modalDescription.innerHTML = 'Full control over all family record fields including core system fields';
                loadAllSystemFields();
            } else {
                modalTitle.innerHTML = '⚙️ Manage Custom Columns';
                modalDescription.innerHTML = 'Add custom fields for family records';
            }
        }

        function closeColumnManager() {
            document.getElementById('columnManagerModal').classList.add('hidden');
        }

        function addCustomField() {
            const name = document.getElementById('newFieldName').value.trim();
            const type = document.getElementById('newFieldType').value;
            const target = document.getElementById('newFieldTarget').value;
            const required = document.getElementById('newFieldRequired').checked;
            const optionsInput = document.getElementById('selectOptionValues').value.trim();
            
            if (!name) {
                showNotification('❌ Please enter a field name', 'error');
                return;
            }
            
            // Check for duplicate field names
            if (customFields.some(field => field.name.toLowerCase() === name.toLowerCase())) {
                showNotification('❌ Field name already exists', 'error');
                return;
            }
            
            // Master admin gets additional privileges
            if (currentUserRole === 'masteradmin') {
                showNotification('🔑 Master Admin: Field added with enhanced privileges', 'success');
            }
            
            const field = { 
                name, 
                type, 
                target, 
                required 
            };
            
            // Add type-specific options
            if (type === 'select' && optionsInput) {
                field.options = optionsInput.split(',').map(option => option.trim()).filter(option => option);
                if (field.options.length === 0) {
                    showNotification('❌ Please provide dropdown options', 'error');
                    return;
                }
            }
            
            if (type === 'photo') {
                field.allowCamera = document.getElementById('photoAllowCamera').checked;
                field.allowGallery = document.getElementById('photoAllowGallery').checked;
                field.description = document.getElementById('photoDescription').value.trim();
                
                if (!field.allowCamera && !field.allowGallery) {
                    showNotification('❌ Please allow at least one photo input method', 'error');
                    return;
                }
            }
            
            customFields.push(field);
            localStorage.setItem('customFields', JSON.stringify(customFields));
            
            // Reset form
            document.getElementById('newFieldName').value = '';
            document.getElementById('newFieldType').value = 'text';
            document.getElementById('newFieldTarget').value = 'both';
            document.getElementById('newFieldRequired').checked = false;
            document.getElementById('selectOptionValues').value = '';
            document.getElementById('photoDescription').value = '';
            document.getElementById('photoAllowCamera').checked = true;
            document.getElementById('photoAllowGallery').checked = true;
            document.getElementById('selectOptions').classList.add('hidden');
            document.getElementById('photoOptions').classList.add('hidden');
            
            loadCustomFields();
            showNotification('✅ Custom field added successfully!', 'success');
        }

        function removeCustomField(index) {
            if (confirm('Are you sure you want to remove this custom field?')) {
                customFields.splice(index, 1);
                localStorage.setItem('customFields', JSON.stringify(customFields));
                loadCustomFields();
                showNotification('🗑️ Custom field removed successfully!', 'success');
            }
        }

        // Show/hide field type specific options
        document.getElementById('newFieldType').addEventListener('change', function() {
            const selectOptions = document.getElementById('selectOptions');
            const photoOptions = document.getElementById('photoOptions');
            
            // Hide all options first
            selectOptions.classList.add('hidden');
            photoOptions.classList.add('hidden');
            
            // Show relevant options based on field type
            if (this.value === 'select') {
                selectOptions.classList.remove('hidden');
            } else if (this.value === 'photo') {
                photoOptions.classList.remove('hidden');
            }
        });

        function saveFamilyData(event) {
            event.preventDefault();
            
            // Collect head of family data
            const headData = {
                fullName: document.getElementById('headFullName').value,
                dateOfBirth: document.getElementById('headDateOfBirth').value,
                age: document.getElementById('headAge').value,
                gender: document.getElementById('headGender').value,
                contactNumber: document.getElementById('headContactNumber').value,
                aadharNumber: document.getElementById('headAadharNumber').value,
                houseNumber: document.getElementById('headHouseNumber').value,
                occupation: document.getElementById('headOccupation').value,
                education: document.getElementById('headEducation').value,
                relationship: 'head',
                candidatePhoto: window.photoData?.headCandidatePhoto || null,
                aadharFrontPhoto: window.photoData?.headAadharFront || null,
                aadharBackPhoto: window.photoData?.headAadharBack || null,
                otherIdFrontPhoto: window.photoData?.headOtherIdFront || null,
                otherIdBackPhoto: window.photoData?.headOtherIdBack || null,
                otherIdType: document.getElementById('headOtherIdType')?.value || null
            };
            
            // Add custom fields for head
            const headFields = customFields.filter(field => field.target === 'head' || field.target === 'both');
            headFields.forEach(field => {
                const fieldId = `head${field.name.replace(/\s+/g, '')}`;
                const element = document.getElementById(fieldId);
                if (element) {
                    if (field.type === 'checkbox') {
                        headData[field.name] = element.checked;
                    } else if (field.type === 'photo') {
                        headData[field.name] = window.photoData?.[fieldId] || null;
                    } else {
                        headData[field.name] = element.value;
                    }
                }
            });
            
            // Collect family members data
            const members = [];
            const memberElements = document.getElementById('familyMembersContainer').children;
            
            for (let i = 0; i < memberElements.length; i++) {
                const memberDiv = memberElements[i];
                const memberId = memberDiv.id.split('-')[1];
                
                const memberData = {
                    fullName: document.getElementById(`member${memberId}Name`).value,
                    dateOfBirth: document.getElementById(`member${memberId}DateOfBirth`).value,
                    age: document.getElementById(`member${memberId}Age`).value,
                    gender: document.getElementById(`member${memberId}Gender`).value,
                    relationship: document.getElementById(`member${memberId}Relationship`).value,
                    contactNumber: document.getElementById(`member${memberId}ContactNumber`).value,
                    aadharNumber: document.getElementById(`member${memberId}AadharNumber`).value,
                    occupation: document.getElementById(`member${memberId}Occupation`).value,
                    education: document.getElementById(`member${memberId}Education`).value,
                    candidatePhoto: window.photoData?.[`member${memberId}CandidatePhoto`] || null,
                    aadharFrontPhoto: window.photoData?.[`member${memberId}AadharFront`] || null,
                    aadharBackPhoto: window.photoData?.[`member${memberId}AadharBack`] || null,
                    otherIdFrontPhoto: window.photoData?.[`member${memberId}OtherIdFront`] || null,
                    otherIdBackPhoto: window.photoData?.[`member${memberId}OtherIdBack`] || null,
                    otherIdType: document.getElementById(`member${memberId}OtherIdType`)?.value || null
                };
                
                // Add custom fields for member
                const memberFields = customFields.filter(field => field.target === 'members' || field.target === 'both');
                memberFields.forEach(field => {
                    const fieldId = `member${memberId}${field.name.replace(/\s+/g, '')}`;
                    const element = document.getElementById(fieldId);
                    if (element) {
                        if (field.type === 'checkbox') {
                            memberData[field.name] = element.checked;
                        } else if (field.type === 'photo') {
                            memberData[field.name] = window.photoData?.[fieldId] || null;
                        } else {
                            memberData[field.name] = element.value;
                        }
                    }
                });
                
                members.push(memberData);
            }
            
            const familyRecord = {
                id: editingFamilyId || Date.now().toString(),
                head: headData,
                members: members,
                totalMembers: members.length + 1,
                createdAt: editingFamilyId ? familyData.find(f => f.id === editingFamilyId)?.createdAt : new Date().toISOString(),
                updatedAt: new Date().toISOString()
            };
            
            if (editingFamilyId) {
                const index = familyData.findIndex(f => f.id === editingFamilyId);
                if (index !== -1) {
                    familyData[index] = familyRecord;
                }
            } else {
                familyData.push(familyRecord);
            }
            
            localStorage.setItem('familyTreeData', JSON.stringify(familyData));
            updateStatistics();
            displayFamilyTrees();
            closeFamilyModal();
            showNotification('✅ Family record saved successfully!', 'success');
        }

        function editFamily(familyId) {
            const family = familyData.find(f => f.id === familyId);
            if (!family) return;

            editingFamilyId = familyId;
            memberCounter = 0;
            document.getElementById('modalTitle').textContent = '✏️ Edit Family Record';
            document.getElementById('familyMembersContainer').innerHTML = '';

            // Initialize photo data
            if (!window.photoData) window.photoData = {};
            
            // Populate head data
            Object.keys(family.head).forEach(key => {
                const element = document.getElementById(`head${key.charAt(0).toUpperCase() + key.slice(1)}`);
                if (element) {
                    element.value = family.head[key] || '';
                }
            });
            
            // Load head photos
            if (family.head.candidatePhoto) {
                window.photoData.headCandidatePhoto = family.head.candidatePhoto;
                displayExistingPhoto(family.head.candidatePhoto, 'headCandidatePhotoPreview');
            }
            if (family.head.aadharFrontPhoto) {
                window.photoData.headAadharFront = family.head.aadharFrontPhoto;
                displayExistingPhoto(family.head.aadharFrontPhoto, 'headAadharFrontPreview');
            }
            if (family.head.aadharBackPhoto) {
                window.photoData.headAadharBack = family.head.aadharBackPhoto;
                displayExistingPhoto(family.head.aadharBackPhoto, 'headAadharBackPreview');
            }
            if (family.head.otherIdFrontPhoto) {
                window.photoData.headOtherIdFront = family.head.otherIdFrontPhoto;
                displayExistingPhoto(family.head.otherIdFrontPhoto, 'headOtherIdFrontPreview');
            }
            if (family.head.otherIdBackPhoto) {
                window.photoData.headOtherIdBack = family.head.otherIdBackPhoto;
                displayExistingPhoto(family.head.otherIdBackPhoto, 'headOtherIdBackPreview');
            }

            // Populate custom fields for head
            const headFields = customFields.filter(field => field.target === 'head' || field.target === 'both');
            headFields.forEach(field => {
                const fieldId = `head${field.name.replace(/\s+/g, '')}`;
                const element = document.getElementById(fieldId);
                if (element && family.head[field.name] !== undefined) {
                    if (field.type === 'checkbox') {
                        element.checked = family.head[field.name];
                    } else if (field.type === 'photo') {
                        if (family.head[field.name]) {
                            window.photoData[fieldId] = family.head[field.name];
                            displayExistingPhoto(family.head[field.name], fieldId + 'Preview');
                        }
                    } else {
                        element.value = family.head[field.name];
                    }
                }
            });

            // Populate members
            family.members.forEach((member, index) => {
                addFamilyMember();
                const currentMemberId = memberCounter;
                
                Object.keys(member).forEach(key => {
                    const element = document.getElementById(`member${currentMemberId}${key.charAt(0).toUpperCase() + key.slice(1)}`);
                    if (element) {
                        element.value = member[key] || '';
                    }
                });

                // Populate custom fields for member
                const memberFields = customFields.filter(field => field.target === 'members' || field.target === 'both');
                memberFields.forEach(field => {
                    const fieldId = `member${currentMemberId}${field.name.replace(/\s+/g, '')}`;
                    const element = document.getElementById(fieldId);
                    if (element && member[field.name] !== undefined) {
                        if (field.type === 'checkbox') {
                            element.checked = member[field.name];
                        } else if (field.type === 'photo') {
                            if (member[field.name]) {
                                window.photoData[fieldId] = member[field.name];
                                displayExistingPhoto(member[field.name], fieldId + 'Preview');
                            }
                        } else {
                            element.value = member[field.name];
                        }
                    }
                });
                
                // Load member photos
                if (member.candidatePhoto) {
                    window.photoData[`member${currentMemberId}CandidatePhoto`] = member.candidatePhoto;
                    displayExistingPhoto(member.candidatePhoto, `member${currentMemberId}CandidatePhotoPreview`);
                }
                if (member.aadharFrontPhoto) {
                    window.photoData[`member${currentMemberId}AadharFront`] = member.aadharFrontPhoto;
                    displayExistingPhoto(member.aadharFrontPhoto, `member${currentMemberId}AadharFrontPreview`);
                }
                if (member.aadharBackPhoto) {
                    window.photoData[`member${currentMemberId}AadharBack`] = member.aadharBackPhoto;
                    displayExistingPhoto(member.aadharBackPhoto, `member${currentMemberId}AadharBackPreview`);
                }
                if (member.otherIdFrontPhoto) {
                    window.photoData[`member${currentMemberId}OtherIdFront`] = member.otherIdFrontPhoto;
                    displayExistingPhoto(member.otherIdFrontPhoto, `member${currentMemberId}OtherIdFrontPreview`);
                }
                if (member.otherIdBackPhoto) {
                    window.photoData[`member${currentMemberId}OtherIdBack`] = member.otherIdBackPhoto;
                    displayExistingPhoto(member.otherIdBackPhoto, `member${currentMemberId}OtherIdBackPreview`);
                }
            });

            loadCustomFieldsInForm();
            document.getElementById('familyModal').classList.remove('hidden');
        }

        function deleteFamily(familyId) {
            if (confirm('Are you sure you want to delete this family record? This action cannot be undone.')) {
                familyData = familyData.filter(f => f.id !== familyId);
                localStorage.setItem('familyTreeData', JSON.stringify(familyData));
                updateStatistics();
                displayFamilyTrees();
                showNotification('🗑️ Family record deleted successfully!', 'success');
            }
        }

        function showMemberRemovalModal(familyId, memberIndex, memberName, isHead = false) {
            currentRemovalTarget = { familyId, memberIndex, isHead };
            document.getElementById('removalMemberName').textContent = memberName;
            document.getElementById('removalReason').value = '';
            document.getElementById('removalDate').value = new Date().toISOString().split('T')[0];
            document.getElementById('removalNotes').value = '';
            document.getElementById('memberRemovalModal').classList.remove('hidden');
        }

        function closeMemberRemovalModal() {
            document.getElementById('memberRemovalModal').classList.add('hidden');
            currentRemovalTarget = null;
        }

        function confirmMemberRemoval() {
            const reason = document.getElementById('removalReason').value;
            const date = document.getElementById('removalDate').value;
            const notes = document.getElementById('removalNotes').value;
            
            if (!reason) {
                showNotification('❌ Please select a reason for removal', 'error');
                return;
            }
            
            if (!currentRemovalTarget) return;
            
            const { familyId, memberIndex, isHead } = currentRemovalTarget;
            const family = familyData.find(f => f.id === familyId);
            if (!family) return;
            
            const removalData = {
                reason,
                date,
                notes,
                removedAt: new Date().toISOString()
            };
            
            if (isHead) {
                // If removing head, check if there are other members to promote
                if (family.members.length === 0) {
                    showNotification('❌ Cannot remove head when no other family members exist', 'error');
                    return;
                }
                
                // Show head selection modal
                currentFamilyForHeadChange = familyId;
                showHeadSelectionModal(family, removalData);
            } else {
                // Remove regular member
                const removedMember = family.members[memberIndex];
                removedMember.removed = true;
                removedMember.removalData = removalData;
                
                // Move to removed members array
                if (!family.removedMembers) family.removedMembers = [];
                family.removedMembers.push(removedMember);
                
                // Remove from active members
                family.members.splice(memberIndex, 1);
                family.totalMembers = family.members.length + 1; // +1 for head
                
                localStorage.setItem('familyTreeData', JSON.stringify(familyData));
                updateStatistics();
                displayFamilyTrees();
                closeMemberRemovalModal();
                closeFamilyDetails();
                showNotification('🚫 Member removed successfully', 'success');
            }
        }

        function showHeadSelectionModal(family, headRemovalData) {
            document.getElementById('currentHeadName').textContent = family.head.fullName;
            
            const select = document.getElementById('newHeadSelection');
            select.innerHTML = '<option value="">Choose a family member</option>';
            
            family.members.forEach((member, index) => {
                if (!member.removed) {
                    select.innerHTML += `<option value="${index}">${member.fullName} (${member.relationship})</option>`;
                }
            });
            
            document.getElementById('headChangeReason').value = '';
            document.getElementById('headSelectionModal').classList.remove('hidden');
            
            // Store removal data for later use
            currentFamilyForHeadChange = { familyId: family.id, headRemovalData };
        }

        function closeHeadSelectionModal() {
            document.getElementById('headSelectionModal').classList.add('hidden');
            currentFamilyForHeadChange = null;
        }

        function confirmHeadChange() {
            const newHeadIndex = document.getElementById('newHeadSelection').value;
            const changeReason = document.getElementById('headChangeReason').value;
            
            if (!newHeadIndex) {
                showNotification('❌ Please select a new head of family', 'error');
                return;
            }
            
            if (!currentFamilyForHeadChange) return;
            
            const { familyId, headRemovalData } = currentFamilyForHeadChange;
            const family = familyData.find(f => f.id === familyId);
            if (!family) return;
            
            // Get the new head
            const newHead = family.members[parseInt(newHeadIndex)];
            const oldHead = family.head;
            
            // Mark old head as removed if removal data exists
            if (headRemovalData) {
                oldHead.removed = true;
                oldHead.removalData = headRemovalData;
                oldHead.relationship = 'former_head';
                
                if (!family.removedMembers) family.removedMembers = [];
                family.removedMembers.push(oldHead);
            } else {
                // Just changing head, move old head to members
                oldHead.relationship = 'member';
                family.members.push(oldHead);
            }
            
            // Promote new member to head
            family.head = { ...newHead };
            family.head.relationship = 'head';
            family.head.headChangeData = {
                previousHead: oldHead.fullName,
                changeDate: new Date().toISOString(),
                reason: changeReason
            };
            
            // Remove new head from members array
            family.members.splice(parseInt(newHeadIndex), 1);
            
            if (!headRemovalData) {
                family.totalMembers = family.members.length + 1; // Same total if just changing
            } else {
                family.totalMembers = family.members.length + 1; // -1 for removed head, +1 for new head
            }
            
            localStorage.setItem('familyTreeData', JSON.stringify(familyData));
            updateStatistics();
            displayFamilyTrees();
            closeHeadSelectionModal();
            closeMemberRemovalModal();
            closeFamilyDetails();
            showNotification('👑 Head of family changed successfully', 'success');
        }

        function restoreMember(familyId, memberIndex) {
            if (!confirm('Are you sure you want to restore this member to active status?')) return;
            
            const family = familyData.find(f => f.id === familyId);
            if (!family || !family.removedMembers) return;
            
            const restoredMember = family.removedMembers[memberIndex];
            delete restoredMember.removed;
            delete restoredMember.removalData;
            
            // Move back to active members
            family.members.push(restoredMember);
            family.removedMembers.splice(memberIndex, 1);
            family.totalMembers = family.members.length + 1;
            
            localStorage.setItem('familyTreeData', JSON.stringify(familyData));
            updateStatistics();
            displayFamilyTrees();
            closeFamilyDetails();
            showNotification('✅ Member restored successfully', 'success');
        }

        function viewFamilyDetails(familyId) {
            const family = familyData.find(f => f.id === familyId);
            if (!family) return;

            const content = document.getElementById('familyDetailsContent');
            const ageCalculationDate = document.getElementById('ageCalculationDate').value;
            
            let membersHtml = '';
            family.members.forEach((member, index) => {
                if (member.removed) return; // Skip removed members in main section
                
                const displayAge = ageCalculationDate && member.dateOfBirth ? 
                    calculateAgeAsOf(member.dateOfBirth, ageCalculationDate) : 
                    (parseInt(member.age) || 0);
                const ageGroup = getAgeGroup(displayAge);
                const genderIcon = member.gender === 'male' ? '👨' : member.gender === 'female' ? '👩' : '👤';
                
                membersHtml += `
                    <div class="member-card p-4 ${getGenderClass(member.gender)}">
                        <div class="flex items-center justify-between mb-3">
                            <div class="flex items-center space-x-3">
                                ${member.candidatePhoto ? 
                                    `<div class="w-12 h-12 rounded-full overflow-hidden border-2 border-gray-300 cursor-pointer" onclick="viewPhotoModal('${member.candidatePhoto}', 'Member - ${member.fullName}')">
                                        <img src="${member.candidatePhoto}" alt="Member Photo" class="w-full h-full object-cover">
                                    </div>` : 
                                    `<div class="text-2xl">${genderIcon}</div>`
                                }
                                <div>
                                    <h4 class="font-bold text-gray-800">${member.fullName}</h4>
                                    <p class="text-sm text-gray-600">${member.relationship || 'Family Member'}</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-medium text-gray-600">Age: ${displayAge || 'N/A'}</div>
                                <div class="text-xs text-gray-500">${ageGroup}</div>
                                <button onclick="showMemberRemovalModal('${familyId}', ${index}, '${member.fullName}')" class="mt-1 bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded text-xs transition-all">
                                    🚫 Remove
                                </button>
                            </div>
                        </div>
                        <div class="grid grid-cols-2 gap-2 text-sm">
                            <div><span class="font-medium">Contact:</span> ${member.contactNumber || 'N/A'}</div>
                            <div><span class="font-medium">Aadhar:</span> ${member.aadharNumber || 'N/A'}</div>
                            <div><span class="font-medium">Occupation:</span> ${member.occupation || 'N/A'}</div>
                            <div><span class="font-medium">Education:</span> ${member.education || 'N/A'}</div>
                        </div>
                        ${getCustomFieldsDisplay(member)}
                        ${getAadharPhotosDisplay(member, false)}
                    </div>
                `;
            });

            // Removed members section
            let removedMembersHtml = '';
            if (family.removedMembers && family.removedMembers.length > 0) {
                removedMembersHtml = `
                    <div class="mt-8">
                        <h3 class="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                            🚫 <span class="ml-2">Removed Members (${family.removedMembers.length})</span>
                        </h3>
                        <div class="family-tree-container">
                `;
                
                family.removedMembers.forEach((member, index) => {
                    const displayAge = ageCalculationDate && member.dateOfBirth ? 
                        calculateAgeAsOf(member.dateOfBirth, ageCalculationDate) : 
                        (parseInt(member.age) || 0);
                    const ageGroup = getAgeGroup(displayAge);
                    const genderIcon = member.gender === 'male' ? '👨' : member.gender === 'female' ? '👩' : '👤';
                    const removalReason = member.removalData?.reason || 'Unknown';
                    const removalDate = member.removalData?.date ? new Date(member.removalData.date).toLocaleDateString() : 'Unknown';
                    
                    removedMembersHtml += `
                        <div class="member-card p-4 bg-red-50 border-red-200 opacity-75">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center space-x-3">
                                    ${member.candidatePhoto ? 
                                        `<div class="w-12 h-12 rounded-full overflow-hidden border-2 border-red-300 cursor-pointer opacity-60" onclick="viewPhotoModal('${member.candidatePhoto}', 'Removed Member - ${member.fullName}')">
                                            <img src="${member.candidatePhoto}" alt="Removed Member Photo" class="w-full h-full object-cover grayscale">
                                        </div>` : 
                                        `<div class="text-2xl">${genderIcon}</div>`
                                    }
                                    <div>
                                        <h4 class="font-bold text-gray-800">${member.fullName}</h4>
                                        <p class="text-sm text-gray-600">${member.relationship || 'Family Member'}</p>
                                        <p class="text-xs text-red-600">Removed: ${removalReason}</p>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <div class="text-sm font-medium text-gray-600">Age: ${displayAge || 'N/A'}</div>
                                    <div class="text-xs text-gray-500">${ageGroup}</div>
                                    <div class="text-xs text-red-600">Date: ${removalDate}</div>
                                    <button onclick="restoreMember('${familyId}', ${index})" class="mt-1 bg-green-500 hover:bg-green-600 text-white px-2 py-1 rounded text-xs transition-all">
                                        ↩️ Restore
                                    </button>
                                </div>
                            </div>
                            <div class="grid grid-cols-2 gap-2 text-sm">
                                <div><span class="font-medium">Contact:</span> ${member.contactNumber || 'N/A'}</div>
                                <div><span class="font-medium">Aadhar:</span> ${member.aadharNumber || 'N/A'}</div>
                                <div><span class="font-medium">Occupation:</span> ${member.occupation || 'N/A'}</div>
                                <div><span class="font-medium">Education:</span> ${member.education || 'N/A'}</div>
                            </div>
                            ${member.removalData?.notes ? `<div class="mt-2 text-sm text-gray-600"><span class="font-medium">Notes:</span> ${member.removalData.notes}</div>` : ''}
                            ${getCustomFieldsDisplay(member)}
                            ${getAadharPhotosDisplay(member, false)}
                        </div>
                    `;
                });
                
                removedMembersHtml += '</div></div>';
            }

            const headDisplayAge = ageCalculationDate && family.head.dateOfBirth ? 
                calculateAgeAsOf(family.head.dateOfBirth, ageCalculationDate) : 
                (parseInt(family.head.age) || 0);
            const headAgeGroup = getAgeGroup(headDisplayAge);
            const headGenderIcon = family.head.gender === 'male' ? '👨' : family.head.gender === 'female' ? '👩' : '👤';

            content.innerHTML = `
                <div class="space-y-6">
                    <!-- Head of Family -->
                    <div class="head-card p-6 rounded-xl">
                        <div class="flex items-center justify-between mb-4">
                            <div class="flex items-center space-x-4">
                                <div class="text-4xl">👑</div>
                                <div>
                                    <h3 class="text-2xl font-bold text-white">Head of Family</h3>
                                    <p class="text-white/80">Primary family member</p>
                                </div>
                            </div>
                            <div class="flex space-x-2">
                                <button onclick="showHeadSelectionModal(${JSON.stringify(family).replace(/"/g, '&quot;')}, null)" class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-2 rounded-lg text-sm transition-all">
                                    👑 Change Head
                                </button>
                                <button onclick="showMemberRemovalModal('${family.id}', -1, '${family.head.fullName}', true)" class="bg-red-500 hover:bg-red-600 text-white px-3 py-2 rounded-lg text-sm transition-all">
                                    🚫 Remove Head
                                </button>
                            </div>
                        </div>
                        
                        <div class="bg-white/10 rounded-xl p-4 backdrop-blur-sm">
                            <div class="flex items-center space-x-4 mb-4">
                                ${family.head.candidatePhoto ? 
                                    `<div class="w-16 h-16 rounded-full overflow-hidden border-2 border-white/30 cursor-pointer" onclick="viewPhotoModal('${family.head.candidatePhoto}', 'Head - ${family.head.fullName}')">
                                        <img src="${family.head.candidatePhoto}" alt="Head Photo" class="w-full h-full object-cover">
                                    </div>` : 
                                    `<div class="text-3xl">${headGenderIcon}</div>`
                                }
                                <div>
                                    <h4 class="text-xl font-bold text-white">${family.head.fullName}</h4>
                                    <p class="text-white/80">Age: ${headDisplayAge || 'N/A'} • ${headAgeGroup}</p>
                                    ${family.head.headChangeData ? `<p class="text-white/70 text-sm">Previous Head: ${family.head.headChangeData.previousHead}</p>` : ''}
                                </div>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-white/90">
                                <div><span class="font-medium">Contact:</span> ${family.head.contactNumber}</div>
                                <div><span class="font-medium">Aadhar:</span> ${family.head.aadharNumber}</div>
                                <div><span class="font-medium">House No:</span> ${family.head.houseNumber}</div>
                                <div><span class="font-medium">Gender:</span> ${family.head.gender || 'N/A'}</div>
                                <div><span class="font-medium">Occupation:</span> ${family.head.occupation || 'N/A'}</div>
                                <div><span class="font-medium">Education:</span> ${family.head.education || 'N/A'}</div>
                            </div>
                            ${getCustomFieldsDisplay(family.head, true)}
                            ${getAadharPhotosDisplay(family.head, true)}
                        </div>
                    </div>

                    <!-- Family Members -->
                    ${family.members.length > 0 ? `
                    <div>
                        <h3 class="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                            👥 <span class="ml-2">Family Members (${family.members.length})</span>
                        </h3>
                        <div class="family-tree-container">
                            ${membersHtml}
                        </div>
                    </div>
                    ` : '<div class="text-center py-8 text-gray-500">No additional family members</div>'}

                    <!-- Family Statistics -->
                    <div class="bg-gray-50 p-6 rounded-xl">
                        <h3 class="text-xl font-bold text-gray-800 mb-4">📊 Family Statistics</h3>
                        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                            <div class="text-center">
                                <div class="text-2xl font-bold text-blue-600">${family.totalMembers}</div>
                                <div class="text-sm text-gray-600">Total Members</div>
                            </div>
                            <div class="text-center">
                                <div class="text-2xl font-bold text-blue-600">${getFamilyGenderCount(family, 'male')}</div>
                                <div class="text-sm text-gray-600">Male</div>
                            </div>
                            <div class="text-center">
                                <div class="text-2xl font-bold text-pink-600">${getFamilyGenderCount(family, 'female')}</div>
                                <div class="text-sm text-gray-600">Female</div>
                            </div>
                            <div class="text-center">
                                <div class="text-2xl font-bold text-yellow-600">${getFamilyChildrenCount(family)}</div>
                                <div class="text-sm text-gray-600">Children</div>
                            </div>
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="flex justify-center space-x-4 pt-6 border-t-2 border-gray-100">
                        <button onclick="editFamily('${family.id}'); closeFamilyDetails();" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                            ✏️ Edit Family
                        </button>
                        <button onclick="deleteFamily('${family.id}'); closeFamilyDetails();" class="bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                            🗑️ Delete Family
                        </button>
                    </div>
                </div>
            `;

            document.getElementById('familyDetailsModal').classList.remove('hidden');
        }

        function closeFamilyDetails() {
            document.getElementById('familyDetailsModal').classList.add('hidden');
        }

        function getCustomFieldsDisplay(person, isHead = false) {
            const relevantFields = customFields.filter(field => {
                if (isHead) {
                    return field.target === 'head' || field.target === 'both';
                } else {
                    return field.target === 'members' || field.target === 'both';
                }
            });
            
            if (relevantFields.length === 0) return '';
            
            const textColor = isHead ? 'text-white/90' : 'text-gray-600';
            let html = `<div class="mt-4 pt-4 border-t ${isHead ? 'border-white/20' : 'border-gray-200'}">`;
            html += `<h6 class="text-sm font-medium ${textColor} mb-2">📋 Additional Information</h6>`;
            html += `<div class="grid grid-cols-1 md:grid-cols-2 gap-2 text-sm ${textColor}">`;
            
            relevantFields.forEach(field => {
                let displayValue = 'N/A';
                
                if (person[field.name] !== undefined && person[field.name] !== null && person[field.name] !== '') {
                    if (field.type === 'checkbox') {
                        displayValue = person[field.name] ? 'Yes' : 'No';
                    } else if (field.type === 'photo') {
                        if (person[field.name]) {
                            displayValue = `<img src="${person[field.name]}" alt="${field.name}" class="w-8 h-8 object-cover rounded border cursor-pointer inline-block" onclick="viewPhotoModal('${person[field.name]}', '${field.name}')"> Photo Available`;
                        } else {
                            displayValue = 'No photo';
                        }
                    } else {
                        displayValue = person[field.name];
                    }
                }
                
                const fieldIcon = field.type === 'photo' ? '📷' : field.type === 'email' ? '📧' : field.type === 'phone' ? '📞' : field.type === 'date' ? '📅' : field.type === 'checkbox' ? '☑️' : '📄';
                html += `<div class="flex items-center space-x-1"><span>${fieldIcon}</span><span class="font-medium">${field.name}:</span> <span>${displayValue}</span></div>`;
            });
            
            html += '</div></div>';
            return html;
        }

        function getAadharPhotosDisplay(person, isHead = false) {
            const hasPhotos = person.aadharFrontPhoto || person.aadharBackPhoto || person.otherIdFrontPhoto || person.otherIdBackPhoto;
            if (!hasPhotos) return '';
            
            const borderColor = isHead ? 'border-white/20' : 'border-gray-200';
            const textColor = isHead ? 'text-white/90' : 'text-gray-600';
            
            let html = `<div class="mt-4 pt-4 border-t ${borderColor}">`;
            html += `<h6 class="text-sm font-medium ${textColor} mb-3">📷 Identity Document Photos</h6>`;
            
            // Aadhar Photos
            if (person.aadharFrontPhoto || person.aadharBackPhoto) {
                html += `<div class="mb-3"><div class="text-xs ${textColor} font-medium mb-2">Aadhar Card</div>`;
                html += '<div class="grid grid-cols-2 gap-2">';
                
                if (person.aadharFrontPhoto) {
                    html += `
                        <div>
                            <div class="text-xs ${textColor} mb-1">Front</div>
                            <div class="relative">
                                <img src="${person.aadharFrontPhoto}" alt="Aadhar Front" class="w-full h-16 object-cover rounded border cursor-pointer" onclick="viewPhotoModal('${person.aadharFrontPhoto}', 'Aadhar Front Photo')">
                                <div class="absolute top-1 right-1 bg-green-500 text-white rounded-full w-3 h-3 flex items-center justify-center text-xs">✓</div>
                            </div>
                        </div>
                    `;
                } else {
                    html += `<div class="text-xs ${textColor}">Front: Not uploaded</div>`;
                }
                
                if (person.aadharBackPhoto) {
                    html += `
                        <div>
                            <div class="text-xs ${textColor} mb-1">Back</div>
                            <div class="relative">
                                <img src="${person.aadharBackPhoto}" alt="Aadhar Back" class="w-full h-16 object-cover rounded border cursor-pointer" onclick="viewPhotoModal('${person.aadharBackPhoto}', 'Aadhar Back Photo')">
                                <div class="absolute top-1 right-1 bg-green-500 text-white rounded-full w-3 h-3 flex items-center justify-center text-xs">✓</div>
                            </div>
                        </div>
                    `;
                } else {
                    html += `<div class="text-xs ${textColor}">Back: Not uploaded</div>`;
                }
                
                html += '</div></div>';
            }
            
            // Other ID Photos
            if (person.otherIdFrontPhoto || person.otherIdBackPhoto) {
                const idTypeName = getIdTypeName(person.otherIdType);
                html += `<div class="mb-3"><div class="text-xs ${textColor} font-medium mb-2">${idTypeName}</div>`;
                html += '<div class="grid grid-cols-2 gap-2">';
                
                if (person.otherIdFrontPhoto) {
                    html += `
                        <div>
                            <div class="text-xs ${textColor} mb-1">Front</div>
                            <div class="relative">
                                <img src="${person.otherIdFrontPhoto}" alt="${idTypeName} Front" class="w-full h-16 object-cover rounded border cursor-pointer" onclick="viewPhotoModal('${person.otherIdFrontPhoto}', '${idTypeName} Front Photo')">
                                <div class="absolute top-1 right-1 bg-blue-500 text-white rounded-full w-3 h-3 flex items-center justify-center text-xs">✓</div>
                            </div>
                        </div>
                    `;
                } else {
                    html += `<div class="text-xs ${textColor}">Front: Not uploaded</div>`;
                }
                
                if (person.otherIdBackPhoto) {
                    html += `
                        <div>
                            <div class="text-xs ${textColor} mb-1">Back</div>
                            <div class="relative">
                                <img src="${person.otherIdBackPhoto}" alt="${idTypeName} Back" class="w-full h-16 object-cover rounded border cursor-pointer" onclick="viewPhotoModal('${person.otherIdBackPhoto}', '${idTypeName} Back Photo')">
                                <div class="absolute top-1 right-1 bg-blue-500 text-white rounded-full w-3 h-3 flex items-center justify-center text-xs">✓</div>
                            </div>
                        </div>
                    `;
                } else {
                    html += `<div class="text-xs ${textColor}">Back: Not uploaded</div>`;
                }
                
                html += '</div></div>';
            }
            
            html += '</div>';
            return html;
        }

        function getIdTypeName(idType) {
            const idTypes = {
                'pan': 'PAN Card',
                'passport': 'Passport',
                'driving_license': 'Driving License',
                'voter_id': 'Voter ID',
                'ration_card': 'Ration Card',
                'bank_passbook': 'Bank Passbook',
                'birth_certificate': 'Birth Certificate',
                'school_id': 'School ID',
                'employee_id': 'Employee ID',
                'other': 'Other ID'
            };
            return idTypes[idType] || 'Other Identity Document';
        }

        function viewPhotoModal(photoSrc, title) {
            const modal = document.createElement('div');
            modal.className = 'fixed inset-0 modal-backdrop z-50 flex items-center justify-center p-4';
            modal.innerHTML = `
                <div class="bg-white rounded-2xl max-w-2xl w-full shadow-2xl">
                    <div class="bg-gradient-to-r from-blue-600 to-purple-600 p-4">
                        <div class="flex justify-between items-center">
                            <h3 class="text-xl font-bold text-white">${title}</h3>
                            <button onclick="this.closest('.modal-backdrop').remove()" class="text-white hover:text-gray-200 text-2xl font-bold">&times;</button>
                        </div>
                    </div>
                    <div class="p-6">
                        <img src="${photoSrc}" alt="${title}" class="w-full max-h-96 object-contain rounded-lg">
                    </div>
                </div>
            `;
            document.body.appendChild(modal);
        }

        function getFamilyGenderCount(family, gender) {
            let count = 0;
            if (family.head.gender === gender) count++;
            count += family.members.filter(member => member.gender === gender).length;
            return count;
        }

        function getFamilyChildrenCount(family) {
            let count = 0;
            const headAge = parseInt(family.head.age) || 0;
            if (headAge < 18) count++;
            count += family.members.filter(member => {
                const age = parseInt(member.age) || 0;
                return age < 18;
            }).length;
            return count;
        }

        function getAgeGroup(age) {
            if (age < 18) return 'Child (0-17)';
            if (age < 36) return 'Youth (18-35)';
            if (age < 60) return 'Adult (36-59)';
            return 'Senior (60+)';
        }

        function getGenderClass(gender) {
            switch (gender) {
                case 'male': return 'gender-male';
                case 'female': return 'gender-female';
                default: return 'gender-other';
            }
        }

        function updateStatistics() {
            const totalFamilies = familyData.length;
            const ageCalculationDate = document.getElementById('ageCalculationDate')?.value;
            let totalMembers = 0;
            let maleMembers = 0;
            let femaleMembers = 0;
            let childrenCount = 0;
            let seniorsCount = 0;
            let ageGroup0to17 = 0;
            let ageGroup18to35 = 0;
            let ageGroup36to59 = 0;
            let ageGroup60plus = 0;
            let activeRecords = 0;

            familyData.forEach(family => {
                // Count only active members (not removed)
                let activeMembersCount = family.members.filter(member => !member.removed).length;
                if (!family.head.removed) activeMembersCount += 1; // Add head if not removed
                totalMembers += activeMembersCount;
                activeRecords += activeMembersCount;
                
                // Count head (if not removed)
                if (!family.head.removed) {
                    if (family.head.gender === 'male') maleMembers++;
                    if (family.head.gender === 'female') femaleMembers++;
                    
                    const headAge = ageCalculationDate && family.head.dateOfBirth ? 
                        calculateAgeAsOf(family.head.dateOfBirth, ageCalculationDate) : 
                        (parseInt(family.head.age) || 0);
                    
                    if (headAge < 18) { childrenCount++; ageGroup0to17++; }
                    else if (headAge < 36) ageGroup18to35++;
                    else if (headAge < 60) ageGroup36to59++;
                    else { seniorsCount++; ageGroup60plus++; }
                }
                
                // Count active members only
                family.members.forEach(member => {
                    if (member.removed) return; // Skip removed members
                    
                    if (member.gender === 'male') maleMembers++;
                    if (member.gender === 'female') femaleMembers++;
                    
                    const memberAge = ageCalculationDate && member.dateOfBirth ? 
                        calculateAgeAsOf(member.dateOfBirth, ageCalculationDate) : 
                        (parseInt(member.age) || 0);
                    
                    if (memberAge < 18) { childrenCount++; ageGroup0to17++; }
                    else if (memberAge < 36) ageGroup18to35++;
                    else if (memberAge < 60) ageGroup36to59++;
                    else { seniorsCount++; ageGroup60plus++; }
                });
            });

            // Update main statistics
            document.getElementById('totalFamilies').textContent = totalFamilies;
            document.getElementById('totalMembers').textContent = totalMembers;
            document.getElementById('maleMembers').textContent = maleMembers;
            document.getElementById('femaleMembers').textContent = femaleMembers;
            document.getElementById('childrenCount').textContent = childrenCount;
            document.getElementById('seniorsCount').textContent = seniorsCount;
            document.getElementById('ageGroup0to17').textContent = ageGroup0to17;
            document.getElementById('ageGroup18to35').textContent = ageGroup18to35;
            document.getElementById('ageGroup36to59').textContent = ageGroup36to59;
            document.getElementById('ageGroup60plus').textContent = ageGroup60plus;
            
            // Update header statistics
            const headerTotalFamilies = document.getElementById('headerTotalFamilies');
            const headerTotalMembers = document.getElementById('headerTotalMembers');
            const headerActiveRecords = document.getElementById('headerActiveRecords');
            
            if (headerTotalFamilies) headerTotalFamilies.textContent = totalFamilies;
            if (headerTotalMembers) headerTotalMembers.textContent = totalMembers;
            if (headerActiveRecords) headerActiveRecords.textContent = activeRecords;
        }

        function displayFamilyTrees(filteredData = null) {
            const container = document.getElementById('familyTreeView');
            const dataToDisplay = filteredData || familyData;

            if (dataToDisplay.length === 0) {
                container.innerHTML = `
                    <div class="family-card p-12 text-center">
                        <div class="text-6xl mb-4">🌳</div>
                        <h3 class="text-2xl font-bold text-gray-800 mb-2">No Family Records Found</h3>
                        <p class="text-gray-600 mb-6">Start by adding your first family to create a family tree.</p>
                        <button onclick="showAddFamily()" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl font-medium transition-all">
                            ➕ Add First Family
                        </button>
                    </div>
                `;
                return;
            }

            container.innerHTML = dataToDisplay.map(family => {
                const headGenderIcon = family.head.gender === 'male' ? '👨' : family.head.gender === 'female' ? '👩' : '👤';
                const headAgeGroup = getAgeGroup(parseInt(family.head.age) || 0);
                
                let membersPreview = '';
                if (family.members.length > 0) {
                    const previewMembers = family.members.slice(0, 3);
                    membersPreview = previewMembers.map(member => {
                        const memberIcon = member.gender === 'male' ? '👨' : member.gender === 'female' ? '👩' : '👤';
                        return `
                            <div class="flex items-center space-x-2 text-sm">
                                <span>${memberIcon}</span>
                                <span class="font-medium">${member.fullName}</span>
                                <span class="text-gray-500">(${member.relationship})</span>
                            </div>
                        `;
                    }).join('');
                    
                    if (family.members.length > 3) {
                        membersPreview += `<div class="text-sm text-gray-500">+${family.members.length - 3} more members</div>`;
                    }
                }
                
                return `
                    <div class="family-card p-6 ${getGenderClass(family.head.gender)}">
                        <div class="flex items-start justify-between mb-6">
                            <div class="flex items-center space-x-4">
                                ${family.head.candidatePhoto ? 
                                    `<div class="w-16 h-16 rounded-full overflow-hidden border-3 border-blue-500 cursor-pointer relative">
                                        <img src="${family.head.candidatePhoto}" alt="Head Photo" class="w-full h-full object-cover">
                                        <div class="absolute -top-1 -right-1 w-6 h-6 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                                            👑
                                        </div>
                                    </div>` : 
                                    `<div class="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-2xl font-bold">
                                        👑
                                    </div>`
                                }
                                <div>
                                    <h3 class="text-xl font-bold text-gray-800">${family.head.fullName}</h3>
                                    <p class="text-gray-600">Head of Family</p>
                                    <p class="text-sm text-gray-500">📞 ${family.head.contactNumber} • 🏠 ${family.head.houseNumber}</p>
                                    <p class="text-sm text-gray-500">Age: ${family.head.age || 'N/A'} • ${headAgeGroup}</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-2xl font-bold text-blue-600">${family.totalMembers}</div>
                                <div class="text-sm text-gray-500">Total Members</div>
                            </div>
                        </div>
                        
                        ${family.members.length > 0 ? `
                        <div class="mb-6">
                            <h4 class="font-semibold text-gray-700 mb-3">👥 Family Members:</h4>
                            <div class="space-y-2 max-h-32 overflow-y-auto custom-scrollbar">
                                ${membersPreview}
                            </div>
                        </div>
                        ` : ''}
                        
                        <div class="grid grid-cols-3 gap-4 mb-6 text-center">
                            <div class="bg-blue-50 p-3 rounded-lg">
                                <div class="text-lg font-bold text-blue-600">${getFamilyGenderCount(family, 'male')}</div>
                                <div class="text-xs text-gray-600">Male</div>
                            </div>
                            <div class="bg-pink-50 p-3 rounded-lg">
                                <div class="text-lg font-bold text-pink-600">${getFamilyGenderCount(family, 'female')}</div>
                                <div class="text-xs text-gray-600">Female</div>
                            </div>
                            <div class="bg-yellow-50 p-3 rounded-lg">
                                <div class="text-lg font-bold text-yellow-600">${getFamilyChildrenCount(family)}</div>
                                <div class="text-xs text-gray-600">Children</div>
                            </div>
                        </div>
                        
                        <div class="flex space-x-2">
                            <button onclick="viewFamilyDetails('${family.id}')" class="flex-1 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                👁️ View Tree
                            </button>
                            <button onclick="editFamily('${family.id}')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                ✏️ Edit
                            </button>
                            <button onclick="deleteFamily('${family.id}')" class="flex-1 bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all">
                                🗑️ Delete
                            </button>
                        </div>
                    </div>
                `;
            }).join('');
        }

        function searchFamilies() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const genderFilter = document.getElementById('genderFilter').value;
            const ageGroupFilter = document.getElementById('ageGroupFilter').value;
            const statusFilter = document.getElementById('statusFilter').value;
            const ageCalculationDate = document.getElementById('ageCalculationDate').value;

            let filteredData = familyData.filter(family => {
                // Search in head and members (including removed members)
                const matchesSearch = !searchTerm || 
                    family.head.fullName.toLowerCase().includes(searchTerm) ||
                    family.head.contactNumber.includes(searchTerm) ||
                    family.head.aadharNumber.includes(searchTerm) ||
                    family.head.houseNumber.toLowerCase().includes(searchTerm) ||
                    family.members.some(member => 
                        member.fullName.toLowerCase().includes(searchTerm) ||
                        (member.contactNumber && member.contactNumber.includes(searchTerm)) ||
                        (member.aadharNumber && member.aadharNumber.includes(searchTerm))
                    ) ||
                    (family.removedMembers && family.removedMembers.some(member => 
                        member.fullName.toLowerCase().includes(searchTerm) ||
                        (member.contactNumber && member.contactNumber.includes(searchTerm)) ||
                        (member.aadharNumber && member.aadharNumber.includes(searchTerm))
                    ));

                // Gender filter
                const matchesGender = !genderFilter || 
                    family.head.gender === genderFilter ||
                    family.members.some(member => member.gender === genderFilter) ||
                    (family.removedMembers && family.removedMembers.some(member => member.gender === genderFilter));

                // Age group filter with custom date
                let matchesAgeGroup = true;
                if (ageGroupFilter) {
                    const [minAge, maxAge] = ageGroupFilter === '60+' ? [60, 999] : ageGroupFilter.split('-').map(Number);
                    
                    const headAge = ageCalculationDate && family.head.dateOfBirth ? 
                        calculateAgeAsOf(family.head.dateOfBirth, ageCalculationDate) : 
                        (parseInt(family.head.age) || 0);
                    
                    matchesAgeGroup = (headAge >= minAge && (maxAge === 999 || headAge <= maxAge)) ||
                        family.members.some(member => {
                            const memberAge = ageCalculationDate && member.dateOfBirth ? 
                                calculateAgeAsOf(member.dateOfBirth, ageCalculationDate) : 
                                (parseInt(member.age) || 0);
                            return memberAge >= minAge && (maxAge === 999 || memberAge <= maxAge);
                        }) ||
                        (family.removedMembers && family.removedMembers.some(member => {
                            const memberAge = ageCalculationDate && member.dateOfBirth ? 
                                calculateAgeAsOf(member.dateOfBirth, ageCalculationDate) : 
                                (parseInt(member.age) || 0);
                            return memberAge >= minAge && (maxAge === 999 || memberAge <= maxAge);
                        }));
                }

                // Status filter
                let matchesStatus = true;
                if (statusFilter === 'active') {
                    // Only show families with active members
                    matchesStatus = family.members.length > 0 || !family.head.removed;
                } else if (statusFilter === 'removed') {
                    // Only show families with removed members
                    matchesStatus = (family.removedMembers && family.removedMembers.length > 0) || family.head.removed;
                }

                return matchesSearch && matchesGender && matchesAgeGroup && matchesStatus;
            });

            displayFamilyTrees(filteredData);
        }

        function filterFamilies() {
            searchFamilies(); // Reuse search function as it handles all filters
        }

        function exportData() {
            if (familyData.length === 0) {
                showNotification('❌ No data to export!', 'error');
                return;
            }

            const exportData = [];
            
            familyData.forEach(family => {
                // Add head data
                const headRow = {
                    'Family ID': family.id,
                    'Member Type': 'Head',
                    'Full Name': family.head.fullName,
                    'Age': family.head.age || '',
                    'Gender': family.head.gender || '',
                    'Contact Number': family.head.contactNumber,
                    'Aadhar Number': family.head.aadharNumber,
                    'House Number': family.head.houseNumber,
                    'Relationship': 'Head of Family',
                    'Occupation': family.head.occupation || '',
                    'Education': family.head.education || '',
                    'Total Family Members': family.totalMembers,
                    'Created Date': new Date(family.createdAt).toLocaleDateString()
                };
                
                // Add custom fields
                customFields.forEach(field => {
                    headRow[field.name] = family.head[field.name] || '';
                });
                
                exportData.push(headRow);
                
                // Add members data
                family.members.forEach(member => {
                    const memberRow = {
                        'Family ID': family.id,
                        'Member Type': 'Member',
                        'Full Name': member.fullName,
                        'Age': member.age || '',
                        'Gender': member.gender || '',
                        'Contact Number': member.contactNumber || '',
                        'Aadhar Number': member.aadharNumber || '',
                        'House Number': family.head.houseNumber,
                        'Relationship': member.relationship || '',
                        'Occupation': member.occupation || '',
                        'Education': member.education || '',
                        'Total Family Members': family.totalMembers,
                        'Created Date': new Date(family.createdAt).toLocaleDateString()
                    };
                    
                    // Add custom fields
                    customFields.forEach(field => {
                        memberRow[field.name] = member[field.name] || '';
                    });
                    
                    exportData.push(memberRow);
                });
            });

            const csv = convertToCSV(exportData);
            downloadCSV(csv, 'family_tree_data.csv');
            showNotification('📊 Data exported successfully!', 'success');
        }

        function convertToCSV(data) {
            if (data.length === 0) return '';
            
            const headers = Object.keys(data[0]);
            const csvContent = [
                headers.join(','),
                ...data.map(row => headers.map(header => `"${row[header] || ''}"`).join(','))
            ].join('\n');
            return csvContent;
        }

        function downloadCSV(csv, filename) {
            const blob = new Blob([csv], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.setAttribute('hidden', '');
            a.setAttribute('href', url);
            a.setAttribute('download', filename);
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 p-4 rounded-xl text-white font-medium z-50 transform transition-all duration-300 translate-x-full`;
            
            if (type === 'success') {
                notification.className += ' bg-green-600';
            } else if (type === 'error') {
                notification.className += ' bg-red-600';
            } else {
                notification.className += ' bg-blue-600';
            }
            
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);
            
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }

        // Advanced Tools Functions
        function showAdvancedTools() {
            updateAdvancedToolsStats();
            document.getElementById('advancedToolsModal').classList.remove('hidden');
        }

        function closeAdvancedTools() {
            document.getElementById('advancedToolsModal').classList.add('hidden');
        }

        function updateAdvancedToolsStats() {
            const totalMembers = familyData.reduce((sum, family) => sum + family.totalMembers, 0);
            const dataSize = JSON.stringify(familyData).length + JSON.stringify(customFields).length;
            
            document.getElementById('statsTotal').textContent = familyData.length;
            document.getElementById('statsMembers').textContent = totalMembers;
            document.getElementById('statsFields').textContent = customFields.length;
            document.getElementById('statsSize').textContent = Math.round(dataSize / 1024) + ' KB';
        }

        function bulkDataOperations() {
            showNotification('📋 Bulk operations panel opened - Select multiple records for mass operations', 'info');
            // Implementation for bulk operations
        }

        function dataValidation() {
            let issues = [];
            familyData.forEach((family, index) => {
                if (!family.head.fullName) issues.push(`Family ${index + 1}: Head missing name`);
                if (!family.head.contactNumber) issues.push(`Family ${index + 1}: Head missing contact`);
                if (!family.head.aadharNumber) issues.push(`Family ${index + 1}: Head missing Aadhar`);
                
                family.members.forEach((member, mIndex) => {
                    if (!member.fullName) issues.push(`Family ${index + 1}, Member ${mIndex + 1}: Missing name`);
                });
            });
            
            if (issues.length === 0) {
                showNotification('✅ Data validation complete - No issues found!', 'success');
            } else {
                showNotification(`⚠️ Found ${issues.length} data validation issues. Check console for details.`, 'error');
                console.log('Data Validation Issues:', issues);
            }
        }

        function duplicateDetection() {
            const duplicates = [];
            const seen = new Set();
            
            familyData.forEach((family, index) => {
                const key = `${family.head.fullName}-${family.head.contactNumber}`;
                if (seen.has(key)) {
                    duplicates.push(`Potential duplicate: Family ${index + 1} (${family.head.fullName})`);
                }
                seen.add(key);
            });
            
            if (duplicates.length === 0) {
                showNotification('🔍 Duplicate detection complete - No duplicates found!', 'success');
            } else {
                showNotification(`🔍 Found ${duplicates.length} potential duplicates. Check console for details.`, 'error');
                console.log('Potential Duplicates:', duplicates);
            }
        }

        function advancedReports() {
            const report = {
                totalFamilies: familyData.length,
                totalMembers: familyData.reduce((sum, family) => sum + family.totalMembers, 0),
                averageFamilySize: (familyData.reduce((sum, family) => sum + family.totalMembers, 0) / familyData.length).toFixed(2),
                genderDistribution: {
                    male: 0,
                    female: 0,
                    other: 0
                },
                ageGroups: {
                    children: 0,
                    youth: 0,
                    adults: 0,
                    seniors: 0
                }
            };
            
            familyData.forEach(family => {
                // Count head
                if (family.head.gender === 'male') report.genderDistribution.male++;
                else if (family.head.gender === 'female') report.genderDistribution.female++;
                else report.genderDistribution.other++;
                
                const headAge = parseInt(family.head.age) || 0;
                if (headAge < 18) report.ageGroups.children++;
                else if (headAge < 36) report.ageGroups.youth++;
                else if (headAge < 60) report.ageGroups.adults++;
                else report.ageGroups.seniors++;
                
                // Count members
                family.members.forEach(member => {
                    if (member.gender === 'male') report.genderDistribution.male++;
                    else if (member.gender === 'female') report.genderDistribution.female++;
                    else report.genderDistribution.other++;
                    
                    const memberAge = parseInt(member.age) || 0;
                    if (memberAge < 18) report.ageGroups.children++;
                    else if (memberAge < 36) report.ageGroups.youth++;
                    else if (memberAge < 60) report.ageGroups.adults++;
                    else report.ageGroups.seniors++;
                });
            });
            
            console.log('Advanced Report:', report);
            showNotification('📈 Advanced report generated! Check console for detailed analytics.', 'success');
        }

        function dataImportExport() {
            showNotification('💾 Advanced import/export tools - Support for CSV, JSON, and Excel formats', 'info');
            // Implementation for advanced import/export
        }

        function systemMaintenance() {
            // Clean up removed members older than 1 year
            let cleanedCount = 0;
            familyData.forEach(family => {
                if (family.removedMembers) {
                    const oneYearAgo = new Date();
                    oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);
                    
                    const originalCount = family.removedMembers.length;
                    family.removedMembers = family.removedMembers.filter(member => {
                        const removalDate = new Date(member.removalData?.removedAt || 0);
                        return removalDate > oneYearAgo;
                    });
                    cleanedCount += originalCount - family.removedMembers.length;
                }
            });
            
            localStorage.setItem('familyTreeData', JSON.stringify(familyData));
            showNotification(`🔧 System maintenance complete! Cleaned ${cleanedCount} old removed records.`, 'success');
        }

        function resetAllData() {
            if (confirm('⚠️ WARNING: This will permanently delete ALL family data, custom fields, and system configuration. This action cannot be undone!\n\nType "DELETE ALL" to confirm:')) {
                const confirmation = prompt('Type "DELETE ALL" to confirm complete data reset:');
                if (confirmation === 'DELETE ALL') {
                    familyData.length = 0;
                    customFields.length = 0;
                    localStorage.removeItem('familyTreeData');
                    localStorage.removeItem('customFields');
                    localStorage.removeItem('systemFields');
                    localStorage.removeItem('systemTheme');
                    updateStatistics();
                    displayFamilyTrees();
                    showNotification('🗑️ All data has been permanently deleted!', 'success');
                }
            }
        }

        function createBackup() {
            const backup = {
                timestamp: new Date().toISOString(),
                version: '1.0',
                familyData: familyData,
                customFields: customFields,
                systemFields: systemFields,
                theme: currentTheme
            };
            
            const backupJson = JSON.stringify(backup, null, 2);
            const blob = new Blob([backupJson], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `family_tree_backup_${new Date().toISOString().split('T')[0]}.json`;
            a.click();
            URL.revokeObjectURL(url);
            
            showNotification('💾 Backup created and downloaded successfully!', 'success');
        }

        function restoreBackup() {
            const input = document.createElement('input');
            input.type = 'file';
            input.accept = '.json';
            input.onchange = function(e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        try {
                            const backup = JSON.parse(e.target.result);
                            
                            if (confirm('This will replace all current data with the backup. Continue?')) {
                                familyData.length = 0;
                                familyData.push(...backup.familyData);
                                customFields.length = 0;
                                customFields.push(...backup.customFields);
                                
                                if (backup.systemFields) {
                                    systemFields = backup.systemFields;
                                    localStorage.setItem('systemFields', JSON.stringify(systemFields));
                                }
                                
                                if (backup.theme) {
                                    applyTheme(backup.theme);
                                }
                                
                                localStorage.setItem('familyTreeData', JSON.stringify(familyData));
                                localStorage.setItem('customFields', JSON.stringify(customFields));
                                
                                updateStatistics();
                                displayFamilyTrees();
                                showNotification('📥 Backup restored successfully!', 'success');
                            }
                        } catch (error) {
                            showNotification('❌ Invalid backup file format!', 'error');
                        }
                    };
                    reader.readAsText(file);
                }
            };
            input.click();
        }

        function saveSystemConfig() {
            const config = {
                autoSaveInterval: document.getElementById('autoSaveInterval').value,
                maxRecordsPerPage: document.getElementById('maxRecordsPerPage').value,
                enableDataValidation: document.getElementById('enableDataValidation').checked,
                enableAutoBackup: document.getElementById('enableAutoBackup').checked
            };
            
            localStorage.setItem('systemConfig', JSON.stringify(config));
            showNotification('⚙️ System configuration saved successfully!', 'success');
        }

        // Event listeners
        document.getElementById('adminPassword').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') adminLogin();
        });

        // Close modals when clicking outside
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal-backdrop')) {
                closeFamilyModal();
                closeFamilyDetails();
                closeColumnManager();
                closeMemberRemovalModal();
                closeHeadSelectionModal();
                closeThemeManager();
                closeFirebaseManager();
                closeAdvancedTools();
                closePageTitleManager();
            }
        });

        // Handle window resize for mobile optimization
        window.addEventListener('resize', function() {
            initializeMobileOptimizations();
        });

        // Prevent double-tap zoom on iOS
        let lastTouchEnd = 0;
        document.addEventListener('touchend', function (event) {
            const now = (new Date()).getTime();
            if (now - lastTouchEnd <= 300) {
                event.preventDefault();
            }
            lastTouchEnd = now;
        }, false);
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'98adb08533208996',t:'MTc1OTg0MzE2MC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
